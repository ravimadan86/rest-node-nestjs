var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.729,1,2.814]],["body/controllers/AppController.html",[0,2.499,1,4.067,2,2.273,3,0.727,4,0.695,5,0.514,6,4.224,7,1.025,8,2.02,9,5.343,10,4.877,11,2.235,12,4.515,13,2.329,14,2.389,15,0.015,16,1.305,17,4.877,18,1.665,19,1.472,20,0.984,21,1.736,22,4.165,23,1.736,24,2.74,25,1.045,26,1.305,27,3.794,28,2.819,29,3.911,30,4.224,31,2.659,32,3.689,33,4.224,34,4.877,35,0.695,36,0.601,37,2.273,38,2.615,39,2.819,40,4.224,41,3.794,42,3.002,43,1.533,44,4.224,45,0.012,46,0.012]],["title/injectables/AppLogger.html",[32,2.327,47,1.398]],["body/injectables/AppLogger.html",[3,0.842,4,0.486,5,0.359,7,0.717,8,1.588,15,0.016,16,1.858,18,2.303,19,2.037,20,1.401,21,2.605,23,2.311,25,0.804,26,0.913,32,2.644,35,0.486,36,0.42,43,1.072,45,0.009,46,0.009,47,1.588,48,1.76,49,2.652,50,1.965,51,4.018,52,4.154,53,4.781,54,2.49,55,3.452,56,5.323,57,4.376,58,1.76,59,3.452,60,2.864,61,4.849,62,1.164,63,3.41,64,3.41,65,3.35,66,5.624,67,4.849,68,3.41,69,4.849,70,3.41,71,3.41,72,3.41,73,4.849,74,3.41,75,4.849,76,1.514,77,4.849,78,2.912,79,4.849,80,2.428,81,3.41,82,2.953,83,2.056,84,4.2,85,1.67,86,2.099,87,2.154,88,3.41,89,6.494,90,6.494,91,4.849,92,4.849,93,4.018,94,1.782,95,3.41,96,3.41,97,2.652,98,2.056,99,3.41,100,3.41,101,2.953,102,3.41,103,3.41,104,3.41,105,3.41,106,3.41,107,3.41,108,3.41,109,3.41]],["title/modules/AppModule.html",[110,0.934,111,2.467]],["body/modules/AppModule.html",[1,4.282,2,2.719,3,0.667,4,0.637,5,0.471,15,0.015,25,1.077,26,1.197,29,4.232,30,3.874,35,0.637,36,0.551,45,0.011,46,0.011,110,1.278,111,4.598,112,1.465,113,2.474,114,3.874,115,3.874,116,3.874,117,4.828,118,4.232,119,4.828,120,4.828,121,4.232,122,3.592,123,2.586,124,2.191,125,4.473,126,3.011,127,2.592,128,4.473,129,4.473,130,3.874,131,4.473,132,4.473,133,4.473,134,4.473]],["title/injectables/AppService.html",[29,2.467,47,1.398]],["body/injectables/AppService.html",[3,0.834,4,0.796,5,0.589,7,1.175,8,2.197,9,6.458,15,0.015,16,1.496,23,1.989,25,0.796,26,1.496,29,3.878,35,0.796,36,0.689,43,1.757,45,0.013,46,0.013,47,2.197,48,2.885,51,5.119,94,1.946,135,4.841,136,5.59,137,5.59,138,5.59]],["title/controllers/AuthController.html",[0,1.729,139,3.038]],["body/controllers/AuthController.html",[0,1.799,2,2.069,3,0.662,4,0.632,5,0.468,7,0.934,8,1.902,11,2.158,12,4.385,13,2.248,14,2.175,15,0.016,16,1.189,18,1.516,19,1.341,20,1.172,21,1.58,22,3.984,23,1.58,24,2.579,25,1.041,26,1.189,27,3.454,28,2.567,31,2.421,35,0.632,36,0.547,37,2.069,38,1.883,43,1.826,45,0.011,46,0.011,83,1.883,87,2.579,139,4.135,140,3.846,141,3.846,142,2.421,143,3.17,144,5.03,145,4.441,146,4.441,147,4.526,148,4.441,149,3.846,150,5.03,151,2.928,152,2.292,153,2.292,154,3.984,155,3.846,156,3.846,157,4.441,158,4.441,159,4.441,160,4.441,161,2.734,162,1.237,163,3.454,164,4.441,165,2.421,166,4.441,167,4.441,168,3.162,169,2.928,170,3.454,171,3.846]],["title/modules/AuthModule.html",[110,0.934,117,2.814]],["body/modules/AuthModule.html",[2,2.719,3,0.667,4,0.637,5,0.471,15,0.016,25,1.077,26,1.197,35,0.637,36,0.551,43,1.406,45,0.011,46,0.011,60,3.026,62,1.527,76,1.987,110,1.278,112,1.465,113,2.474,117,5.087,121,4.232,122,3.592,123,2.586,124,2.191,126,3.011,127,2.884,130,3.874,139,4.624,143,2.191,154,4.507,155,3.874,172,3.874,173,4.473,174,3.874,175,4.828,176,4.473,177,3.998,178,4.473,179,3.48,180,5.836,181,3.185,182,4.473,183,4.473,184,4.473,185,3.185,186,3.874,187,4.473,188,3.185,189,4.473]],["title/injectables/AuthService.html",[47,1.398,154,2.627]],["body/injectables/AuthService.html",[3,0.596,4,0.569,5,0.421,7,0.84,8,1.773,15,0.016,16,1.643,18,2.096,19,1.854,20,1.239,21,2.185,23,1.927,24,2.923,25,1.01,26,1.07,35,0.569,36,0.492,37,1.862,38,2.295,39,2.31,43,1.702,45,0.01,46,0.01,47,1.773,48,2.062,58,2.062,87,2.923,98,1.694,143,3.007,144,4.689,147,4.781,154,3.333,156,3.461,161,2.46,162,1.711,165,2.179,169,2.635,170,4.211,179,3.109,190,3.461,191,4.211,192,3.996,193,3.659,194,7.252,195,3.996,196,5.414,197,3.996,198,5.414,199,3.996,200,3.996,201,3.996,202,2.46,203,3.109,204,3.109,205,3.461,206,3.996,207,3.996,208,3.996,209,5.414,210,3.996,211,3.996,212,2.635,213,2.062,214,3.996,215,2.31,216,3.996,217,1.775,218,3.996,219,5.414,220,3.996,221,3.996,222,4.211,223,3.996,224,3.461,225,3.996,226,3.996]],["title/modules/CoreModule.html",[110,0.934,118,2.467]],["body/modules/CoreModule.html",[3,0.749,4,0.716,5,0.529,15,0.015,25,1.054,26,1.345,35,0.716,36,0.619,45,0.012,46,0.012,62,2.145,76,2.231,110,1.376,112,1.645,113,2.664,118,4.277,122,3.869,123,2.904,124,2.461,126,3.243,127,2.231,177,3.093,227,4.351,228,4.351,229,5.452,230,5.024,231,3.869,232,4.889,233,6.285,234,3.908,235,4.351,236,4.889,237,4.351,238,4.351,239,5.024,240,5.024,241,4.351,242,3.243,243,4.351,244,4.351]],["title/classes/CreateUserDto.html",[36,0.526,245,2.467]],["body/classes/CreateUserDto.html",[3,0.747,4,0.714,5,0.528,7,1.053,14,3.517,15,0.015,16,1.922,20,1.449,25,0.894,28,2.896,35,0.714,36,0.617,45,0.012,46,0.012,50,2.542,94,2.244,215,3.96,217,3.042,245,3.627,246,2.896,247,4.339,248,4.517,249,3.355,250,5.434,251,5.01,252,5.434,253,5.01,254,5.434,255,5.01,256,5.434,257,5.01,258,3.897,259,3.084,260,3.567]],["title/modules/DatabaseModule.html",[110,0.934,119,2.814]],["body/modules/DatabaseModule.html",[3,0.747,4,0.714,5,0.528,15,0.016,20,1.011,25,1.023,26,1.341,35,0.714,36,0.617,45,0.012,46,0.012,60,3.192,62,1.71,76,2.225,110,1.374,112,1.641,119,4.137,127,2.786,162,1.748,177,3.862,185,3.567,188,3.567,202,3.084,242,3.238,249,2.454,261,5.01,262,4.339,263,3.304,264,4.339,265,3.304,266,2.586,267,4.339,268,2.586,269,5.01,270,3.567,271,4.339,272,4.339,273,2.454,274,4.339,275,2.586,276,3.897,277,4.339,278,3.084,279,3.304,280,2.896,281,4.339,282,5.01,283,5.01]],["title/modules/EmailHandlerModule.html",[110,0.934,284,2.814]],["body/modules/EmailHandlerModule.html",[3,0.797,4,0.761,5,0.563,15,0.015,25,0.93,26,1.431,35,0.761,36,0.659,45,0.013,46,0.013,110,1.43,112,1.751,113,2.769,122,4.02,123,3.09,124,2.618,126,3.37,231,4.02,284,5.116,285,4.63,286,4.63,287,4.63,288,4.931,289,5.346,290,5.346]],["title/injectables/EmailHandlerService.html",[47,1.398,288,2.627]],["body/injectables/EmailHandlerService.html",[3,0.875,4,0.439,5,0.325,7,0.648,8,1.477,15,0.016,16,1.57,18,2.002,19,1.885,20,1.184,21,2.088,23,1.897,24,3.067,25,0.959,26,0.825,35,0.439,36,0.38,37,1.437,38,1.307,39,3.769,43,1.676,45,0.009,46,0.009,47,1.477,48,1.591,54,1.249,58,1.591,59,2.195,60,2.734,62,1.539,66,3.906,76,1.369,85,1.51,87,2.605,94,1.701,98,1.307,101,3.906,142,1.681,143,3.506,162,0.859,165,2.459,242,2.327,266,1.591,268,1.591,280,1.782,288,2.776,291,2.671,292,4.51,293,4.51,294,3.906,295,3.084,296,4.51,297,3.608,298,3.084,299,5.332,300,4.51,301,4.116,302,2.612,303,3.084,304,2.327,305,1.898,306,4.51,307,3.391,308,3.084,309,3.906,310,3.508,311,3.906,312,3.084,313,4.147,314,3.082,315,2.033,316,1.369,317,4.51,318,4.51,319,2.671,320,1.898,321,3.084,322,3.084,323,3.084,324,3.084,325,1.898,326,3.084,327,1.898,328,3.084,329,3.084,330,3.084,331,3.084,332,3.084,333,1.782,334,3.084,335,2.776,336,2.671,337,2.399,338,2.671,339,3.084,340,4.51,341,3.084,342,3.084,343,3.084,344,3.084,345,3.906,346,4.51,347,3.084,348,4.51,349,3.084,350,3.084,351,3.084,352,3.084,353,3.211,354,2.459,355,3.508,356,4.51,357,3.084,358,4.618,359,4.51,360,3.084,361,4.51,362,3.084,363,2.101,364,2.033,365,1.782,366,3.084,367,3.084,368,3.084,369,3.084,370,2.671]],["title/interfaces/IMailAuth.html",[371,1.237,372,2.627]],["body/interfaces/IMailAuth.html",[3,0.751,4,0.718,5,0.531,7,1.059,15,0.015,20,1.27,35,0.978,45,0.012,46,0.012,50,2.551,65,2.237,94,2.323,142,2.747,162,2.004,266,2.6,268,2.6,297,2.912,302,2.468,305,3.101,307,2.912,314,2.912,316,2.237,320,3.101,325,4.428,333,2.912,354,2.747,363,2.347,364,3.322,365,2.912,371,2.086,372,4.227,373,3.322,374,3.322,375,2.747,376,2.468,377,3.587,378,3.322,379,2.468]],["title/interfaces/IMailConfig.html",[297,2.467,371,1.237]],["body/interfaces/IMailConfig.html",[3,0.724,4,0.691,5,0.511,7,1.02,15,0.015,20,1.432,35,0.961,45,0.012,46,0.012,50,2.491,65,2.155,94,2.313,142,3.869,162,1.352,266,3.662,268,3.662,297,3.554,302,2.376,305,2.986,307,2.804,314,2.804,316,2.155,320,4.368,325,2.986,333,2.804,354,2.645,363,2.261,364,3.199,365,2.804,371,2.058,372,4.368,373,3.199,374,3.199,375,3.68,376,2.376,377,3.454,378,3.199,379,2.376]],["title/interfaces/IMailOptions.html",[307,2.467,371,1.237]],["body/interfaces/IMailOptions.html",[3,0.679,4,0.648,5,0.479,7,0.957,15,0.015,20,1.484,21,2.754,35,0.933,45,0.011,46,0.011,50,2.391,65,2.021,94,2.335,142,2.481,162,1.268,266,2.348,268,2.348,297,2.631,302,3.208,305,4.265,307,3.411,314,2.631,316,2.021,320,2.801,325,2.801,333,4.005,354,3.778,363,2.121,364,3.001,365,2.631,371,2.009,372,3.632,373,3.001,374,3.001,375,2.481,376,2.229,377,4.933,378,4.569,379,3.208]],["title/interfaces/IMailResponse.html",[314,2.467,371,1.237]],["body/interfaces/IMailResponse.html",[3,0.72,4,0.687,5,0.508,7,1.015,15,0.015,20,1.429,21,2.659,35,0.959,45,0.012,46,0.012,50,2.483,65,3.145,94,2.292,142,2.631,162,1.344,266,2.49,268,2.49,297,2.79,302,2.364,305,2.971,307,2.79,314,3.542,316,2.143,320,2.971,325,2.971,333,2.79,354,2.631,363,3.3,364,4.67,365,4.094,371,2.054,372,3.772,373,3.182,374,3.182,375,2.631,376,3.298,377,3.436,378,3.182,379,2.364]],["title/injectables/JwtAuthGuard.html",[47,1.398,380,3.038]],["body/injectables/JwtAuthGuard.html",[3,0.874,4,0.834,5,0.617,15,0.015,25,0.983,26,1.568,35,0.834,36,0.722,45,0.013,46,0.013,47,2.259,48,3.023,181,4.17,380,4.912,381,5.073,382,5.857,383,3.606,384,5.857]],["title/injectables/JwtStrategy.html",[47,1.398,175,2.814]],["body/injectables/JwtStrategy.html",[3,0.712,4,0.68,5,0.503,7,1.004,8,1.994,15,0.015,16,1.629,18,2.078,19,1.838,20,1.228,21,2.166,23,1.7,25,1.005,26,1.278,35,0.68,36,0.589,37,2.225,38,2.025,43,1.501,45,0.012,46,0.012,47,1.994,48,2.465,58,2.465,59,3.4,60,3.288,62,2.078,76,2.121,143,3.282,175,4.013,181,3.4,212,3.149,213,2.465,215,2.761,217,2.121,280,2.761,383,2.94,385,4.136,386,4.735,387,4.776,388,6.087,389,4.776,390,4.776,391,4.776,392,4.776,393,4.136,394,3.715,395,3.4,396,4.776,397,4.136,398,4.776,399,4.776,400,4.776,401,4.776,402,4.776,403,4.776,404,4.776,405,4.776]],["title/interfaces/Request.html",[11,1.342,371,1.237]],["body/interfaces/Request.html",[3,0.779,4,0.744,5,0.55,7,1.098,8,2.109,11,2.428,15,0.015,16,1.398,20,1.054,23,1.859,25,0.744,35,0.744,45,0.012,46,0.012,50,2.609,162,2.123,302,3.666,316,2.32,371,1.515,383,3.964,406,4.525,407,6.98,408,5.224,409,5.009,410,3.569,411,4.584,412,2.696]],["title/guards/RequestGuard.html",[413,2.814,414,3.038]],["body/guards/RequestGuard.html",[3,0.398,4,0.38,5,0.281,7,0.561,8,1.326,11,2.207,13,2.359,15,0.016,16,1.462,18,1.864,19,1.649,20,1.102,21,1.943,23,1.741,24,1.798,25,0.915,26,0.714,31,1.454,35,0.38,36,0.329,37,1.243,38,1.131,43,2.08,45,0.008,46,0.008,47,1.326,54,1.64,58,1.376,59,1.899,60,2.545,62,1.381,65,1.798,76,1.184,83,1.131,86,1.642,87,3.009,94,1.584,151,2.669,152,3.314,153,1.376,168,2.882,242,2.524,280,1.542,302,2.396,304,2.524,363,2.88,365,3.394,371,0.773,376,2.396,379,1.306,409,3.805,410,1.306,414,2.882,415,2.075,416,2.075,417,4.048,418,4.048,419,4.73,420,2.667,421,3.505,422,2.667,423,4.248,424,3.888,425,3.505,426,2.667,427,3.505,428,3.148,429,2.491,430,1.983,431,2.089,432,3.505,433,4.73,434,2.667,435,1.899,436,4.236,437,2.31,438,2.31,439,1.899,440,1.759,441,2.31,442,3.888,443,2.315,444,3.009,445,3.148,446,2.31,447,2.31,448,2.882,449,4.248,450,2.31,451,4.17,452,4.236,453,4.236,454,4.236,455,2.31,456,4.73,457,3.148,458,3.505,459,2.31,460,2.31,461,2.669,462,2.31,463,2.669,464,2.31,465,2.31,466,2.31,467,2.31,468,2.31,469,2.31,470,2.31,471,2.31,472,2.31,473,1.642,474,3.505,475,2.31,476,2.31,477,2.31]],["title/interfaces/Response.html",[13,1.398,371,1.237]],["body/interfaces/Response.html",[3,0.653,4,0.623,5,0.461,7,0.92,8,1.884,13,2.105,15,0.015,16,1.827,18,2.193,19,1.94,20,1.297,21,2.287,23,2.429,25,0.819,35,0.623,45,0.011,46,0.011,54,2.604,83,1.856,94,2.111,151,5.068,152,3.966,153,2.259,302,3.73,316,1.944,363,2.681,371,1.269,379,3.148,383,3.541,412,2.259,444,2.555,461,4.501,463,3.793,478,3.791,479,6.427,480,5.753,481,4.377,482,6.427,483,4.377,484,5.753,485,4.377,486,5.753,487,4.377]],["title/interfaces/ResponseType.html",[371,1.237,442,3.038]],["body/interfaces/ResponseType.html",[3,0.418,4,0.4,5,0.296,7,0.59,11,1.981,13,2.14,15,0.016,20,1.271,21,2.242,24,1.246,25,0.93,26,0.751,31,1.53,35,0.4,36,0.346,37,1.307,38,1.189,43,2.112,45,0.008,46,0.008,47,1.377,50,1.704,54,1.704,60,1.959,62,0.958,65,2.665,76,1.246,83,1.189,86,1.727,87,3.051,94,1.827,151,3.694,152,3.371,153,1.448,168,2.994,242,2.603,280,1.622,302,2.471,304,2.603,316,1.246,363,3.202,365,3.884,371,0.814,376,2.744,379,1.374,409,3.923,410,1.374,414,1.997,416,2.182,419,3.642,421,2.43,423,3.271,424,2.994,425,2.43,427,2.43,428,2.182,429,1.727,430,1.374,431,1.448,432,2.43,433,3.642,436,3.642,437,2.43,438,2.43,439,1.997,440,1.85,441,2.43,442,4.273,443,2.769,444,3.196,445,4.668,446,2.43,447,2.43,448,2.994,449,4.358,450,2.43,451,4.229,452,4.368,453,4.368,454,4.368,455,2.43,456,4.852,457,3.271,458,3.642,459,2.43,460,2.43,461,2.773,462,2.43,463,2.773,464,2.43,465,2.43,466,2.43,467,2.43,468,2.43,469,2.43,470,2.43,471,2.43,472,2.43,473,1.727,474,3.642,475,2.43,476,2.43,477,2.43]],["title/controllers/TestController.html",[0,1.729,488,3.319]],["body/controllers/TestController.html",[0,2.089,2,1.734,3,0.555,4,0.53,5,0.392,7,0.782,8,1.937,11,2.406,12,4.81,13,2.506,14,3.128,15,0.015,16,1.709,18,2.18,19,1.928,20,1.289,21,2.273,22,4.533,23,2.273,24,3.221,25,0.843,26,0.996,31,2.029,32,3.482,33,3.223,35,0.53,36,0.459,37,1.734,38,1.577,42,4.271,43,2.109,45,0.01,46,0.01,52,2.29,87,1.652,444,1.652,488,4.01,489,3.223,490,5.156,491,5.156,492,5.156,493,5.156,494,3.721,495,5.156,496,3.721,497,3.721,498,5.156,499,3.721,500,3.721,501,5.156,502,3.721,503,3.721,504,5.156,505,3.721,506,3.721,507,3.721,508,3.721,509,3.721,510,3.721,511,3.721,512,3.721,513,3.721,514,3.721,515,3.721,516,3.721,517,3.721,518,3.721,519,3.721,520,3.721,521,3.721,522,3.721]],["title/modules/TestCoreModule.html",[110,0.934,523,3.319]],["body/modules/TestCoreModule.html",[3,0.826,4,0.789,5,0.584,15,0.015,25,1.02,26,1.483,35,0.789,36,0.683,45,0.013,46,0.013,62,2.278,76,2.46,110,1.461,112,1.814,127,2.46,177,3.41,232,5.191,235,4.797,237,4.797,238,4.797,241,4.797,242,3.444,243,4.797,244,4.797,523,5.191,524,5.539,525,5.539,526,5.539]],["title/modules/ThrottleModule.html",[110,0.934,120,2.814]],["body/modules/ThrottleModule.html",[3,0.775,4,0.74,5,0.547,15,0.016,25,1.036,26,1.39,35,0.74,36,0.64,45,0.012,46,0.012,60,3.244,62,1.773,76,2.307,110,1.405,112,1.701,120,4.231,126,2.681,127,2.85,177,3.95,185,3.698,188,3.698,234,4.041,527,5.195,528,5.195,529,6.417,530,6.417,531,5.195,532,4.499,533,5.195,534,5.195,535,5.195,536,4.499,537,5.195,538,3.003,539,5.195]],["title/classes/UpdateUserDto.html",[36,0.526,540,2.467]],["body/classes/UpdateUserDto.html",[3,0.775,4,0.74,5,0.547,7,1.092,14,3.41,15,0.015,16,1.864,20,1.405,25,0.914,28,3.003,35,0.74,36,0.64,45,0.012,46,0.012,50,2.6,94,2.109,215,4.025,246,3.003,248,4.591,252,5.557,254,5.557,258,4.041,259,3.198,260,3.698,376,3.143,540,3.709,541,4.499,542,4.957,543,5.195,544,6.417,545,5.195,546,5.195]],["title/entities/User.html",[162,1.189,547,2.467]],["body/entities/User.html",[3,0.679,4,0.648,5,0.479,7,0.957,14,3.603,15,0.015,16,1.969,20,1.484,25,0.84,35,0.648,36,0.727,45,0.011,46,0.011,50,2.391,85,2.229,94,2.244,162,1.644,213,3.38,215,3.785,217,2.908,242,3.045,248,4.318,249,3.208,275,2.348,376,2.89,542,4.663,547,3.411,548,3.941,549,4.551,550,4.551,551,5.967,552,4.551,553,4.551,554,4.551,555,4.551,556,4.551,557,4.551,558,4.551,559,5.111,560,3.001,561,5.111,562,4.59,563,2.801]],["title/injectables/UserDbRepository.html",[47,1.398,564,2.627]],["body/injectables/UserDbRepository.html",[3,0.497,4,0.474,5,0.351,7,0.7,8,1.561,15,0.016,16,1.845,18,2.196,19,1.943,20,1.298,21,2.29,23,2.382,24,3.336,25,0.953,26,0.891,35,0.474,36,0.41,43,2.105,45,0.009,46,0.009,47,1.561,48,1.718,58,2.874,86,2.05,87,2.117,94,2.178,98,2.021,143,3.279,162,1.793,165,3.036,191,3.708,202,2.05,212,3.672,213,3.321,217,2.473,222,3.708,245,3.515,273,2.335,383,2.935,397,2.884,451,3.743,540,3.719,563,2.05,564,2.935,565,2.884,566,3.428,567,4.129,568,3.708,569,5.266,570,4.129,571,3.708,572,3.33,573,4.129,574,3.33,575,4.129,576,3.33,577,3.33,578,4.129,579,3.33,580,4.129,581,3.33,582,4.823,583,3.33,584,3.33,585,2.884,586,2.371,587,2.371,588,2.935,589,2.884,590,3.33,591,3.33,592,3.33,593,3.33,594,3.33,595,3.33,596,3.33,597,4.767,598,4.129,599,4.767,600,4.767,601,3.33,602,3.33]],["title/interfaces/UserRepository.html",[371,1.237,588,2.627]],["body/interfaces/UserRepository.html",[3,0.629,4,0.601,5,0.444,7,0.886,8,1.838,15,0.015,16,1.928,18,2.391,19,2.115,20,1.413,21,2.493,23,2.563,24,3.442,25,0.958,35,0.601,45,0.011,46,0.011,94,2.248,162,1.874,191,4.366,202,2.595,212,2.78,213,3.256,217,1.873,245,3.888,316,1.873,371,1.223,540,3.888,563,2.595,567,4.861,568,4.366,569,5.825,570,4.861,571,4.366,573,4.861,575,4.861,578,4.861,580,4.861,582,4.861,585,3.652,586,3.002,587,3.002,588,3.455,603,3.652,604,4.217,605,4.217,606,4.217,607,4.217,608,4.217,609,4.217]],["title/controllers/UsersController.html",[0,1.729,610,2.627]],["body/controllers/UsersController.html",[0,0.894,2,1.028,3,0.329,4,0.314,5,0.232,7,0.464,8,1.144,11,2.34,12,4.71,13,2.437,14,2.934,15,0.016,16,1.603,18,2.045,19,1.809,20,1.291,21,2.132,22,4.351,23,2.132,24,3.104,25,0.933,26,0.59,27,1.716,28,1.275,31,1.203,35,0.314,36,0.272,37,1.028,38,0.935,43,2.198,45,0.007,46,0.007,83,0.935,87,2.191,94,1.855,141,1.91,142,3.387,143,3.626,149,3.025,150,3.756,151,1.454,152,1.138,153,1.138,161,3.688,162,1.208,163,2.717,165,2.931,168,2.487,169,3.95,170,4.66,171,5.189,193,2.238,202,1.358,203,1.716,213,3.301,245,2.851,259,1.358,260,1.57,380,1.57,448,1.57,540,2.507,568,2.717,571,2.717,586,1.57,587,1.57,598,3.025,610,2.15,611,1.91,612,2.019,613,3.493,614,3.493,615,3.493,616,3.493,617,3.493,618,3.493,619,2.206,620,2.206,621,4.337,622,2.206,623,2.206,624,2.206,625,2.206,626,2.206,627,2.206,628,2.206,629,2.206,630,2.206,631,2.206,632,2.206,633,2.206,634,2.206,635,2.206,636,2.206,637,3.493,638,2.206,639,2.206,640,2.206,641,2.206,642,2.206,643,1.57,644,1.91,645,2.206,646,2.507,647,2.206,648,2.206,649,3.493,650,5.991,651,2.206,652,2.206,653,2.206,654,1.91,655,1.926,656,2.206,657,3.688,658,2.206,659,2.206,660,3.493,661,1.08,662,2.206,663,2.206,664,2.206,665,1.275,666,4.933,667,2.206,668,2.206,669,4.933,670,2.206,671,2.206,672,2.206,673,2.206,674,2.206,675,2.206,676,2.206,677,2.206,678,2.206,679,2.206,680,2.206,681,4.337,682,2.206,683,2.206,684,2.206,685,2.206,686,2.206,687,2.206,688,2.206,689,2.206,690,3.025,691,2.206,692,2.206,693,2.206,694,2.206,695,2.206]],["title/modules/UsersModule.html",[110,0.934,121,2.467]],["body/modules/UsersModule.html",[2,2.929,3,0.749,4,0.716,5,0.529,15,0.015,25,1.054,26,1.345,35,0.716,36,0.619,45,0.012,46,0.012,110,1.376,112,1.645,113,2.664,121,4.426,122,3.869,123,2.904,124,2.461,126,3.243,127,2.231,193,4.101,203,3.908,231,3.869,262,5.443,263,3.313,564,3.093,610,4.222,696,4.351,697,4.351,698,4.351,699,5.024,700,4.351,701,5.024,702,4.351]],["title/injectables/UsersService.html",[47,1.398,193,2.202]],["body/injectables/UsersService.html",[3,0.532,4,0.508,5,0.376,7,0.75,8,1.64,15,0.016,16,1.883,18,2.337,19,2.068,20,1.382,21,2.437,23,2.437,24,3.349,25,1.022,26,0.955,35,0.508,36,0.44,38,1.513,39,2.063,43,1.819,45,0.01,46,0.01,47,1.64,48,1.842,58,2.584,94,2.187,143,3.573,162,1.908,165,3.42,193,2.584,202,2.197,205,3.091,213,2.986,217,1.585,245,3.626,263,2.353,540,3.626,564,2.197,586,2.541,587,2.541,588,3.861,589,3.091,700,3.091,703,3.091,704,6.272,705,5.008,706,5.008,707,3.895,708,3.083,709,2.895,710,3.569,711,3.569,712,4.337,713,3.569,714,5.008,715,3.569,716,5.008,717,3.569,718,5.008,719,3.569,720,5.008,721,3.569,722,5.008,723,3.569,724,3.091,725,2.776,726,3.569,727,3.569,728,3.569,729,3.569,730,3.569,731,3.569,732,3.569,733,3.569,734,3.569]],["title/classes/ValidateUserDto.html",[36,0.526,147,2.814]],["body/classes/ValidateUserDto.html",[3,0.716,4,0.684,5,0.506,7,1.009,14,2.991,15,0.015,16,1.635,20,1.232,25,0.957,28,2.775,35,0.684,36,0.753,45,0.012,46,0.012,50,2.475,65,2.712,94,2.05,147,4.027,217,2.983,246,2.775,249,3.463,250,4.158,256,4.158,258,3.734,259,2.955,260,3.418,375,2.617,559,5.289,560,3.165,735,4.158,736,4.801,737,4.801,738,4.801,739,6.107,740,6.107,741,6.107,742,6.107,743,4.801,744,4.801,745,6.717,746,4.801,747,4.801,748,4.801,749,4.801,750,4.158,751,4.086,752,4.801,753,6.107,754,4.801,755,4.158,756,3.734]],["title/contributing.html",[757,2.246,758,2.246,759,2.598]],["body/contributing.html",[4,0.77,15,0.013,43,1.7,45,0.013,46,0.013,759,3.851,760,3.586,761,3.329,762,3.329,763,4.207,764,4.207,765,3.329,766,3.851,767,3.126,768,3.851,769,3.329,770,3.851,771,4.684,772,4.207,773,4.684,774,2.949,775,3.851,776,4.207,777,4.684,778,5.697,779,3.566,780,3.566,781,4.207,782,4.207,783,3.329,784,4.684,785,4.684,786,4.363,787,4.684,788,4.207,789,4.049,790,2.293,791,5.697,792,4.207,793,4.207,794,3.329,795,3.566,796,3.222,797,4.207,798,3.566]],["title/coverage.html",[799,4.028]],["body/coverage.html",[0,2.349,1,1.983,5,0.317,6,2.605,11,0.946,13,0.985,15,0.015,20,0.607,29,1.739,32,1.64,36,0.761,45,0.009,46,0.009,47,2.246,49,2.34,98,1.275,135,2.605,139,2.141,140,2.605,147,1.983,154,1.851,162,0.838,175,1.983,190,2.605,193,1.552,204,2.34,229,2.141,236,2.34,245,1.739,247,2.605,259,1.851,288,1.851,291,2.605,297,1.739,307,1.739,314,1.739,371,1.988,372,1.851,373,3.822,374,3.822,380,2.141,381,2.605,385,2.605,406,2.605,413,1.983,414,2.141,416,3.445,440,1.983,442,2.141,478,2.605,488,2.34,489,2.605,540,1.739,541,2.605,547,1.739,548,2.605,564,1.851,565,2.605,588,1.851,603,2.605,610,1.851,611,2.605,612,1.739,703,2.605,725,2.34,735,2.605,799,2.141,800,1.739,801,3.008,802,2.605,803,8.089,804,5.797,805,4.428,806,7.83,807,5.256,808,2.605,809,6.67,810,6.682,811,5.797,812,5.256,813,2.605,814,2.605,815,2.605,816,4.127,817,3.835,818,3.008,819,3.008,820,2.605,821,2.605,822,2.605,823,2.605,824,5.787,825,2.34,826,2.34,827,2.605,828,2.605,829,2.605,830,2.34,831,3.008,832,3.008,833,3.835,834,3.008,835,3.008,836,3.835,837,2.605,838,2.605,839,2.141,840,2.34,841,2.34,842,2.605,843,2.605,844,2.605,845,2.605,846,2.605,847,2.605,848,2.34,849,2.605,850,2.34,851,2.605,852,2.605,853,2.605,854,2.605,855,2.605,856,3.008,857,2.141]],["title/dependencies.html",[113,2.156,858,1.99]],["body/dependencies.html",[15,0.016,26,1.23,36,0.732,45,0.011,46,0.011,76,2.041,80,3.272,83,1.949,113,1.949,152,2.372,153,2.372,179,3.575,181,3.272,234,3.575,263,3.031,278,2.829,309,3.981,310,3.575,313,3.575,394,5.118,395,4.685,412,3.065,439,3.272,532,3.981,560,3.031,563,2.829,859,6.58,860,4.596,861,5.939,862,4.596,863,3.981,864,4.596,865,4.596,866,4.596,867,4.596,868,4.596,869,5.939,870,4.596,871,4.596,872,5.939,873,3.575,874,4.596,875,4.596,876,3.575,877,4.596,878,3.981,879,4.596,880,4.596,881,3.981,882,4.596,883,4.596,884,3.981,885,4.596,886,4.596,887,4.596,888,4.596,889,4.596,890,4.596,891,4.596,892,4.596,893,5.939,894,3.981,895,3.575,896,4.596,897,4.596,898,4.596,899,4.596,900,4.596]],["title/miscellaneous/enumerations.html",[901,1.883,902,4.405]],["body/miscellaneous/enumerations.html",[3,1.006,7,1.186,15,0.015,45,0.013,46,0.013,49,4.388,53,5.248,54,2.734,56,5.843,57,4.803,82,5.843,83,2.86,84,5.843,304,4.048,901,2.911,902,4.886,903,5.641]],["title/miscellaneous/functions.html",[901,1.883,904,3.354]],["body/miscellaneous/functions.html",[7,1.117,15,0.014,18,2.401,19,2.124,20,1.419,21,2.503,45,0.013,46,0.013,94,2.219,110,1.164,204,5.062,249,3.188,431,2.743,725,5.062,815,4.603,817,6.628,833,4.603,839,3.784,901,2.743,904,3.504,905,5.315,906,5.315,907,6.508,908,5.315,909,5.062,910,2.743,911,5.315,912,3.784,913,5.315,914,6.508,915,5.315]],["title/index.html",[7,0.767,757,2.246,758,2.246]],["body/index.html",[0,0.563,4,0.529,5,0.567,11,1.902,13,1.687,15,0.014,19,0.42,45,0.005,46,0.005,51,0.99,52,1.929,54,1.27,62,1.557,78,0.718,80,0.99,83,1.011,85,1.169,93,1.699,98,1.328,110,0.304,112,1.598,113,1.328,124,1.169,217,0.618,265,2.066,273,2.235,275,0.718,278,1.469,301,0.917,315,1.573,327,1.469,335,1.469,336,1.204,338,1.204,394,1.082,395,0.99,410,0.681,412,1.231,413,1.573,415,1.082,424,0.99,429,2.574,430,2.048,431,2.158,443,2.183,444,1.391,536,1.204,566,1.929,646,0.804,654,1.204,655,2.026,657,2.287,661,1.535,665,1.379,709,1.379,751,0.804,757,1.469,758,1.929,759,2.231,760,3.223,761,0.856,762,0.856,764,1.082,766,1.699,767,0.804,769,1.929,770,1.699,772,1.082,774,2.28,780,0.917,783,0.856,786,0.856,789,2.287,790,2.706,794,0.856,795,0.917,796,1.535,798,0.917,799,1.699,800,2.637,839,0.99,857,0.99,876,3.252,878,1.204,881,1.204,901,1.231,910,0.718,912,1.699,916,2.417,917,2.714,918,0.99,919,2.147,920,1.391,921,1.391,922,0.917,923,1.204,924,1.699,925,1.929,926,1.391,927,1.856,928,3.008,929,2.977,930,2.386,931,2.386,932,1.391,933,2.386,934,1.082,935,2.386,936,1.856,937,2.231,938,3.218,939,3.549,940,2.977,941,3.667,942,2.386,943,3.543,944,1.811,945,1.204,946,0.681,947,1.391,948,1.811,949,2.437,950,2.45,951,1.699,952,3.475,953,1.204,954,0.856,955,1.391,956,0.917,957,1.856,958,1.391,959,1.391,960,1.391,961,1.391,962,1.391,963,1.204,964,1.391,965,2.048,966,1.391,967,1.082,968,0.99,969,1.469,970,1.391,971,1.391,972,1.391,973,1.082,974,2.386,975,2.574,976,1.391,977,1.929,978,1.391,979,1.391,980,1.391,981,0.99,982,1.082,983,1.856,984,2.934,985,1.391,986,1.391,987,1.391,988,1.391,989,1.391,990,1.204,991,1.391,992,1.699,993,1.204,994,2.066,995,1.856,996,3.133,997,2.386,998,2.89,999,3.133,1000,2.386,1001,2.386,1002,1.391,1003,3.252,1004,1.391,1005,3.218,1006,2.066,1007,2.231,1008,2.437,1009,1.391,1010,1.391,1011,1.391,1012,1.391,1013,2.386,1014,1.391,1015,1.391,1016,1.082,1017,3.549,1018,2.89,1019,1.391,1020,1.391,1021,1.699,1022,2.231,1023,1.391,1024,1.391,1025,0.917,1026,3.372,1027,3.218,1028,2.231,1029,2.066,1030,2.89,1031,1.699,1032,0.99,1033,1.391,1034,1.391,1035,1.204,1036,0.99,1037,1.391,1038,0.99,1039,0.99,1040,3.133,1041,0.99,1042,1.391,1043,1.391,1044,2.066,1045,1.391,1046,2.066,1047,1.204,1048,1.617,1049,0.99,1050,2.231,1051,1.204,1052,2.386,1053,2.386,1054,1.204,1055,1.301,1056,1.391,1057,1.082,1058,1.391,1059,1.391,1060,1.391,1061,2.147,1062,2.386,1063,1.391,1064,2.386,1065,1.391,1066,1.391,1067,1.391,1068,3.252,1069,1.379,1070,1.082,1071,1.391,1072,1.082,1073,3.952,1074,1.082,1075,4.705,1076,2.386,1077,2.066,1078,1.204,1079,1.391,1080,1.391,1081,1.391,1082,1.617,1083,1.391,1084,3.715,1085,1.391,1086,1.204,1087,2.45,1088,1.391,1089,1.699,1090,1.391,1091,1.391,1092,2.386,1093,1.391,1094,1.391,1095,1.391,1096,1.391,1097,1.391,1098,1.391,1099,1.391,1100,1.169,1101,0.917,1102,0.99,1103,1.082,1104,3.223,1105,1.699,1106,2.488,1107,1.204,1108,1.391,1109,2.386,1110,2.386,1111,2.386,1112,2.066,1113,1.391,1114,1.204,1115,1.204,1116,2.437,1117,0.718,1118,1.204,1119,1.204,1120,1.391,1121,1.204,1122,1.391,1123,0.99,1124,1.391,1125,3.133,1126,2.89,1127,1.391,1128,1.391,1129,1.391,1130,2.066,1131,1.391,1132,1.391,1133,1.391,1134,1.391,1135,1.082,1136,1.391,1137,1.204,1138,1.391,1139,1.391,1140,1.811,1141,1.082,1142,1.391,1143,1.699,1144,3.797,1145,1.391,1146,1.082,1147,2.645,1148,1.391,1149,1.204,1150,1.391,1151,1.856,1152,1.204,1153,1.391,1154,1.391,1155,1.204,1156,1.391,1157,2.386,1158,1.856,1159,1.469,1160,1.082,1161,1.856,1162,1.082,1163,1.391,1164,1.204,1165,0.99,1166,1.204,1167,1.391,1168,1.204,1169,2.574,1170,2.386,1171,4.563,1172,1.082,1173,1.391,1174,1.391,1175,1.391,1176,1.811,1177,1.391,1178,2.066,1179,1.391,1180,1.391,1181,2.386,1182,2.386,1183,0.856,1184,1.391,1185,1.391,1186,1.391,1187,2.386,1188,2.066,1189,1.391,1190,2.386,1191,1.082,1192,1.204,1193,2.066,1194,2.386,1195,1.204,1196,1.391,1197,1.856,1198,1.391,1199,1.699,1200,3.133,1201,1.391,1202,1.082,1203,1.204,1204,1.204,1205,2.066,1206,1.391,1207,1.391,1208,1.204,1209,1.204,1210,1.204,1211,0.99,1212,1.391,1213,3.797,1214,1.204,1215,0.99,1216,4.563,1217,3.218,1218,1.391,1219,1.391,1220,1.391,1221,1.391,1222,1.391,1223,1.204,1224,1.204,1225,1.391,1226,1.391,1227,0.99,1228,0.99,1229,1.391,1230,2.386,1231,0.917,1232,1.204,1233,1.391,1234,1.391,1235,2.066,1236,1.391,1237,1.391,1238,1.082,1239,0.917,1240,1.204,1241,1.391,1242,4.181,1243,4.881,1244,1.391,1245,1.391,1246,0.99,1247,1.391,1248,1.391,1249,1.204,1250,2.714,1251,1.204,1252,1.204,1253,1.391,1254,1.391,1255,1.204,1256,1.391,1257,2.386,1258,2.386,1259,1.699,1260,1.391,1261,1.391,1262,1.204,1263,1.391,1264,1.391,1265,1.082,1266,1.391,1267,1.391,1268,0.99,1269,2.386,1270,1.391,1271,1.391,1272,1.391,1273,1.391,1274,2.386,1275,1.391,1276,0.99,1277,1.082,1278,1.391,1279,2.714,1280,2.757,1281,0.99,1282,1.391,1283,1.204,1284,1.204,1285,0.648,1286,0.917,1287,1.379,1288,1.391,1289,2.066,1290,2.386,1291,2.386,1292,0.804,1293,0.917,1294,1.391,1295,1.082,1296,2.386,1297,1.082,1298,0.917,1299,1.573,1300,1.469,1301,1.082,1302,1.573,1303,1.391,1304,1.391,1305,1.204,1306,3.133,1307,2.386,1308,0.99,1309,1.204,1310,1.204,1311,1.391,1312,1.204,1313,1.204,1314,1.082,1315,1.391,1316,1.391,1317,1.082,1318,1.391,1319,1.391,1320,1.391,1321,1.391,1322,1.391,1323,1.391,1324,3.133,1325,1.204,1326,1.391,1327,1.391,1328,1.391,1329,1.082]],["title/license.html",[757,2.246,758,2.246,1330,2.598]],["body/license.html",[4,0.873,5,0.569,15,0.006,16,0.414,19,1.023,25,0.22,36,0.191,45,0.005,46,0.005,78,0.798,124,0.757,275,0.798,316,0.687,319,1.339,333,1.509,337,1.203,353,2.836,410,2.365,412,1.348,423,1.203,428,1.203,443,1.437,451,0.952,538,0.894,547,3.362,646,1.959,657,0.952,661,0.757,751,0.894,755,1.339,756,1.203,765,0.952,767,0.894,768,3.169,774,1.848,786,0.952,790,0.656,792,1.203,800,1.959,936,4.375,944,0.894,948,0.894,954,1.607,956,1.02,957,1.203,965,2.849,967,2.031,968,1.859,969,0.952,993,1.339,1022,1.101,1029,1.339,1036,1.859,1041,1.101,1054,1.339,1055,0.843,1074,1.203,1082,2.056,1114,2.262,1115,1.339,1117,1.348,1119,1.339,1123,1.101,1140,0.894,1159,0.952,1160,1.203,1164,4.871,1165,2.836,1168,2.936,1169,0.952,1176,1.959,1183,0.952,1193,1.339,1202,1.203,1215,1.101,1223,1.339,1239,1.02,1255,1.339,1259,1.101,1276,4.845,1277,3.462,1280,1.02,1287,0.894,1312,2.936,1325,1.339,1330,5.286,1331,3.983,1332,3.39,1333,1.546,1334,1.546,1335,1.546,1336,5.625,1337,6.26,1338,3.983,1339,4.451,1340,1.546,1341,6.479,1342,5.037,1343,1.546,1344,1.101,1345,1.203,1346,5.816,1347,6.26,1348,4.182,1349,2.611,1350,1.546,1351,4.451,1352,1.546,1353,1.546,1354,2.836,1355,1.546,1356,4.375,1357,3.983,1358,2.262,1359,2.611,1360,1.546,1361,3.39,1362,2.611,1363,2.611,1364,1.546,1365,4.146,1366,2.626,1367,2.611,1368,4.182,1369,1.546,1370,2.611,1371,1.546,1372,1.546,1373,1.339,1374,1.546,1375,1.546,1376,1.546,1377,1.546,1378,1.546,1379,3.39,1380,2.611,1381,5.421,1382,1.339,1383,4.829,1384,3.983,1385,2.262,1386,1.339,1387,1.546,1388,1.546,1389,1.546,1390,2.262,1391,1.546,1392,1.339,1393,1.339,1394,6.43,1395,3.39,1396,2.262,1397,1.546,1398,2.031,1399,1.546,1400,0.843,1401,2.611,1402,6.735,1403,1.02,1404,1.546,1405,1.546,1406,1.546,1407,1.546,1408,1.546,1409,1.546,1410,2.611,1411,2.262,1412,2.637,1413,1.546,1414,1.546,1415,1.339,1416,3.983,1417,1.546,1418,2.611,1419,3.983,1420,2.262,1421,1.546,1422,4.451,1423,2.262,1424,1.546,1425,2.637,1426,1.339,1427,1.546,1428,1.546,1429,1.546,1430,2.611,1431,1.546,1432,1.546,1433,2.637,1434,1.546,1435,1.546,1436,3.39,1437,1.546,1438,1.546,1439,1.546,1440,3.983,1441,5.816,1442,1.339,1443,1.546,1444,2.611,1445,3.846,1446,3.39,1447,2.611,1448,2.611,1449,2.611,1450,2.611,1451,2.637,1452,2.611,1453,3.39,1454,2.611,1455,2.611,1456,2.611,1457,2.262,1458,1.546,1459,2.611,1460,2.262,1461,1.203,1462,1.546,1463,4.451,1464,5.14,1465,3.39,1466,2.262,1467,2.611,1468,2.611,1469,1.546,1470,3.39,1471,2.611,1472,1.546,1473,1.546,1474,1.546,1475,3.39,1476,1.546,1477,1.546,1478,1.546,1479,2.611,1480,1.546,1481,1.546,1482,1.546,1483,1.546,1484,1.546,1485,1.546,1486,2.611,1487,1.546,1488,1.546,1489,1.339,1490,1.546,1491,1.546,1492,1.546,1493,3.855,1494,1.203,1495,1.339,1496,1.546,1497,2.936,1498,1.339,1499,1.546,1500,1.546,1501,5.402,1502,1.546,1503,1.339,1504,1.546,1505,1.546,1506,3.983,1507,2.611,1508,2.836,1509,1.546,1510,1.339,1511,1.546,1512,1.546,1513,3.39,1514,1.203,1515,1.546,1516,1.546,1517,1.546,1518,1.546,1519,2.262,1520,1.546,1521,1.546,1522,1.24,1523,1.546,1524,1.546,1525,1.339,1526,1.546,1527,1.546,1528,3.45,1529,1.546,1530,1.546,1531,1.546,1532,1.546,1533,1.546,1534,1.546,1535,1.546,1536,1.203,1537,1.339,1538,2.611,1539,1.546,1540,1.546,1541,2.611,1542,1.546,1543,1.546,1544,1.546,1545,1.546,1546,1.546,1547,1.546,1548,1.339,1549,1.546,1550,3.983,1551,3.39,1552,3.39,1553,3.39,1554,2.611,1555,3.39,1556,2.611,1557,2.611,1558,2.611,1559,1.203,1560,1.546,1561,1.546,1562,1.339,1563,1.546,1564,1.546,1565,1.546,1566,2.611,1567,1.546,1568,1.546,1569,1.339,1570,1.546,1571,4.451,1572,1.339,1573,1.546,1574,1.546,1575,1.546,1576,1.546,1577,1.546,1578,1.546,1579,1.546,1580,1.546,1581,4.451,1582,1.546,1583,1.546,1584,1.546,1585,1.546,1586,1.546,1587,1.546,1588,1.546,1589,1.546,1590,1.546,1591,1.546,1592,1.546,1593,1.339,1594,1.546,1595,1.546,1596,3.39,1597,1.546,1598,1.546,1599,1.546,1600,2.611,1601,1.546,1602,1.339,1603,1.546,1604,1.546,1605,1.546,1606,1.339,1607,1.546,1608,1.546,1609,1.546,1610,1.546,1611,1.546,1612,1.546,1613,1.339,1614,1.546,1615,1.339,1616,2.611,1617,2.611,1618,1.546,1619,1.339,1620,1.203,1621,1.546,1622,1.546,1623,1.546,1624,1.546,1625,1.546,1626,0.431,1627,1.546,1628,1.546,1629,1.546,1630,1.546,1631,1.546,1632,1.546,1633,1.546,1634,1.546,1635,1.101,1636,1.546,1637,1.546]],["title/classes/mockRequest.html",[36,0.526,848,3.319]],["body/classes/mockRequest.html",[3,0.839,4,0.801,5,0.592,7,1.182,8,2.206,11,1.768,15,0.015,16,1.505,23,2.001,25,0.801,31,3.066,35,0.801,36,0.693,43,1.768,45,0.013,46,0.013,86,4.145,246,3.251,302,3.299,304,2.902,473,3.462,847,4.871,848,5.238,1638,5.238,1639,5.624]],["title/classes/mockResponse.html",[36,0.526,850,3.319]],["body/classes/mockResponse.html",[3,0.758,4,0.723,5,0.535,7,1.068,8,2.073,13,1.664,15,0.015,16,1.931,23,2.568,25,0.723,31,2.769,35,0.723,36,0.626,43,2.268,45,0.012,46,0.012,54,2.923,86,3.895,246,2.936,363,3.362,461,4.757,463,4.757,849,4.399,850,4.922,1638,4.922,1640,5.08,1641,5.08,1642,5.08,1643,5.08,1644,5.08,1645,5.08,1646,5.08,1647,5.08]],["title/modules.html",[112,1.853]],["body/modules.html",[15,0.013,45,0.013,46,0.013,111,3.231,112,1.831,117,3.686,118,3.231,119,3.686,120,3.686,121,3.231,284,3.686,523,4.348,944,4.408,969,4.426,1648,7.627,1649,7.627,1650,7.896,1651,7.19]],["title/overview.html",[1652,4.028]],["body/overview.html",[2,2.084,15,0.015,29,3.754,45,0.011,46,0.011,48,2.308,111,4.565,112,1.465,113,2.474,114,3.874,115,3.874,116,3.874,117,5.042,118,3.979,119,4.282,120,4.282,121,4.311,122,3.592,123,2.586,124,2.191,154,3.998,172,3.874,174,3.874,175,4.282,193,3.849,227,3.874,228,3.874,229,4.901,246,2.586,275,2.308,284,4.708,285,3.874,286,3.874,287,3.874,288,4.591,316,1.987,413,2.949,661,2.858,696,3.874,697,3.874,698,3.874,1652,3.185,1653,5.052,1654,3.185,1655,3.48]],["title/properties.html",[50,2.061,858,1.99]],["body/properties.html",[15,0.015,45,0.013,46,0.013,50,2.192,335,4.049,566,3.329,646,3.126,655,2.402,657,3.329,917,4.684,918,3.851,953,5.697,975,4.363,1069,4.496,1077,5.697,1078,6.139,1280,3.566,1330,3.851,1656,5.409,1657,5.409,1658,5.409,1659,5.409,1660,5.409,1661,5.409,1662,5.409,1663,5.409,1664,5.409,1665,5.409,1666,5.409,1667,4.684,1668,4.684]],["title/miscellaneous/variables.html",[901,1.883,1028,3.621]],["body/miscellaneous/variables.html",[7,0.273,11,0.408,12,1.385,13,1.544,15,0.016,19,0.392,20,1.33,22,0.8,32,1.227,43,2.049,45,0.004,46,0.004,60,1.048,62,1.211,65,0.577,78,2.07,83,0.551,85,3.262,87,3.353,94,1.446,97,1.01,98,1.7,110,0.284,111,0.751,127,0.577,142,1.622,143,2.443,152,2.976,161,1.385,162,1.646,165,3.463,169,1.483,213,2.433,215,2.051,217,1.576,222,1.75,229,1.602,236,1.75,242,1.536,248,2.34,249,2.659,259,1.385,265,0.857,266,0.67,268,0.67,270,0.925,273,0.636,275,0.67,276,1.01,280,1.3,301,2.34,304,3.469,353,1.602,354,2.959,358,1.125,363,0.605,375,1.227,376,0.636,379,0.636,395,2.526,410,2.309,431,2.267,440,1.962,443,1.862,444,2.732,451,0.8,457,1.01,473,3.716,542,2.119,612,2.54,643,0.925,646,2.725,655,0.999,657,2.704,661,1.458,665,1.72,690,1.949,709,1.72,765,1.385,790,0.551,800,0.751,808,1.125,813,1.125,814,1.949,820,1.125,821,1.949,822,1.125,823,1.949,824,1.125,825,3.417,826,2.315,827,3.073,828,3.073,829,3.073,830,2.76,836,1.125,837,1.125,838,1.949,840,1.01,841,1.75,842,1.125,843,1.949,844,1.125,845,1.949,846,1.949,851,1.125,852,1.949,853,1.125,854,1.949,855,1.125,876,1.01,901,0.67,909,2.315,950,1.962,977,0.8,1021,0.925,1028,0.925,1032,0.925,1041,0.925,1070,1.01,1101,1.483,1104,0.708,1106,1.227,1126,2.315,1199,2.119,1285,1.048,1366,0.857,1392,1.125,1403,0.857,1466,1.949,1514,3.12,1548,1.125,1667,2.577,1668,2.577,1669,4.714,1670,1.299,1671,1.299,1672,1.299,1673,1.299,1674,2.25,1675,1.299,1676,1.299,1677,1.299,1678,1.299,1679,1.299,1680,1.299,1681,1.299,1682,3.073,1683,3.073,1684,3.073,1685,2.25,1686,3.474,1687,2.25,1688,3.805,1689,2.25,1690,1.299,1691,3.073,1692,2.315,1693,1.949,1694,2.976,1695,1.299,1696,1.299,1697,2.25,1698,2.25,1699,1.299,1700,2.25,1701,1.299,1702,1.299,1703,2.25,1704,2.76,1705,4.701,1706,3.073,1707,2.25,1708,2.25,1709,2.25,1710,2.25,1711,4.011,1712,1.299,1713,1.299,1714,1.299,1715,1.299,1716,4.083,1717,1.125,1718,4.011,1719,1.01,1720,1.299,1721,1.299,1722,1.299,1723,1.299,1724,1.299,1725,2.25,1726,2.25,1727,1.299,1728,1.125,1729,2.577,1730,2.577,1731,1.299,1732,1.125,1733,1.125,1734,1.125,1735,1.299,1736,1.299,1737,1.299,1738,1.299,1739,2.976,1740,2.25,1741,1.299,1742,1.299,1743,1.299,1744,1.299,1745,1.299,1746,1.299,1747,1.602,1748,4.714,1749,1.299,1750,3.548,1751,1.299,1752,1.299,1753,1.299,1754,1.299,1755,4.394,1756,1.299,1757,1.299,1758,1.299,1759,1.299,1760,1.299,1761,1.299,1762,1.299,1763,1.125,1764,1.299,1765,1.299,1766,1.299,1767,1.299,1768,1.299,1769,1.299,1770,1.299,1771,1.299,1772,1.299,1773,1.299,1774,1.299,1775,1.125,1776,1.299,1777,1.299,1778,1.299,1779,4.714,1780,1.299,1781,1.299,1782,1.299,1783,1.299,1784,4.394,1785,4.394,1786,4.394,1787,5.909,1788,4.394,1789,4.394,1790,1.299,1791,4.394,1792,4.714,1793,4.011,1794,3.548,1795,2.25,1796,1.299,1797,1.299,1798,1.299,1799,1.299,1800,1.299,1801,1.299,1802,1.299,1803,1.299,1804,1.299,1805,1.299,1806,1.299,1807,1.299,1808,1.299,1809,1.299,1810,1.299,1811,1.299,1812,1.299,1813,1.299,1814,1.299,1815,1.299,1816,1.299,1817,1.299,1818,1.299,1819,1.299,1820,1.299,1821,1.299,1822,1.299,1823,2.976,1824,2.976,1825,1.949,1826,1.299,1827,1.299,1828,2.976,1829,2.976,1830,1.299,1831,1.299,1832,2.976,1833,1.299,1834,1.299,1835,1.299,1836,1.125,1837,1.299,1838,1.125,1839,1.299,1840,1.125,1841,1.125,1842,1.299,1843,1.299,1844,1.125,1845,1.125,1846,1.299,1847,1.299,1848,1.299]],["title/additional-documentation/contribution.html",[768,2.598,1522,1.017,1626,1.017]],["body/additional-documentation/contribution.html",[4,0.77,15,0.013,43,1.7,45,0.013,46,0.013,759,3.851,760,3.586,761,3.329,762,3.329,763,4.207,764,4.207,765,3.329,766,3.851,767,3.126,768,3.851,769,3.329,770,3.851,771,4.684,772,4.207,773,4.684,774,2.949,775,3.851,776,4.207,777,4.684,778,5.697,779,3.566,780,3.566,781,4.207,782,4.207,783,3.329,784,4.684,785,4.684,786,4.363,787,4.684,788,4.207,789,4.049,790,2.293,791,5.697,792,4.207,793,4.207,794,3.329,795,3.566,796,3.222,797,4.207,798,3.566]],["title/additional-documentation/contribution/bug-reports.html",[794,1.962,795,2.102,1522,0.888,1626,0.888]],["body/additional-documentation/contribution/bug-reports.html",[15,0.014,45,0.012,46,0.012,161,3.018,443,2.624,566,3.81,775,3.491,786,4.522,790,2.079,794,4.689,795,4.472,946,2.402,949,4.815,965,2.402,981,3.491,982,3.814,984,2.673,1027,3.233,1082,2.53,1089,3.491,1101,3.233,1141,4.815,1211,3.491,1217,4.247,1400,3.375,1412,4.815,1415,4.247,1457,5.361,1559,3.814,1620,3.814,1849,4.903,1850,4.903,1851,3.491,1852,4.903,1853,4.247,1854,4.903,1855,4.247,1856,6.19,1857,4.903,1858,4.247,1859,4.247,1860,4.903,1861,4.903,1862,4.903,1863,4.903,1864,4.903,1865,4.247,1866,4.903,1867,3.018,1868,6.19,1869,4.903,1870,4.903,1871,4.903,1872,3.491,1873,4.903,1874,4.247,1875,3.491,1876,4.903,1877,4.903,1878,4.903,1879,4.247,1880,4.903,1881,4.903,1882,4.247]],["title/additional-documentation/contribution/features-requests.html",[789,1.962,796,1.561,1522,0.888,1626,0.888]],["body/additional-documentation/contribution/features-requests.html",[15,0.013,45,0.013,46,0.013,124,2.798,435,4.066,538,3.301,760,3.114,761,3.516,762,3.516,763,4.443,767,3.301,780,3.766,796,3.329,992,5.166,1101,3.766,1112,3.766,1191,4.443,1205,4.947,1313,4.947,1366,3.766,1882,4.947,1883,5.712,1884,5.712,1885,3.516,1886,5.712,1887,5.712,1888,5.712,1889,4.947,1890,5.712,1891,4.947,1892,4.947]],["title/additional-documentation/contribution/pull-requests.html",[796,1.561,798,2.102,1522,0.888,1626,0.888]],["body/additional-documentation/contribution/pull-requests.html",[11,1.644,15,0.013,42,2.338,45,0.01,46,0.01,51,2.704,65,1.687,98,2.217,355,2.954,411,2.704,443,2.217,644,3.289,657,2.338,760,3.974,761,3.681,769,2.338,775,2.704,779,2.504,780,2.504,783,2.338,788,2.954,789,3.219,796,2.561,797,2.954,798,4.604,799,2.704,946,1.86,965,1.86,981,3.723,984,2.071,992,3.723,1041,2.704,1048,3.761,1073,5.179,1089,3.723,1102,3.723,1106,2.071,1112,3.448,1117,1.96,1140,2.195,1146,2.954,1183,2.338,1202,2.954,1228,2.704,1285,2.436,1286,2.504,1298,3.448,1330,3.723,1348,3.289,1356,2.954,1365,2.338,1368,3.289,1382,3.289,1394,4.529,1411,3.289,1420,3.289,1498,3.289,1559,2.954,1606,3.289,1635,2.704,1692,2.954,1851,2.704,1858,3.289,1859,5.852,1867,2.338,1872,2.704,1885,2.338,1889,3.289,1893,3.798,1894,3.798,1895,2.954,1896,3.798,1897,2.954,1898,3.798,1899,3.798,1900,4.529,1901,3.798,1902,3.798,1903,3.289,1904,3.798,1905,3.798,1906,3.289,1907,3.798,1908,3.289,1909,2.954,1910,3.289,1911,5.229,1912,5.229,1913,3.798,1914,3.798,1915,3.798,1916,3.798,1917,3.798,1918,3.798,1919,3.289,1920,3.289,1921,3.798,1922,3.798,1923,6.443,1924,2.954,1925,3.798,1926,5.229,1927,5.229,1928,3.798,1929,3.798,1930,5.229,1931,3.798,1932,5.229,1933,6.983,1934,3.798,1935,4.529,1936,5.229,1937,5.98,1938,3.289,1939,2.954,1940,4.067,1941,3.798,1942,3.798,1943,3.798,1944,3.798,1945,3.798,1946,3.798,1947,5.98,1948,3.798,1949,3.798,1950,5.229,1951,3.798,1952,3.798]],["title/additional-documentation/modules.html",[112,1.195,1522,1.017,1626,1.017]],["body/additional-documentation/modules.html",[11,2.113,13,2.201,15,0.013,45,0.013,46,0.013,52,4.138,110,1.228,112,1.836,217,2.49,273,3.293,315,3.697,335,3.451,430,2.746,655,2.49,940,3.992,946,2.746,994,3.697,1022,3.992,1082,2.893,1089,3.992,1104,3.057,1203,4.856,1249,4.856,1250,4.856,1292,3.241,1293,3.697,1295,4.361,1953,3.697,1954,3.697,1955,4.856,1956,5.607,1957,5.607,1958,3.451,1959,4.856,1960,4.856,1961,5.607]],["title/additional-documentation/modules/logger.html",[52,2.246,1522,1.017,1626,1.017]],["body/additional-documentation/modules/logger.html",[3,0.922,5,0.515,15,0.013,25,0.696,32,3.369,39,2.827,41,3.804,42,3.01,45,0.012,46,0.012,52,4.686,53,3.804,54,1.981,55,3.482,57,3.482,58,2.524,78,3.189,80,3.482,85,2.395,93,4.823,110,1.558,118,2.827,127,2.172,353,3.482,655,2.172,760,2.666,816,3.482,858,2.666,904,3.224,919,2.827,944,2.827,946,2.395,1016,5.269,1025,3.224,1026,2.395,1044,3.224,1069,2.827,1086,4.235,1100,2.395,1140,3.572,1147,4.399,1169,3.01,1199,3.482,1211,3.482,1285,2.279,1403,3.224,1508,3.482,1747,3.482,1953,4.074,1954,4.074,1958,3.01,1962,3.804,1963,4.89,1964,3.804,1965,4.235,1966,4.89,1967,4.89,1968,3.482,1969,4.235,1970,4.89,1971,4.89,1972,4.89,1973,4.89,1974,4.89,1975,4.89,1976,4.89,1977,4.89]],["title/additional-documentation/modules/request-response.html",[11,1.002,13,1.044,1522,0.888,1626,0.888]],["body/additional-documentation/modules/request-response.html",[0,1.674,1,2.724,11,2.251,12,3.408,13,2.607,15,0.014,18,2.277,20,1.26,22,2.543,24,1.835,25,0.789,29,3.2,32,3.019,35,0.588,36,0.509,37,1.925,38,1.751,39,2.388,40,3.578,41,3.213,42,2.543,43,1.299,44,3.578,45,0.011,46,0.011,54,2.53,83,2.647,85,2.023,98,1.751,112,1.353,152,3.885,153,3.222,363,2.58,371,1.198,410,2.023,413,3.65,429,2.543,443,3.191,444,3.18,445,3.213,461,3.65,463,3.65,473,2.543,655,2.963,816,5.098,910,2.132,940,2.941,969,2.543,994,2.724,1044,3.65,1100,2.023,1140,3.61,1204,5.778,1280,2.724,1281,2.941,1285,2.91,1522,1.151,1652,2.941,1704,3.213,1968,2.941,1978,5.408,1979,5.408,1980,6.245,1981,4.131,1982,4.131]],["title/additional-documentation/modules/mailer.html",[315,2.406,1522,1.017,1626,1.017]],["body/additional-documentation/modules/mailer.html",[2,1.406,5,0.705,15,0.014,16,0.808,18,1.03,25,0.43,35,0.75,36,0.649,37,1.406,38,1.279,45,0.009,46,0.009,62,1.03,78,2.291,85,1.478,110,1.616,113,1.279,118,1.744,121,1.744,126,2.291,127,1.971,162,0.841,165,2.42,193,1.557,217,3.048,224,2.614,231,1.858,249,1.478,266,1.557,268,1.557,270,2.148,284,3.828,288,3.983,294,3.844,304,2.291,305,1.858,310,3.453,311,4.56,313,5.033,315,4.08,320,1.858,325,1.858,335,4.445,354,2.871,431,1.557,443,1.279,538,1.744,610,1.858,612,2.566,702,2.614,708,3.574,774,3.166,779,1.99,790,1.279,816,3.749,858,2.42,910,1.557,916,1.744,919,1.744,925,1.858,928,2.927,944,3.044,946,1.478,965,2.174,967,2.347,968,2.148,977,1.858,1008,2.347,1025,1.99,1026,2.844,1027,1.99,1030,4.096,1036,2.148,1061,3.867,1072,2.347,1082,1.557,1087,2.927,1100,3.362,1101,1.99,1102,3.16,1103,2.347,1117,2.291,1141,2.347,1143,3.749,1162,2.347,1169,3.809,1176,1.744,1183,1.858,1195,3.844,1213,2.347,1231,1.99,1239,1.99,1277,2.347,1285,2.068,1287,2.566,1305,2.614,1308,2.148,1344,2.148,1365,1.858,1426,2.614,1508,2.148,1536,2.347,1747,2.148,1867,2.732,1872,3.16,1875,2.148,1895,2.347,1924,2.347,1958,1.858,1960,4.56,1962,2.347,1964,2.347,1968,2.148,1969,2.614,1983,3.453,1984,2.614,1985,3.018,1986,2.347,1987,3.018,1988,2.614,1989,3.018,1990,3.018,1991,2.614,1992,3.018,1993,2.614,1994,2.614,1995,3.018,1996,3.018,1997,3.018,1998,3.018,1999,1.99,2000,3.018,2001,3.018,2002,3.018,2003,3.018,2004,3.018,2005,3.018,2006,4.56,2007,4.439,2008,4.439,2009,3.018,2010,3.018,2011,3.018,2012,3.018,2013,2.347,2014,3.018,2015,3.018,2016,4.439,2017,3.018,2018,3.018,2019,3.018,2020,3.018,2021,3.018,2022,3.018,2023,3.018,2024,2.347,2025,2.614,2026,3.018,2027,2.347,2028,3.018,2029,3.018,2030,3.018,2031,3.018,2032,3.018,2033,4.439,2034,4.439,2035,3.018,2036,3.018,2037,3.018,2038,4.439,2039,2.614,2040,3.018,2041,2.614,2042,3.16,2043,2.614,2044,3.018,2045,4.439,2046,3.018,2047,3.018,2048,3.018,2049,3.018,2050,3.018,2051,3.018]],["title/additional-documentation/modules/database.html",[273,1.787,1522,1.017,1626,1.017]],["body/additional-documentation/modules/database.html",[2,0.774,13,0.544,15,0.015,19,1.078,20,1.072,25,0.395,35,0.237,36,0.205,38,0.704,39,0.96,45,0.009,46,0.005,54,0.673,58,0.857,60,1.942,62,0.946,83,0.704,85,2.042,94,1.452,98,1.176,110,0.782,112,0.544,124,1.358,126,0.857,127,1.851,161,1.022,162,1.291,163,1.292,177,1.707,185,1.974,188,2.542,193,0.857,213,0.857,215,0.96,242,2.392,248,1.095,249,2.042,263,1.828,264,2.402,265,3.504,266,2.392,267,2.402,268,2.585,270,2.968,271,2.402,272,2.402,273,3.66,274,2.402,275,2.585,276,3.242,277,2.402,278,1.707,279,1.828,280,2.063,327,2.853,355,1.292,375,0.906,376,1.358,378,1.828,386,1.292,410,2.27,411,1.183,412,2.151,430,1.748,435,1.183,444,2.973,451,1.707,538,0.96,542,1.183,547,0.96,551,2.777,561,1.439,562,1.292,563,2.197,564,1.022,588,1.022,610,1.022,612,1.603,646,0.96,655,1.232,707,2.157,708,2.197,709,1.603,712,1.439,724,1.439,750,2.402,751,2.063,756,1.292,770,1.183,786,1.022,789,1.022,790,1.965,793,2.777,802,3.61,857,1.183,858,1.512,904,1.095,910,1.431,919,3.072,922,1.095,924,1.183,925,1.022,929,1.183,934,2.777,936,1.292,937,1.974,944,2.679,946,1.358,948,0.96,951,1.183,952,1.974,954,1.707,957,2.157,965,3.073,968,1.183,969,1.022,973,1.292,977,1.022,994,1.828,1008,1.292,1026,1.748,1028,1.183,1031,2.542,1035,4.338,1036,1.183,1038,3.3,1039,4.824,1044,1.828,1055,2.527,1061,3.22,1082,0.857,1087,1.095,1100,0.814,1103,2.157,1106,0.906,1117,0.857,1118,1.439,1135,1.292,1140,0.96,1143,1.183,1146,1.292,1159,1.022,1162,1.292,1166,1.439,1169,1.707,1183,2.197,1191,2.157,1192,2.402,1197,1.292,1199,1.183,1209,1.439,1211,1.183,1227,1.974,1228,1.974,1231,1.095,1251,3.61,1259,1.974,1284,1.439,1285,0.774,1286,1.095,1300,1.022,1308,1.974,1317,1.292,1329,1.292,1342,1.439,1354,1.183,1365,1.022,1366,1.095,1386,1.439,1390,1.439,1393,2.402,1398,1.292,1400,0.906,1403,1.095,1412,1.292,1425,2.157,1433,1.292,1442,1.439,1445,1.183,1461,1.292,1493,2.402,1495,1.439,1508,1.183,1519,1.439,1569,2.402,1593,2.402,1602,1.439,1620,1.292,1626,0.463,1635,2.542,1692,2.157,1704,1.292,1719,3.605,1732,1.439,1865,2.402,1875,2.542,1879,1.439,1885,1.022,1897,1.292,1906,3.092,1938,1.439,1953,1.828,1954,1.828,1955,1.439,1958,1.022,1959,2.402,1979,1.439,1983,1.292,1993,1.439,1999,1.095,2006,1.439,2042,1.183,2052,4.77,2053,1.439,2054,2.773,2055,1.439,2056,1.292,2057,2.402,2058,1.661,2059,5.315,2060,5.786,2061,4.014,2062,2.773,2063,1.661,2064,2.773,2065,1.661,2066,3.61,2067,1.661,2068,1.183,2069,1.661,2070,2.402,2071,2.402,2072,2.773,2073,1.661,2074,1.661,2075,1.661,2076,1.439,2077,1.661,2078,1.661,2079,1.661,2080,1.661,2081,1.661,2082,1.661,2083,1.661,2084,1.439,2085,1.661,2086,1.661,2087,1.439,2088,1.661,2089,1.661,2090,1.661,2091,2.773,2092,2.773,2093,2.773,2094,1.661,2095,1.661,2096,1.661,2097,1.661,2098,1.661,2099,2.773,2100,2.773,2101,1.661,2102,1.661,2103,2.773,2104,1.661,2105,1.661,2106,1.661,2107,1.661,2108,1.661,2109,1.661,2110,1.661,2111,1.661,2112,1.661,2113,1.661,2114,1.661,2115,1.439,2116,1.661,2117,1.661,2118,5.009,2119,2.773,2120,3.566,2121,1.661,2122,3.092,2123,1.661,2124,1.661,2125,1.661,2126,4.014,2127,1.661,2128,4.635,2129,1.292,2130,1.439,2131,1.661,2132,2.773,2133,1.661,2134,1.661,2135,4.014,2136,1.661,2137,1.661,2138,1.661,2139,1.292,2140,1.661,2141,1.661,2142,1.439,2143,5.009,2144,5.009,2145,1.292,2146,2.773,2147,5.009,2148,2.773,2149,1.661,2150,1.661,2151,2.773,2152,2.773,2153,1.661,2154,1.661,2155,2.402,2156,1.661,2157,1.439,2158,1.661,2159,1.661,2160,1.661,2161,1.661,2162,1.661,2163,1.661,2164,1.439,2165,2.157,2166,1.661,2167,1.661,2168,1.661,2169,1.661,2170,1.661,2171,1.661,2172,1.661,2173,1.661,2174,1.661,2175,1.661,2176,1.439,2177,1.661,2178,1.661,2179,2.402,2180,1.439,2181,2.773,2182,1.661,2183,1.661,2184,1.661,2185,1.661,2186,1.661,2187,1.439,2188,1.661,2189,1.661,2190,1.661,2191,1.661,2192,1.661,2193,1.661,2194,1.661,2195,3.57,2196,1.661,2197,1.661,2198,1.661,2199,1.661,2200,1.661,2201,1.661,2202,1.661,2203,1.661,2204,1.661,2205,1.661,2206,1.661,2207,2.402,2208,1.661,2209,1.439,2210,1.661,2211,1.661,2212,1.661,2213,1.661,2214,1.661,2215,1.661,2216,1.661,2217,1.661,2218,1.661,2219,1.661,2220,1.661,2221,1.292,2222,1.439,2223,1.661,2224,1.661,2225,1.661,2226,1.661,2227,1.661,2228,1.661,2229,1.439,2230,1.661,2231,1.661,2232,2.773,2233,1.292,2234,1.661,2235,1.661,2236,1.661,2237,1.661,2238,1.292,2239,1.439,2240,1.661,2241,1.661,2242,1.661]],["title/additional-documentation/modules/pattern.html",[1292,2.109,1522,1.017,1626,1.017]],["body/additional-documentation/modules/pattern.html",[0,1.223,8,0.988,11,0.949,15,0.013,16,1.732,18,1.03,25,0.43,36,0.372,45,0.009,46,0.009,93,2.148,110,0.972,111,1.744,112,0.988,162,1.237,246,2.566,273,2.844,275,2.291,316,1.34,371,1.287,410,2.174,424,2.148,431,1.557,443,2.461,444,2.748,538,1.744,547,3.044,551,2.347,562,2.347,563,3.574,566,4.225,612,1.744,655,1.971,661,1.478,665,1.744,760,1.645,762,1.858,765,2.732,782,2.347,800,1.744,857,2.148,910,1.557,912,3.16,919,3.044,922,1.99,946,2.579,948,1.744,951,3.16,956,1.99,965,1.478,973,2.347,983,4.813,994,1.99,1003,2.347,1025,1.99,1039,2.148,1069,2.566,1074,2.347,1082,1.557,1087,4.266,1100,1.478,1104,2.42,1143,2.148,1159,1.858,1165,2.148,1169,1.858,1172,2.347,1176,1.744,1215,2.148,1231,3.472,1238,4.516,1239,2.927,1246,3.749,1259,2.148,1280,1.99,1281,3.749,1285,2.454,1287,1.744,1289,1.99,1292,2.566,1299,4.08,1344,2.148,1354,4.886,1385,3.844,1400,1.645,1425,2.347,1433,2.347,1615,3.844,1654,2.148,1851,2.148,1853,2.614,1867,1.858,1895,2.347,1897,2.347,1900,2.614,1908,2.614,1920,3.844,1953,2.927,1954,2.927,1958,1.858,1965,2.614,2013,2.347,2024,2.347,2027,2.347,2039,2.614,2055,2.614,2084,2.614,2120,3.16,2130,4.56,2135,4.56,2139,4.096,2243,5.266,2244,3.018,2245,3.018,2246,3.018,2247,3.018,2248,3.018,2249,3.018,2250,3.018,2251,2.614,2252,5.806,2253,2.614,2254,3.844,2255,3.018,2256,3.018,2257,5.359,2258,3.018,2259,3.844,2260,3.018,2261,3.018,2262,2.148,2263,3.844,2264,3.018,2265,3.018,2266,3.018,2267,4.439,2268,3.018,2269,3.844,2270,4.56,2271,3.018,2272,3.018,2273,5.806,2274,5.806,2275,3.018,2276,4.56,2277,3.018,2278,4.439,2279,5.806,2280,4.439,2281,3.018,2282,4.439,2283,2.614,2284,3.844,2285,3.018,2286,3.018,2287,3.018,2288,3.018,2289,3.018,2290,3.018,2291,3.018,2292,3.018,2293,3.453,2294,3.018,2295,3.018,2296,3.018,2297,3.018,2298,2.347,2299,3.018,2300,3.018,2301,3.018,2302,3.018,2303,3.018,2304,3.018,2305,4.439,2306,3.018,2307,5.266,2308,3.018,2309,2.614,2310,3.844,2311,3.844,2312,3.018,2313,2.614,2314,3.018,2315,3.018,2316,3.018,2317,3.018,2318,3.018,2319,2.614,2320,3.018,2321,3.018]],["title/additional-documentation/modules/crypto.html",[1293,2.406,1522,1.017,1626,1.017]],["body/additional-documentation/modules/crypto.html",[5,0.589,11,0.879,15,0.011,45,0.008,46,0.008,65,2.236,85,1.37,87,2.662,110,1.225,153,1.443,162,1.169,186,2.422,249,1.37,304,1.443,327,2.583,337,2.176,370,3.634,375,1.525,435,1.991,440,2.766,443,1.779,444,2.795,449,2.176,473,4.132,538,3.233,661,1.37,766,1.991,767,1.617,769,1.722,790,1.779,796,1.37,809,3.634,825,4.351,826,2.176,830,3.264,884,2.422,910,1.443,919,1.617,925,1.722,937,2.987,944,1.617,946,1.37,948,1.617,954,1.722,965,2.74,981,1.991,984,1.525,990,3.634,1003,3.264,1030,3.264,1031,1.991,1032,3.584,1055,1.525,1100,2.74,1126,5.222,1140,2.425,1165,1.991,1183,1.722,1231,1.844,1235,2.422,1276,1.991,1285,3.199,1287,2.425,1293,1.844,1309,6.46,1314,2.176,1356,2.176,1365,2.583,1366,1.844,1381,2.422,1398,2.176,1400,1.525,1423,2.422,1445,1.991,1514,2.176,1562,2.422,1682,5.652,1683,5.191,1684,5.45,1686,2.422,1688,2.422,1693,3.634,1705,4.845,1706,4.36,1716,4.36,1717,2.422,1728,2.422,1729,3.634,1730,3.634,1763,2.422,1841,4.845,1874,2.422,1875,1.991,1885,1.722,1910,2.422,1919,2.422,1953,1.844,1954,1.844,1958,1.722,1962,2.176,1964,2.176,1968,1.991,1983,2.176,1986,2.176,1991,2.422,1999,1.844,2068,1.991,2071,3.634,2115,2.422,2126,3.634,2129,3.264,2142,2.422,2145,2.176,2155,2.422,2164,2.422,2179,2.422,2233,2.176,2262,1.991,2283,2.422,2293,2.176,2322,6.713,2323,2.422,2324,2.797,2325,2.797,2326,2.797,2327,4.196,2328,4.196,2329,2.797,2330,2.797,2331,2.797,2332,2.176,2333,5.035,2334,2.797,2335,2.797,2336,2.797,2337,2.797,2338,2.797,2339,2.797,2340,2.797,2341,2.797,2342,4.196,2343,2.797,2344,2.797,2345,2.797,2346,2.797,2347,2.797,2348,2.797,2349,2.797,2350,2.422,2351,2.797,2352,2.797,2353,2.797,2354,2.797,2355,2.797,2356,2.797,2357,2.797,2358,5.994,2359,2.797,2360,4.196,2361,2.797,2362,2.797,2363,2.797,2364,2.797,2365,2.797,2366,2.797,2367,5.594,2368,2.797,2369,2.797,2370,4.196,2371,6.293,2372,2.797,2373,2.797,2374,2.797,2375,5.994,2376,5.035,2377,5.035,2378,2.797,2379,2.797,2380,2.797,2381,2.797,2382,4.36,2383,2.797,2384,2.797,2385,2.797,2386,2.797,2387,2.797,2388,2.797,2389,2.797,2390,2.797,2391,2.797,2392,2.797,2393,2.797,2394,5.035,2395,2.797,2396,2.797,2397,4.196,2398,2.797,2399,2.797,2400,2.797,2401,2.797,2402,2.797,2403,5.035,2404,2.797,2405,5.035,2406,4.196,2407,2.797,2408,2.797,2409,2.797,2410,2.797]],["title/additional-documentation/modules/open-api/swagger.html",[783,1.962,1522,0.888,1626,0.888,2411,3.187]],["body/additional-documentation/modules/open-api/swagger.html",[5,0.606,14,2.144,15,0.015,25,0.915,26,1.172,28,3.326,35,0.623,42,2.694,45,0.011,46,0.011,60,2.04,62,1.494,76,1.944,78,2.259,87,3.149,97,3.405,98,2.439,110,0.958,113,1.856,278,2.694,279,3.793,301,3.793,412,2.259,430,2.144,431,3.316,443,2.724,655,1.944,708,2.694,765,3.541,774,3.137,790,1.856,800,2.53,839,3.116,840,3.405,841,3.405,909,4.475,923,3.791,924,3.116,927,3.405,949,3.405,954,2.694,963,3.791,984,2.387,1021,5.048,1026,2.144,1027,2.886,1044,2.886,1061,3.326,1069,2.53,1075,3.405,1082,2.259,1100,2.144,1104,2.387,1106,2.387,1117,2.969,1147,3.116,1285,2.04,1295,3.405,1300,2.694,1358,3.791,1365,2.694,1635,3.116,1775,3.791,1825,3.791,1836,4.983,1838,3.791,1840,3.791,1844,3.791,1845,3.791,1867,2.694,2222,4.983,2412,5.753,2413,4.983,2414,4.377,2415,3.791,2416,4.377,2417,3.791,2418,4.377,2419,4.377,2420,4.377,2421,4.377,2422,4.377,2423,4.377,2424,4.377,2425,4.377,2426,4.377,2427,4.377,2428,4.377,2429,4.377]],["title/additional-documentation/miscellaneous.html",[901,1.883,1522,1.017,1626,1.017]],["body/additional-documentation/miscellaneous.html",[15,0.014,45,0.014,46,0.014,901,3.122,943,3.724,998,4.706,1007,4.308,1048,3.122,1050,4.308,1105,4.308,1297,4.706,1298,3.989,1299,3.989,1300,3.724,1301,4.706]],["title/additional-documentation/miscellaneous/git-commits.html",[1048,1.645,1298,2.102,1522,0.888,1626,0.888]],["body/additional-documentation/miscellaneous/git-commits.html",[15,0.014,19,1.315,20,1.157,45,0.011,46,0.011,65,2.547,78,2.248,98,1.847,110,0.954,113,1.847,443,3.001,751,2.518,774,2.375,794,3.53,800,3.315,929,3.102,941,4.083,946,3.14,984,2.375,992,4.565,1026,2.134,1046,4.967,1047,3.773,1048,3.516,1049,4.565,1055,2.375,1104,3.127,1144,3.389,1155,3.773,1160,3.389,1172,3.389,1176,2.518,1262,3.773,1286,4.492,1289,2.872,1298,2.872,1314,3.389,1317,3.389,1400,3.127,1494,3.389,1536,3.389,1909,3.389,1935,5.901,1939,4.461,1940,5.654,1994,3.773,2043,3.773,2269,3.773,2430,6.412,2431,3.773,2432,4.357,2433,4.967,2434,3.773,2435,3.389,2436,3.773,2437,4.357,2438,5.735,2439,4.357,2440,5.735,2441,4.357,2442,4.357,2443,4.357,2444,4.357,2445,4.967,2446,5.735,2447,3.773,2448,5.735,2449,4.357,2450,4.357,2451,4.357,2452,4.357,2453,4.357,2454,4.357,2455,3.773,2456,4.357,2457,4.357,2458,4.357,2459,4.357,2460,4.357,2461,4.357,2462,4.357,2463,4.357,2464,4.357,2465,4.967,2466,4.357,2467,4.357,2468,4.357,2469,4.357]],["title/additional-documentation/miscellaneous/known-issues.html",[998,2.479,1297,2.479,1522,0.888,1626,0.888]],["body/additional-documentation/miscellaneous/known-issues.html",[13,1.954,15,0.014,36,0.859,45,0.01,46,0.01,54,2.606,55,3.712,62,1.291,265,4.801,273,1.853,279,2.494,327,3.21,371,1.865,383,3.21,430,1.853,439,2.693,560,3.934,646,2.186,708,3.959,709,3.014,761,3.21,762,3.21,767,3.014,858,2.843,863,3.276,873,4.642,894,3.276,895,2.942,910,1.952,943,4.153,1018,2.942,1026,3.501,1061,4.272,1068,4.056,1069,3.014,1087,2.494,1100,1.853,1102,2.693,1116,4.056,1117,1.952,1121,5.168,1123,2.693,1144,2.942,1158,2.942,1161,4.056,1176,2.186,1178,3.276,1197,2.942,1210,4.516,1246,2.693,1287,2.186,1497,3.276,1939,4.056,1988,3.276,1999,3.438,2056,2.942,2165,4.056,2233,4.056,2262,2.693,2319,3.276,2382,4.516,2465,4.516,2470,5.214,2471,5.214,2472,3.782,2473,3.782,2474,3.782,2475,3.782,2476,3.782,2477,3.782,2478,5.214,2479,5.214,2480,3.782,2481,3.782,2482,5.214,2483,3.782,2484,3.782,2485,5.214,2486,3.782,2487,3.782,2488,3.782,2489,3.782,2490,5.214,2491,3.782,2492,3.782,2493,3.782,2494,3.782,2495,3.782,2496,3.276,2497,3.782,2498,3.782,2499,3.782,2500,3.782,2501,3.782,2502,5.214,2503,4.516,2504,3.782,2505,3.782,2506,5.214,2507,3.782,2508,3.782,2509,3.782,2510,3.782,2511,3.782,2512,3.276,2513,3.782,2514,3.782,2515,3.782,2516,3.782,2517,3.782,2518,3.782,2519,3.782,2520,3.782,2521,3.782]],["title/additional-documentation/miscellaneous/clean-docker-images.html",[943,1.742,1105,2.014,1299,1.865,1522,0.788,1626,0.788]],["body/additional-documentation/miscellaneous/clean-docker-images.html",[15,0.012,45,0.012,46,0.012,643,3.667,661,2.523,665,2.977,707,5.396,774,3.782,790,2.94,928,4.574,943,4.943,950,4.209,1068,4.965,1105,5.162,1107,5.528,1112,3.396,1123,3.667,1268,3.667,1299,4.209,2496,4.461,2522,6.383,2523,5.151,2524,6.937,2525,5.151,2526,5.151,2527,6.937,2528,6.383,2529,6.383,2530,5.151,2531,5.151,2532,5.151,2533,6.383,2534,5.151]],["title/additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html",[15,0.004,1007,1.645,1050,1.645,1300,1.422,1301,1.797,1522,0.644,1626,0.644]],["body/additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html",[5,0.656,15,0.013,25,0.706,45,0.012,46,0.012,62,1.692,78,2.558,279,4.494,301,3.268,333,2.865,708,4.196,776,3.855,858,2.702,948,2.865,977,3.051,1005,6.382,1006,5.397,1007,4.853,1026,3.339,1048,2.558,1049,3.529,1050,3.529,1051,4.292,1055,3.899,1061,3.94,1106,2.702,1159,3.051,1292,2.865,1494,3.855,1619,4.292,1851,3.529,1885,3.051,1940,4.847,2176,4.292,2187,4.292,2433,5.397,2434,4.292,2435,3.855,2436,5.903,2455,4.292,2535,4.292,2536,3.855,2537,4.956,2538,4.956,2539,4.956,2540,4.956,2541,4.956,2542,4.956,2543,4.956,2544,6.232,2545,4.956,2546,4.956,2547,4.956,2548,4.956,2549,4.956,2550,4.956,2551,4.956,2552,4.956]],["title/additional-documentation/trainings.html",[995,2.838,1522,1.017,1626,1.017]],["body/additional-documentation/trainings.html",[15,0.014,45,0.014,46,0.014,430,3.003,916,4.095,975,3.774,995,4.769,1048,3.164,1302,4.927]],["title/additional-documentation/trainings/node-js-for-beginners.html",[916,1.635,975,1.742,1302,1.865,1522,0.788,1626,0.788]],["body/additional-documentation/trainings/node-js-for-beginners.html",[0,0.841,3,0.496,5,0.616,8,1.09,11,0.653,13,0.68,15,0.013,19,0.627,45,0.006,46,0.006,54,0.841,55,1.478,57,1.478,83,2.659,94,0.965,98,1.411,110,1.331,112,0.68,123,1.924,162,1.629,231,1.278,232,2.589,249,2.865,278,1.278,327,3.427,335,1.278,345,1.798,379,1.017,410,1.017,412,1.718,429,1.278,431,1.071,444,2.117,612,2.408,655,2.317,661,1.017,665,1.2,709,2.755,751,1.924,757,1.278,758,1.278,760,1.815,769,3.211,779,1.369,781,1.615,790,1.766,796,1.63,858,1.132,904,2.195,910,1.071,916,3.016,918,1.478,922,1.369,924,2.966,925,3.742,928,1.369,937,1.478,939,4.058,940,1.478,941,1.478,950,3.143,951,1.478,952,1.478,954,2.565,956,1.369,965,3.072,975,3.6,977,3.211,982,1.615,983,1.615,984,2.272,1017,3.241,1022,1.478,1026,1.63,1031,2.37,1032,1.478,1038,2.37,1049,1.478,1055,1.132,1057,1.615,1072,1.615,1075,1.615,1082,1.071,1104,1.132,1106,2.599,1117,1.718,1130,1.798,1147,2.37,1151,1.615,1152,3.608,1158,1.615,1159,2.049,1161,1.615,1208,1.798,1213,1.615,1214,3.608,1215,1.478,1224,1.798,1227,1.478,1228,1.478,1265,1.615,1268,1.478,1276,1.478,1279,1.798,1285,0.967,1286,2.195,1289,1.369,1292,1.2,1293,3.143,1300,1.278,1308,2.37,1310,1.798,1329,3.241,1344,2.37,1345,1.615,1400,1.815,1451,2.589,1460,1.798,1461,1.615,1489,1.798,1503,1.798,1510,2.883,1525,1.798,1537,1.798,1572,5.97,1613,1.798,1652,1.478,1653,1.615,1654,1.478,1655,1.615,1691,3.608,1734,4.518,1747,1.478,1855,1.798,1891,1.798,1892,1.798,1909,2.589,1984,1.798,1986,1.615,1999,1.369,2024,1.615,2025,1.798,2042,1.478,2052,1.615,2057,1.798,2061,1.798,2068,1.478,2076,3.608,2087,1.798,2120,1.478,2129,1.615,2139,2.589,2145,1.615,2165,1.615,2180,1.798,2207,1.798,2209,2.883,2221,1.615,2229,1.798,2238,1.615,2253,1.798,2257,1.798,2263,1.798,2270,1.798,2276,4.128,2298,1.615,2309,2.883,2313,1.798,2332,2.589,2350,1.798,2415,1.798,2447,4.518,2536,1.615,2553,1.798,2554,1.798,2555,3.608,2556,2.076,2557,2.076,2558,2.076,2559,4.766,2560,2.076,2561,2.076,2562,3.329,2563,2.076,2564,3.329,2565,2.076,2566,4.166,2567,2.076,2568,3.329,2569,2.076,2570,2.076,2571,2.076,2572,2.076,2573,2.076,2574,2.076,2575,2.076,2576,2.076,2577,2.076,2578,3.329,2579,2.076,2580,2.076,2581,2.076,2582,3.329,2583,4.166,2584,2.076,2585,2.076,2586,2.076,2587,2.076,2588,2.076,2589,2.076,2590,2.076,2591,2.076,2592,2.076,2593,2.076,2594,2.076,2595,2.076,2596,2.076,2597,1.798,2598,2.076,2599,4.128,2600,2.076,2601,3.329,2602,2.076,2603,2.076,2604,4.166,2605,1.798,2606,2.076,2607,2.076,2608,2.076,2609,2.076,2610,2.076,2611,2.076,2612,3.329,2613,2.076,2614,2.076,2615,2.076,2616,2.076,2617,2.076,2618,3.329,2619,2.076,2620,2.076,2621,2.076,2622,3.329,2623,2.076,2624,3.329,2625,2.076,2626,2.076,2627,2.076,2628,2.076,2629,2.076,2630,2.076,2631,3.329,2632,7.117,2633,5.568,2634,3.329,2635,2.076,2636,2.076,2637,2.076,2638,2.076,2639,2.076,2640,2.076,2641,2.076,2642,2.076,2643,2.076,2644,2.076,2645,2.076,2646,2.076,2647,2.076,2648,2.076,2649,3.329,2650,2.076,2651,3.329,2652,3.329,2653,3.329,2654,4.766,2655,2.076,2656,2.076,2657,4.166,2658,3.608,2659,4.166,2660,3.329,2661,3.329,2662,2.076,2663,3.329,2664,2.076,2665,2.076,2666,2.076,2667,1.798,2668,3.329,2669,2.076,2670,2.076,2671,4.166,2672,4.166,2673,2.076,2674,2.076,2675,2.076,2676,2.076,2677,2.076,2678,2.076,2679,2.076,2680,2.076,2681,2.076,2682,2.076,2683,2.076,2684,2.076,2685,2.076,2686,2.076,2687,2.076,2688,2.076,2689,2.076,2690,2.076,2691,2.076,2692,2.076,2693,2.076,2694,2.076,2695,2.076,2696,2.076,2697,2.076,2698,2.076,2699,2.076,2700,2.076,2701,2.076,2702,3.329,2703,4.766,2704,3.329,2705,2.076,2706,2.076,2707,2.076,2708,2.076,2709,4.766,2710,2.076,2711,2.076,2712,3.329,2713,2.076,2714,2.076,2715,2.076,2716,3.329,2717,2.076,2718,2.076]],["title/additional-documentation/trainings/nest-js-for-beginners.html",[430,1.386,916,1.635,1302,1.865,1522,0.788,1626,0.788]],["body/additional-documentation/trainings/nest-js-for-beginners.html",[0,1.914,2,1.174,5,0.266,11,1.667,13,0.826,14,1.235,15,0.009,18,1.323,19,0.761,20,0.953,36,0.745,45,0.008,46,0.008,50,1.021,54,1.021,62,1.323,110,1.516,111,1.457,112,1.737,113,1.069,126,3.574,127,1.722,143,1.235,152,1.301,153,1.301,162,0.702,169,1.662,212,1.662,231,2.386,273,1.899,275,2.438,281,2.183,304,1.301,354,1.374,371,0.731,379,1.899,386,1.961,393,2.183,411,1.795,412,1.301,415,3.015,429,3.264,430,3.392,444,2.355,448,1.795,547,1.457,560,1.662,566,1.552,643,1.795,655,2.355,661,1.235,665,1.457,709,1.457,751,3.065,757,2.386,758,2.386,783,1.552,790,2.669,796,1.235,873,1.961,895,1.961,912,3.776,916,3.639,918,2.76,919,3.065,922,2.556,925,1.552,927,3.015,928,1.662,929,1.795,934,4.125,938,2.183,939,1.961,941,2.76,943,1.552,945,4.091,948,1.457,950,3.115,952,1.795,956,1.662,965,2.314,969,2.908,975,1.552,984,2.575,1016,1.961,1017,1.961,1018,1.961,1021,1.795,1025,2.556,1026,1.235,1027,1.662,1038,1.795,1039,2.76,1055,2.575,1057,1.961,1061,3.065,1069,2.73,1070,4.125,1100,1.235,1104,1.374,1106,2.575,1112,1.662,1116,1.961,1117,2.737,1135,1.961,1137,4.091,1151,1.961,1176,1.457,1188,4.091,1227,2.76,1232,2.183,1238,3.015,1239,2.556,1240,2.183,1246,1.795,1252,2.183,1265,1.961,1268,1.795,1281,4.076,1283,5.453,1287,3.065,1289,1.662,1292,1.457,1345,1.961,1354,2.76,1396,2.183,1400,2.114,1403,2.556,1445,2.76,1451,1.961,1528,2.183,1638,1.961,1653,1.961,1654,1.795,1655,1.961,1719,1.961,1733,2.183,1867,1.552,1872,1.795,1885,1.552,1903,2.183,1924,1.961,1978,2.183,2013,3.015,2027,1.961,2041,2.183,2042,1.795,2052,3.674,2053,2.183,2056,1.961,2066,4.091,2068,1.795,2070,3.357,2120,1.795,2122,2.183,2157,2.183,2221,3.015,2238,1.961,2239,3.357,2251,2.183,2254,2.183,2259,2.183,2262,1.795,2284,2.183,2293,1.961,2298,1.961,2310,2.183,2311,2.183,2323,2.183,2332,1.961,2413,2.183,2417,3.357,2431,2.183,2435,1.961,2445,5.235,2503,2.183,2512,2.183,2535,2.183,2536,1.961,2553,2.183,2554,2.183,2555,4.091,2597,4.091,2599,3.357,2605,2.183,2658,2.183,2667,2.183,2719,2.521,2720,2.521,2721,2.521,2722,2.521,2723,3.877,2724,2.521,2725,2.521,2726,2.521,2727,2.521,2728,2.521,2729,3.877,2730,2.521,2731,2.521,2732,3.877,2733,2.521,2734,2.521,2735,2.521,2736,2.521,2737,2.521,2738,3.877,2739,2.521,2740,2.521,2741,2.521,2742,2.521,2743,2.521,2744,2.521,2745,2.521,2746,2.521,2747,2.521,2748,2.521,2749,5.725,2750,2.521,2751,5.303,2752,2.521,2753,2.521,2754,2.521,2755,2.521,2756,3.877,2757,3.877,2758,2.521,2759,4.724,2760,2.521,2761,2.521,2762,3.877,2763,2.521,2764,2.521,2765,2.521,2766,2.521,2767,2.521,2768,3.877,2769,2.521,2770,2.521,2771,2.521,2772,2.521,2773,4.724,2774,2.521,2775,2.521,2776,2.521,2777,2.521,2778,2.521,2779,2.521,2780,2.521,2781,2.521,2782,5.303,2783,2.521,2784,2.521,2785,2.521,2786,2.521]],["title/additional-documentation/trainings/git-for-beginners.html",[1048,1.645,1302,2.102,1522,0.888,1626,0.888]],["body/additional-documentation/trainings/git-for-beginners.html",[15,0.014,45,0.014,46,0.014,1048,3.952,1149,5.257,1373,5.257,2787,7.045,2788,7.045,2789,6.07]]],"invertedIndex":[["",{"_index":15,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["0",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1656,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1976,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["1",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["1.0.0",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2630,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["100",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2670,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["11.0.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2689,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["123456seven",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127.0.0.1:${db_port}:3306",{"_index":2495,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["128",{"_index":2406,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["13",{"_index":2697,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["15t05:45:28.894z",{"_index":1977,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["16",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["2.0",{"_index":1332,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":1278,"title":{},"body":{"index.html":{}}}],["2.1.4",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":1282,"title":{},"body":{"index.html":{}}}],["2.2.5",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2004",{"_index":1334,"title":{},"body":{"license.html":{}}}],["201",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2021",{"_index":1975,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["2145",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["27017",{"_index":2095,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["28",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1289,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["3.0.2",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2487,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["3.3.3",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3306",{"_index":2094,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["4",{"_index":1654,"title":{},"body":{"overview.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["4.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1655,"title":{},"body":{"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["5.0.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1373,"title":{},"body":{"license.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["6",{"_index":1268,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["6.1.0",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2605,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["7.3.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1653,"title":{},"body":{"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["8.0.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1345,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["__dirname",{"_index":2087,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["__dirname}/email",{"_index":346,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["__filename",{"_index":2573,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ability",{"_index":2733,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["above",{"_index":956,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["abstraction",{"_index":955,"title":{},"body":{"index.html":{}}}],["acceptance",{"_index":1598,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1596,"title":{},"body":{"license.html":{}}}],["access",{"_index":1227,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["access_token",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["according",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["accounts",{"_index":2192,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["accurate",{"_index":1917,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["achieve",{"_index":2392,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["act",{"_index":1603,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1353,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1219,"title":{},"body":{"index.html":{}}}],["active",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acts",{"_index":1579,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2442,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["actually",{"_index":2153,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["add",{"_index":1117,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["addbearerauth",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["added",{"_index":2431,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["addendum",{"_index":1521,"title":{},"body":{"license.html":{}}}],["adding",{"_index":2445,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["additional",{"_index":1522,"title":{"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"license.html":{},"additional-documentation/modules/request-response.html":{}}}],["additions",{"_index":1417,"title":{},"body":{"license.html":{}}}],["addlistener",{"_index":2643,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["addressing",{"_index":785,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["adds",{"_index":2460,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["adhere",{"_index":1912,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["admin",{"_index":2093,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["advanced",{"_index":1023,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":2502,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["advised",{"_index":1594,"title":{},"body":{"license.html":{}}}],["aes",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["aes/cbc",{"_index":2364,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["aes/gcm",{"_index":2365,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["affect",{"_index":2446,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["afterall(async",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["against",{"_index":1036,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["agnostic",{"_index":2414,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["ago",{"_index":1934,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["agree",{"_index":1606,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["agreed",{"_index":1553,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1535,"title":{},"body":{"license.html":{}}}],["aims",{"_index":1886,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["algorithm",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["algorithms",{"_index":2370,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["alleging",{"_index":1483,"title":{},"body":{"license.html":{}}}],["allocation",{"_index":2639,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["allow",{"_index":1146,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["allowed",{"_index":2228,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["allowing",{"_index":1153,"title":{},"body":{"index.html":{}}}],["allows",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["alone",{"_index":1476,"title":{},"body":{"license.html":{}}}],["along",{"_index":1514,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["alongside",{"_index":1520,"title":{},"body":{"license.html":{}}}],["alot",{"_index":2264,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["already",{"_index":1211,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["always",{"_index":2399,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["and/or",{"_index":1601,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2140,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["annotations",{"_index":1407,"title":{},"body":{"license.html":{}}}],["another",{"_index":2100,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["anyone",{"_index":1314,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["anywhere",{"_index":2731,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["apache",{"_index":1331,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2113,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["api",{"_index":655,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["api/swagger",{"_index":2411,"title":{"additional-documentation/modules/open-api/swagger.html":{}},"body":{}}],["apibearerauth",{"_index":648,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth('jwt",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":649,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreateuserfirstnameproperty",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreateuserlastnameproperty",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":650,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiproperty(apiresponse.apicreateuserfirstnameproperty",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apicreateuserlastnameproperty",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apiupdateuserboolproperty",{"_index":544,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apivalidateuseremail",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiproperty(apiresponse.apivalidateuserpass",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiresponse",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiresponse.apiusercreatedresponse",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiuserdeletedresponse",{"_index":686,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetbyid",{"_index":679,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponseneutral",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponsev1",{"_index":658,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponsev2",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiuserupdatedresponse",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["apis",{"_index":924,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["apitags",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('nest_app",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user_api",{"_index":652,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiupdateuserboolproperty",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusercreatedresponse",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiuserdeletedresponse",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetbyid",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponseneutral",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponsev1",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponsev2",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiuserupdatedresponse",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apivalidateuseremail",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apivalidateuserpass",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":431,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["app's",{"_index":1207,"title":{},"body":{"index.html":{}}}],["app.close",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableversioning",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(configservice",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["app.init",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.module",{"_index":2299,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["app.use(mongosanitize",{"_index":2242,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["app/app.controller",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.service",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/auth/auth.controller",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/auth/auth.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/auth.service",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["app/auth/jwt.auth.guard",{"_index":651,"title":{},"body":{"controllers/UsersController.html":{}}}],["app/auth/jwt.strategy",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/components/users/constants/api.response.dto",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{}}}],["app/components/users/dto/create.user.dto",{"_index":586,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/dto/update.user.dto",{"_index":587,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/dto/validate.user.dto",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["app/components/users/entities/user.entity",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/repository/db/user.repository",{"_index":700,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/components/users/repository/user.repository",{"_index":589,"title":{},"body":{"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{}}}],["app/components/users/services/users.service",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["app/components/users/users.controller",{"_index":701,"title":{},"body":{"modules/UsersModule.html":{}}}],["app/components/users/users.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app/config/index",{"_index":235,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["app/core",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["app/core/crypto/crypto",{"_index":441,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["app/core/hashing/hashing",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["app/core/logger/applogger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{}}}],["app/core/module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app/core/rate",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app/db/database.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":529,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["app_name",{"_index":1973,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["app_name=rest_api",{"_index":1093,"title":{},"body":{"index.html":{}}}],["app_name}_mysql",{"_index":2490,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"additional-documentation/modules/request-response.html":{}}}],["appcontroller_test",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1517,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1401,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1551,"title":{},"body":{"license.html":{}}}],["application",{"_index":919,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["application’s",{"_index":2159,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["applies",{"_index":1469,"title":{},"body":{"license.html":{}}}],["applogger",{"_index":32,"title":{"injectables/AppLogger.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/TestController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{}}}],["apply",{"_index":1114,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply_encryption",{"_index":449,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"additional-documentation/modules/crypto.html":{}}}],["apply_encryption=we",{"_index":2329,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["appmodule",{"_index":111,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["appropriate",{"_index":1621,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2373,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["appropriateness",{"_index":1565,"title":{},"body":{"license.html":{}}}],["apps",{"_index":1180,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":29,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/request-response.html":{}}}],["arbitrary",{"_index":2235,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["architectural",{"_index":2246,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["architecture",{"_index":983,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["archives",{"_index":1629,"title":{},"body":{"license.html":{}}}],["arg",{"_index":2583,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["arising",{"_index":1584,"title":{},"body":{"license.html":{}}}],["array",{"_index":379,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["articles",{"_index":2258,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["ask",{"_index":1899,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["asking",{"_index":2169,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["aspects",{"_index":2268,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["assert",{"_index":2578,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["asserted",{"_index":1612,"title":{},"body":{"license.html":{}}}],["assessing",{"_index":787,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["assign",{"_index":355,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["associated",{"_index":1569,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["assume",{"_index":1567,"title":{},"body":{"license.html":{}}}],["async",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["asynchronous",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["asynchronously",{"_index":2767,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["attach",{"_index":1614,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1399,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":1989,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["attack",{"_index":2147,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["attacker",{"_index":2144,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["attacks",{"_index":2126,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["attribution",{"_index":1506,"title":{},"body":{"license.html":{}}}],["auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":139,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":2368,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["authentication",{"_index":937,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["authenticity",{"_index":2377,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["authguard",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":117,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1666,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1014,"title":{},"body":{"index.html":{}}}],["authorized",{"_index":1349,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1395,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":154,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":2092,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["auto",{"_index":2743,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["available",{"_index":969,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["avoid",{"_index":1897,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["avoided",{"_index":2210,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["await",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{}}}],["b",{"_index":1498,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["backend",{"_index":2150,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["background",{"_index":1108,"title":{},"body":{"index.html":{}}}],["band",{"_index":2143,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["base64",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1403,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["baserequest",{"_index":407,"title":{},"body":{"interfaces/Request.html":{}}}],["baseresponse",{"_index":479,"title":{},"body":{"interfaces/Response.html":{}}}],["basic",{"_index":2599,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["basically",{"_index":1145,"title":{},"body":{"index.html":{}}}],["basics",{"_index":2606,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["basis",{"_index":1554,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":1900,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["beforeall(async",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["begin",{"_index":2222,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["beginners",{"_index":1302,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/trainings.html":{}}}],["behalf",{"_index":1422,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":2160,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["being",{"_index":1875,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["belongs",{"_index":1242,"title":{},"body":{"index.html":{}}}],["below",{"_index":1169,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["beneficial",{"_index":1377,"title":{},"body":{"license.html":{}}}],["best",{"_index":1192,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["between",{"_index":2293,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bifurcated",{"_index":2437,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["binary",{"_index":2634,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["bind",{"_index":423,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"license.html":{}}}],["binding",{"_index":2769,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bindrequesthelpers",{"_index":417,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":421,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["bindresponsehelpers",{"_index":418,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers(response",{"_index":425,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["blind",{"_index":2152,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["block",{"_index":2358,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["blocking",{"_index":2681,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["blocks",{"_index":2768,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["blog",{"_index":1327,"title":{},"body":{"index.html":{}}}],["body",{"_index":354,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["body:'this",{"_index":2051,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["boiler",{"_index":1953,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["boilerplate",{"_index":1280,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{}}}],["boolean",{"_index":376,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["bootsrap.ts",{"_index":2240,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["bootstrap",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap(app",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["both",{"_index":2145,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["brackets",{"_index":1617,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1859,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["break",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broad",{"_index":2349,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["broadcast",{"_index":2695,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["broadest",{"_index":2341,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["broccoli",{"_index":2449,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["browse",{"_index":1650,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1648,"title":{},"body":{"modules.html":{}}}],["browser/os",{"_index":1864,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["browsers",{"_index":1998,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["browserstack",{"_index":2453,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["buffer",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["buffer.concat([enc1",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.length",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.slice(0",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.slice(bufferdata.length",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffers",{"_index":2631,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["bug",{"_index":794,"title":{"additional-documentation/contribution/bug-reports.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["bugfix",{"_index":2439,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["bugs",{"_index":1662,"title":{},"body":{"properties.html":{}}}],["build",{"_index":1104,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["builder",{"_index":2215,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["building",{"_index":922,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["buildrunning",{"_index":1124,"title":{},"body":{"index.html":{}}}],["builds",{"_index":1157,"title":{},"body":{"index.html":{}}}],["built",{"_index":935,"title":{},"body":{"index.html":{}}}],["bunch",{"_index":2308,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["business",{"_index":2310,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bypass",{"_index":2123,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["byte",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1503,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["caching",{"_index":2271,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["calculated",{"_index":2340,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["call",{"_index":1147,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["callback",{"_index":2607,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["called",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["called');logs",{"_index":1970,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["calls",{"_index":2270,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["canactivate",{"_index":419,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["canactivate(context",{"_index":432,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["cap_add",{"_index":2478,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["cap_sys_nice",{"_index":2473,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["cap_sys_nicehttps://stackoverflow.com/questions/55559386/how",{"_index":2480,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["capability",{"_index":2472,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["care",{"_index":2288,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["carry",{"_index":1499,"title":{},"body":{"license.html":{}}}],["cascading",{"_index":2753,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["case",{"_index":1101,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/mailer.html":{}}}],["cases",{"_index":2604,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["catch",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["cause",{"_index":1363,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1850,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["causing",{"_index":1878,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["cbc",{"_index":2367,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["ccm",{"_index":2385,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cd",{"_index":1931,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["centralized",{"_index":1019,"title":{},"body":{"index.html":{}}}],["chai",{"_index":2602,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["chain",{"_index":1148,"title":{},"body":{"index.html":{}}}],["chaining",{"_index":2390,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["change",{"_index":1286,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["changed",{"_index":1119,"title":{},"body":{"index.html":{},"license.html":{}}}],["changelog",{"_index":2546,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["changes",{"_index":1935,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["channel",{"_index":793,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/database.html":{}}}],["character",{"_index":756,"title":{},"body":{"classes/ValidateUserDto.html":{},"license.html":{},"additional-documentation/modules/database.html":{}}}],["characters",{"_index":750,"title":{},"body":{"classes/ValidateUserDto.html":{},"additional-documentation/modules/database.html":{}}}],["charge",{"_index":1453,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2692,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cheat",{"_index":2787,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["check",{"_index":949,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["checking",{"_index":1263,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1936,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["checks",{"_index":2434,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["child",{"_index":2659,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["child's",{"_index":2680,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["child_process",{"_index":2679,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["choose",{"_index":337,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["chore",{"_index":2450,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["chose",{"_index":1129,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":2372,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["chunks",{"_index":1942,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["ci",{"_index":1046,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["cid",{"_index":348,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["cipher",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["cipher.final",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cipher.getauthtag",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cipher.update(json.stringify(data",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ciphertext",{"_index":2401,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["circle",{"_index":2452,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["claim",{"_index":1480,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1471,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["classes",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"overview.html":{},"additional-documentation/modules/pattern.html":{}}}],["clean",{"_index":1299,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["clear",{"_index":1951,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["clearimmediate(immediateobject",{"_index":2588,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["clearinterval(t",{"_index":2586,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cleartimeout(t",{"_index":2584,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cli",{"_index":1070,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["client",{"_index":2076,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["clone",{"_index":1073,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["cloned",{"_index":1930,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["cluster",{"_index":2682,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cluster_appmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule",{"_index":285,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule_exports",{"_index":287,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule_providers",{"_index":286,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":696,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":697,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":698,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":443,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["codebook",{"_index":2395,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["codes",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["coding",{"_index":1913,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["coffee.dto",{"_index":2740,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["coffees/dto/create",{"_index":2739,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["colons",{"_index":2467,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["column",{"_index":551,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["column({default",{"_index":555,"title":{},"body":{"entities/User.html":{}}}],["combination",{"_index":1477,"title":{},"body":{"license.html":{}}}],["combine",{"_index":88,"title":{},"body":{"injectables/AppLogger.html":{}}}],["combine(label",{"_index":96,"title":{},"body":{"injectables/AppLogger.html":{}}}],["comes",{"_index":2114,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["command",{"_index":928,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["commands",{"_index":1149,"title":{},"body":{"index.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["comment",{"_index":1622,"title":{},"body":{"license.html":{}}}],["comments",{"_index":1918,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["commercial",{"_index":1591,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1940,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commit_message",{"_index":2441,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["commitizen",{"_index":2544,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint",{"_index":2433,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint/cli",{"_index":2542,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint/config",{"_index":2543,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlintrc",{"_index":2547,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commits",{"_index":1298,"title":{"additional-documentation/miscellaneous/git-commits.html":{}},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["committing",{"_index":2432,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["common",{"_index":957,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{}}}],["communicate",{"_index":777,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["communicated",{"_index":2314,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["communication",{"_index":1425,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["compared",{"_index":2280,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["comparepassword",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparepassword(password",{"_index":913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparepassword(user.password",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["compdoc",{"_index":1190,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":1198,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compiled",{"_index":1223,"title":{},"body":{"index.html":{},"license.html":{}}}],["compiling",{"_index":1258,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2125,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["completely",{"_index":2226,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["complex",{"_index":1167,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":1632,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2407,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["complies",{"_index":1526,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":1271,"title":{},"body":{"index.html":{}}}],["component",{"_index":1243,"title":{},"body":{"index.html":{}}}],["components",{"_index":1230,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1068,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["compose.yml",{"_index":1111,"title":{},"body":{"index.html":{}}}],["compression",{"_index":876,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["compression.filter(req",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":1074,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["concerns",{"_index":2245,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["conditions",{"_index":1337,"title":{},"body":{"license.html":{}}}],["confidentiality",{"_index":2375,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["config",{"_index":62,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["config.get('app.apiversioning",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.apiversioningheader",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.apiversioningkey",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.env",{"_index":277,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('app.logfilename",{"_index":102,"title":{},"body":{"injectables/AppLogger.html":{}}}],["config.get('app.name",{"_index":97,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["config.get('auth.secretkey",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('crypto.secretkey",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('db.database",{"_index":274,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.host",{"_index":267,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.password",{"_index":272,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.port",{"_index":269,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('db.port1",{"_index":2086,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config.get('db.port2",{"_index":2090,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config.get('db.username",{"_index":271,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('secret_jwt_key",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('throttler.limit",{"_index":537,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["config.get('throttler.ttl",{"_index":535,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["config.ts",{"_index":2117,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config/env/.env",{"_index":1084,"title":{},"body":{"index.html":{}}}],["config/env/.env.dev",{"_index":1088,"title":{},"body":{"index.html":{}}}],["config/env/.env.example",{"_index":1092,"title":{},"body":{"index.html":{}}}],["config/env/.env.prod",{"_index":1091,"title":{},"body":{"index.html":{}}}],["config/env/.env.test",{"_index":1090,"title":{},"body":{"index.html":{}}}],["configa",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["configmodule.forroot",{"_index":237,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["configservice",{"_index":60,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/ThrottleModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["configuration",{"_index":1055,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["configurations",{"_index":1218,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1924,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["configured",{"_index":932,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1959,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{}}}],["connectionoptions",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":1583,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2024,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["considered",{"_index":1922,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["consist",{"_index":1956,"title":{},"body":{"additional-documentation/modules.html":{}}}],["consistent",{"_index":1054,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":2574,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["console.error(e",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["conspicuously",{"_index":1437,"title":{},"body":{"license.html":{}}}],["const",{"_index":87,"title":{},"body":{"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["constant",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants",{"_index":2327,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["constitutes",{"_index":1484,"title":{},"body":{"license.html":{}}}],["construct",{"_index":2206,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["constructor(config",{"_index":59,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{}}}],["constructor(usersrepository",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["construed",{"_index":1523,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1938,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["contained",{"_index":1511,"title":{},"body":{"license.html":{}}}],["container",{"_index":1116,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["container(s",{"_index":2525,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["container_name",{"_index":2489,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["containers",{"_index":1107,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["containing",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["contains",{"_index":1213,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["content",{"_index":1548,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":993,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":435,"title":{},"body":{"guards/RequestGuard.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["contexts",{"_index":2347,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["continuous",{"_index":942,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1367,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":759,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["contribution",{"_index":768,"title":{"additional-documentation/contribution.html":{}},"body":{"contributing.html":{},"license.html":{},"additional-documentation/contribution.html":{}}}],["contribution(s",{"_index":1475,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1312,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":1441,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1485,"title":{},"body":{"license.html":{}}}],["control",{"_index":1354,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["controlled",{"_index":1355,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["controller('auth",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":653,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["conventional",{"_index":2436,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["conventions",{"_index":1914,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["conversions",{"_index":1391,"title":{},"body":{"license.html":{}}}],["convince",{"_index":1888,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["copies",{"_index":1492,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1497,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["copyright",{"_index":1347,"title":{},"body":{"license.html":{}}}],["core",{"_index":910,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["corebootstrap(app",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coremodule",{"_index":118,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{}}}],["correcting",{"_index":2468,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["corresponds",{"_index":2637,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cors",{"_index":1040,"title":{},"body":{"index.html":{}}}],["corsoptions",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["counter",{"_index":2379,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["counterclaim",{"_index":1481,"title":{},"body":{"license.html":{}}}],["couple",{"_index":2346,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["coupled",{"_index":2321,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["coverage",{"_index":799,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["covered",{"_index":2263,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["create",{"_index":1106,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["create.user.dto",{"_index":2295,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["created",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["createlogger",{"_index":77,"title":{},"body":{"injectables/AppLogger.html":{}}}],["creates",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":567,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["createuser(payload",{"_index":573,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["createuserdto",{"_index":245,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":1283,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["creator",{"_index":2710,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["credentials",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/modules/mailer.html":{}}}],["cross",{"_index":1029,"title":{},"body":{"index.html":{},"license.html":{}}}],["crypto",{"_index":1293,"title":{"additional-documentation/modules/crypto.html":{}},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["crypto.createcipheriv(\"aes",{"_index":2405,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["crypto.createcipheriv(algorithm",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.createdecipheriv(algorithm",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.pbkdf2sync(password",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.randombytes(12",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.randombytes(64",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.ts",{"_index":2328,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cryptographic",{"_index":2361,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cryptography",{"_index":2335,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["current",{"_index":411,"title":{},"body":{"interfaces/Request.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["currently",{"_index":1991,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["custom",{"_index":1281,"title":{},"body":{"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["customary",{"_index":1545,"title":{},"body":{"license.html":{}}}],["customloggerformat",{"_index":92,"title":{},"body":{"injectables/AppLogger.html":{}}}],["cwc",{"_index":2386,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cycle",{"_index":1274,"title":{},"body":{"index.html":{}}}],["cz",{"_index":2545,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["d",{"_index":1123,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["damage",{"_index":2189,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["damages",{"_index":1581,"title":{},"body":{"license.html":{}}}],["data",{"_index":444,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["database",{"_index":273,"title":{"additional-documentation/modules/database.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/UserDbRepository.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["database.module.ts",{"_index":2054,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["database.the",{"_index":2236,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["databasemodule",{"_index":119,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databasename",{"_index":2101,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["databases",{"_index":2061,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["date",{"_index":1489,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["datetime",{"_index":1972,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["db",{"_index":2055,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["db/mysql",{"_index":2701,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["db_database=rest_api",{"_index":1096,"title":{},"body":{"index.html":{}}}],["db_host=127.0.0.1",{"_index":1095,"title":{},"body":{"index.html":{}}}],["db_password=root",{"_index":1098,"title":{},"body":{"index.html":{}}}],["db_port=3306start",{"_index":1099,"title":{},"body":{"index.html":{}}}],["db_user=user",{"_index":1097,"title":{},"body":{"index.html":{}}}],["dba",{"_index":2191,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["dealing",{"_index":2618,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["debug",{"_index":53,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/modules/logger.html":{}}}],["debug(message",{"_index":63,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debug?(message",{"_index":106,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debugging(https://nodejs.org/en/docs/guides/debugging",{"_index":2591,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["decipher",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.final(outputencoding",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.setauthtag(tag",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.update(text",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declare",{"_index":2305,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["decode",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["decorating",{"_index":2778,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["decorator",{"_index":2110,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["decrypt",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["decrypted",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decryption",{"_index":2322,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["dedicated",{"_index":2416,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["deeper",{"_index":2763,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["defeats",{"_index":2211,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["defend",{"_index":1608,"title":{},"body":{"license.html":{}}}],["define",{"_index":1231,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["defines",{"_index":2039,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["defining",{"_index":1965,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{}}}],["definition",{"_index":1358,"title":{},"body":{"license.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["definitions",{"_index":1340,"title":{},"body":{"license.html":{}}}],["delay",{"_index":2582,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["delete",{"_index":643,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["delete('/users/2",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":685,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleteuser",{"_index":568,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{}}}],["deleteuser(@req",{"_index":687,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":575,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["deleteuser(req",{"_index":619,"title":{},"body":{"controllers/UsersController.html":{}}}],["deliberate",{"_index":1576,"title":{},"body":{"license.html":{}}}],["demanded",{"_index":2353,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["demonstrable",{"_index":1849,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["demonstration",{"_index":1306,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":113,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["dependency",{"_index":1025,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["dependent",{"_index":2099,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["depends",{"_index":2177,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["deploy",{"_index":2149,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["derivation",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivative",{"_index":1402,"title":{},"body":{"license.html":{}}}],["derive",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":1404,"title":{},"body":{"license.html":{}}}],["describe",{"_index":2415,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["describing",{"_index":1546,"title":{},"body":{"license.html":{}}}],["description",{"_index":657,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["descriptive",{"_index":1861,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["design",{"_index":2243,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["designated",{"_index":1439,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2383,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["designing",{"_index":2000,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["desired",{"_index":1969,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{}}}],["desktop",{"_index":1062,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1891,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["detailed",{"_index":1206,"title":{},"body":{"index.html":{}}}],["details",{"_index":2541,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["detect",{"_index":2183,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["determines",{"_index":2096,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["determining",{"_index":1564,"title":{},"body":{"license.html":{}}}],["dev",{"_index":279,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["dev/local/staging",{"_index":2425,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["developer",{"_index":962,"title":{},"body":{"index.html":{}}}],["developers",{"_index":780,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["developing",{"_index":782,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/pattern.html":{}}}],["development",{"_index":1089,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{}}}],["diagram",{"_index":2266,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["difference",{"_index":2164,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["different",{"_index":1140,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["difficult",{"_index":2173,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["digest",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["din",{"_index":1113,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1224,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["direct",{"_index":1361,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1364,"title":{},"body":{"license.html":{}}}],["directional",{"_index":2676,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["directly",{"_index":961,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1102,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["disadvantage",{"_index":2366,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["disclaimer",{"_index":1549,"title":{},"body":{"license.html":{}}}],["discord",{"_index":1328,"title":{},"body":{"index.html":{}}}],["discovery",{"_index":2097,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["discoverymodule",{"_index":233,"title":{},"body":{"modules/CoreModule.html":{}}}],["discussing",{"_index":1434,"title":{},"body":{"license.html":{}}}],["discussions",{"_index":999,"title":{},"body":{"index.html":{}}}],["display",{"_index":1460,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dist",{"_index":1200,"title":{},"body":{"index.html":{}}}],["dist/db/migrations/*.js",{"_index":282,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dist/server.js",{"_index":1179,"title":{},"body":{"index.html":{}}}],["distributable",{"_index":1194,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1463,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1513,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1339,"title":{},"body":{"license.html":{}}}],["dividing",{"_index":2248,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["diving",{"_index":2759,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["doc",{"_index":1187,"title":{},"body":{"index.html":{}}}],["docker",{"_index":943,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["docker/docker",{"_index":1110,"title":{},"body":{"index.html":{}}}],["docker/init.sql:/docker",{"_index":2497,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["docs",{"_index":2455,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["documenation",{"_index":1189,"title":{},"body":{"index.html":{}}}],["document",{"_index":765,"title":{},"body":{"contributing.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["documentation",{"_index":800,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["documentbuilder",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["doesn't",{"_index":2115,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["doesn’t",{"_index":2396,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["doing",{"_index":2705,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["domain",{"_index":2251,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["don't",{"_index":1255,"title":{},"body":{"index.html":{},"license.html":{}}}],["done",{"_index":2025,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dotenv",{"_index":878,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["down",{"_index":2526,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["drive",{"_index":985,"title":{},"body":{"index.html":{}}}],["driver",{"_index":2081,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["driver.we",{"_index":2079,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["dto",{"_index":1238,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["duplex",{"_index":2666,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dynamic",{"_index":2762,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["e",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["e.g",{"_index":1228,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["e2e",{"_index":1137,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["each",{"_index":1165,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["easier",{"_index":1627,"title":{},"body":{"license.html":{}}}],["easily",{"_index":2552,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["easy",{"_index":770,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/database.html":{}}}],["eax",{"_index":2387,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["ecb",{"_index":2394,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["editor",{"_index":1053,"title":{},"body":{"index.html":{}}}],["editorconfig",{"_index":1056,"title":{},"body":{"index.html":{}}}],["editorial",{"_index":1405,"title":{},"body":{"license.html":{}}}],["effective",{"_index":771,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["effectively",{"_index":979,"title":{},"body":{"index.html":{}}}],["eg",{"_index":2294,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["eight",{"_index":749,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["elaborations",{"_index":1408,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1423,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["email",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["email_host",{"_index":2009,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["email_port",{"_index":2010,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["emailhandlermodule",{"_index":284,"title":{"modules/EmailHandlerModule.html":{}},"body":{"modules/EmailHandlerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["emailhandlerservice",{"_index":288,"title":{"injectables/EmailHandlerService.html":{}},"body":{"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["emails",{"_index":1984,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emailservice",{"_index":2029,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["embarking",{"_index":1901,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["emit",{"_index":2648,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emitter(http://nodejs.org/api/events.html",{"_index":2642,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emitters",{"_index":2696,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["enabled",{"_index":1044,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["enabling",{"_index":2777,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["enc1",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enc2",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encapsulation",{"_index":2758,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["enclosed",{"_index":1616,"title":{},"body":{"license.html":{}}}],["encoding",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encompass",{"_index":2727,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["encourage",{"_index":1315,"title":{},"body":{"index.html":{}}}],["encrypt",{"_index":440,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["encrypt(this.config",{"_index":452,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["encrypted",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["encryptingthe",{"_index":2324,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["encryption",{"_index":1309,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{}}}],["encryption/decryption",{"_index":2369,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["end",{"_index":1613,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["endpoints",{"_index":2306,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["engine",{"_index":1308,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["engineered",{"_index":2131,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["engineering",{"_index":2275,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["engines",{"_index":2134,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["enter",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":275,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/User.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["entity",{"_index":547,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["entityrepository",{"_index":584,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["entityrepository(user",{"_index":590,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["entity{.ts,.js",{"_index":2088,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["entry",{"_index":1181,"title":{},"body":{"index.html":{}}}],["entrypoint",{"_index":2485,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["enum",{"_index":81,"title":{},"body":{"injectables/AppLogger.html":{}}}],["enumerations",{"_index":902,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1980,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["env",{"_index":1030,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["env_file",{"_index":2500,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["envfilepath",{"_index":238,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["environment",{"_index":1027,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["envlist",{"_index":2426,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["envlist.includes(config.get('app.env",{"_index":2428,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["envthe",{"_index":2501,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["err",{"_index":361,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["error",{"_index":54,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["error('user",{"_index":599,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["error(error",{"_index":480,"title":{},"body":{"interfaces/Response.html":{}}}],["error(exception",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(message",{"_index":67,"title":{},"body":{"injectables/AppLogger.html":{}}}],["errormsg",{"_index":456,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject",{"_index":454,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject?.errors",{"_index":460,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject?.message",{"_index":459,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errors",{"_index":365,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["eslint",{"_index":1005,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["eslintignore",{"_index":1264,"title":{},"body":{"index.html":{}}}],["eslintrc",{"_index":1261,"title":{},"body":{"index.html":{}}}],["eslintrc.js",{"_index":2540,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["etc",{"_index":946,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["even",{"_index":1593,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["event",{"_index":1572,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["events",{"_index":2633,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["everyone",{"_index":772,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["everything",{"_index":2303,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["example",{"_index":1400,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["except",{"_index":1465,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2770,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exclude",{"_index":1266,"title":{},"body":{"index.html":{}}}],["excluding",{"_index":1436,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1452,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1103,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["executed",{"_index":1536,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["executing",{"_index":2319,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["executioncontext",{"_index":433,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["exercise",{"_index":1570,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1378,"title":{},"body":{"license.html":{}}}],["exist",{"_index":336,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{}}}],["existing",{"_index":1317,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["expandvariables",{"_index":243,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["expect(data).toequal('deletion",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data).toequal('response",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data).toequal('updation",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data.length).tobegreaterthanorequal(1",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.body.data).tobe('success",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.body.success).toequal(true",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.headers['content",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.status).tobe(statuscodes.created",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.status).toequal(statuscodes.ok",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(status).toequal(200",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(status).toequal(statuscodes.ok",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(statuscodes.ok",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expected",{"_index":1204,"title":{},"body":{"index.html":{},"additional-documentation/modules/request-response.html":{}}}],["explain",{"_index":2557,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["explained",{"_index":2253,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["explanation",{"_index":1275,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":2008,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["explicitly",{"_index":1529,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2132,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["exploiting",{"_index":2172,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["exported",{"_index":2735,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exportprovider",{"_index":229,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":231,"title":{},"body":{"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exports:[authservice",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["exposes",{"_index":960,"title":{},"body":{"index.html":{}}}],["express",{"_index":412,"title":{},"body":{"interfaces/Request.html":{},"interfaces/Response.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["express/fastify",{"_index":959,"title":{},"body":{"index.html":{}}}],["express@latest",{"_index":2518,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["expresses",{"_index":2286,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["extend",{"_index":1963,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["extends",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/UserDbRepository.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["external",{"_index":2269,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["extract",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["extractjwt",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extremely",{"_index":1852,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["f",{"_index":1109,"title":{},"body":{"index.html":{}}}],["facility",{"_index":2678,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["factory",{"_index":2761,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["failure",{"_index":1589,"title":{},"body":{"license.html":{}}}],["false",{"_index":280,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["fantastic",{"_index":1894,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["feat",{"_index":2438,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["feat(documentation",{"_index":2444,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["feature",{"_index":992,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["features",{"_index":789,"title":{"additional-documentation/contribution/features-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["fee",{"_index":1597,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":989,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1990,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["fetching",{"_index":2317,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["few",{"_index":2684,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["fields",{"_index":1615,"title":{},"body":{"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["fifty",{"_index":1371,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["filed",{"_index":1490,"title":{},"body":{"license.html":{}}}],["filename",{"_index":101,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{}}}],["files",{"_index":1176,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["files/source",{"_index":1233,"title":{},"body":{"index.html":{}}}],["filter",{"_index":2712,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["filters",{"_index":2771,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["finally",{"_index":2030,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["find",{"_index":1205,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["findall",{"_index":704,"title":{},"body":{"injectables/UsersService.html":{}}}],["findalluser",{"_index":569,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["findemail",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{}}}],["findemail(email",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser",{"_index":570,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduser(id",{"_index":578,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail(email",{"_index":580,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail(user",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":1867,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["firstname",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["fitness",{"_index":1561,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1884,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["fix",{"_index":1939,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["fixed",{"_index":1857,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["fixes",{"_index":2459,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["flag",{"_index":2326,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["flow",{"_index":2279,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["flowing",{"_index":2651,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["flows",{"_index":2267,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["focused",{"_index":1896,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["fol",{"_index":2046,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["folder",{"_index":1087,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["folders",{"_index":1201,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1920,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["followed",{"_index":1011,"title":{},"body":{"index.html":{}}}],["following",{"_index":774,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["forced",{"_index":2167,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["forfeature",{"_index":2105,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["forge",{"_index":2339,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["fork",{"_index":1923,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["form",{"_index":1381,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["format",{"_index":78,"title":{},"body":{"injectables/AppLogger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["formatter",{"_index":1177,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":2464,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["forms",{"_index":2623,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["found",{"_index":600,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["foundation",{"_index":2556,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["framework",{"_index":951,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["framework.typeorm",{"_index":2069,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["frameworks",{"_index":958,"title":{},"body":{"index.html":{}}}],["free",{"_index":1455,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":964,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":2726,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["fromemail",{"_index":320,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["front",{"_index":2691,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["fs",{"_index":2653,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["full",{"_index":1170,"title":{},"body":{"index.html":{}}}],["fully",{"_index":2536,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["function",{"_index":816,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{}}}],["functional",{"_index":2601,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["functionalities",{"_index":2301,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["functionality",{"_index":1958,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["functions",{"_index":904,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["further",{"_index":1870,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["g",{"_index":2512,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["gain",{"_index":2124,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["galois",{"_index":2378,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gather",{"_index":2148,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["gcm",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["general",{"_index":2548,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["generally",{"_index":2352,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["generate",{"_index":1188,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["generated",{"_index":1390,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["generatetoken",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["generatetoken(@req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatetoken(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatetoken(user",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["generating",{"_index":2417,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["generation",{"_index":1267,"title":{},"body":{"index.html":{}}}],["generic",{"_index":2284,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["get('/users",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/users/2",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/v1/users",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/v2/users",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':id",{"_index":678,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('all/:param",{"_index":495,"title":{},"body":{"controllers/TestController.html":{}}}],["get('logger",{"_index":498,"title":{},"body":{"controllers/TestController.html":{}}}],["get('nocontent",{"_index":501,"title":{},"body":{"controllers/TestController.html":{}}}],["get('withmeta",{"_index":504,"title":{},"body":{"controllers/TestController.html":{}}}],["get(data",{"_index":464,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["getemailserver",{"_index":292,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["getemailserver(mailconfig",{"_index":296,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/request-response.html":{}}}],["gethello(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getproviders",{"_index":236,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gets",{"_index":2400,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gettemplate",{"_index":293,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["gettemplate(templatename",{"_index":300,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["getting",{"_index":757,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["getuserbyid",{"_index":613,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@req",{"_index":680,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(req",{"_index":623,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers",{"_index":614,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@req",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(req",{"_index":626,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1",{"_index":615,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1(@req",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1(req",{"_index":629,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2",{"_index":616,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2(@req",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2(req",{"_index":632,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":1048,"title":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["git's",{"_index":1945,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["git+https://github.com/neosoft",{"_index":1664,"title":{},"body":{"properties.html":{}}}],["github",{"_index":1217,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["give",{"_index":1495,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["given",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["gives",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["global",{"_index":232,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["globally",{"_index":2721,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["go",{"_index":2312,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["going",{"_index":2041,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["good",{"_index":1851,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["goodwill",{"_index":1587,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1636,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1446,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1380,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1350,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1448,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1651,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":2720,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["grossly",{"_index":1577,"title":{},"body":{"license.html":{}}}],["group",{"_index":1232,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["grunt",{"_index":1154,"title":{},"body":{"index.html":{}}}],["guarantee",{"_index":2374,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["guard",{"_index":413,"title":{"guards/RequestGuard.html":{}},"body":{"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/modules/request-response.html":{}}}],["guards",{"_index":415,"title":{},"body":{"guards/RequestGuard.html":{},"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["guess",{"_index":2338,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gui",{"_index":2747,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["guidelines",{"_index":775,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["guiding",{"_index":1316,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":1155,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["gzip",{"_index":1045,"title":{},"body":{"index.html":{}}}],["haml",{"_index":1997,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["handle",{"_index":2475,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["handler",{"_index":1250,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["handling",{"_index":429,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["harmless",{"_index":1610,"title":{},"body":{"license.html":{}}}],["hashedpassword",{"_index":914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashpassword",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashpassword(password",{"_index":915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashpassword(user.password",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":1033,"title":{},"body":{"index.html":{}}}],["heap",{"_index":2641,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["hear",{"_index":988,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":1995,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["hello",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":881,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["help",{"_index":1895,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["helper",{"_index":427,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["helpers",{"_index":424,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules/pattern.html":{}}}],["helpful",{"_index":1853,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/pattern.html":{}}}],["helps",{"_index":776,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["hence",{"_index":2021,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["here",{"_index":912,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["hereby",{"_index":1447,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1533,"title":{},"body":{"license.html":{}}}],["high",{"_index":1993,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["higher",{"_index":2217,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["hold",{"_index":1609,"title":{},"body":{"license.html":{}}}],["home",{"_index":1961,"title":{},"body":{"additional-documentation/modules.html":{}}}],["homepage",{"_index":1660,"title":{},"body":{"properties.html":{}}}],["hooks",{"_index":1049,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["host",{"_index":266,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["hostname",{"_index":2491,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["html",{"_index":358,"title":{},"body":{"injectables/EmailHandlerService.html":{},"miscellaneous/variables.html":{}}}],["htmlbody",{"_index":377,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{}}}],["http",{"_index":83,"title":{},"body":{"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://localhost:5000/api/docs",{"_index":2429,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["http://nodejs.org/api/assert.html",{"_index":2600,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/buffer.html",{"_index":2635,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/child_process.html",{"_index":2674,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/console.html",{"_index":2575,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/fs.html",{"_index":2620,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/globals.html",{"_index":2572,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/http.html",{"_index":2609,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/modules.html",{"_index":2590,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/os.html",{"_index":2688,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/querystring.html",{"_index":2617,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/stream.html",{"_index":2650,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/timers.html",{"_index":2580,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/url.htm",{"_index":2613,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/util.html",{"_index":2626,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://www.apache.org/licenses",{"_index":1335,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1634,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('invalid",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["https",{"_index":2611,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://127.0.0.1:5500",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.docker.com/config/containers/resource_constraints",{"_index":2481,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://docs.docker.com/docker",{"_index":1064,"title":{},"body":{"index.html":{}}}],["https://example1.com",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://example2.com",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com",{"_index":1927,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["https://github.com/definitelytyped/definitelytyped/issues/46639",{"_index":2511,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://github.com/juliandavidmr/awesome",{"_index":2786,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["https://github.com/neosoft",{"_index":1077,"title":{},"body":{"index.html":{},"properties.html":{}}}],["https://github.com/nestjs/nest/issues/4953",{"_index":2505,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://learn.nestjs.com/p/fundamentals",{"_index":2785,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["https://medium.com/@neosofttech",{"_index":1326,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":1071,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/api/crypto.html",{"_index":2656,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://nodejs.org/api/zlib.html",{"_index":2655,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://nodejs.org/en",{"_index":1058,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/57469252/is",{"_index":2521,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://stackoverflow.com/questions/63330265/getting",{"_index":2509,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://www.devglan.com/online",{"_index":2409,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["https://www.docker.com",{"_index":1060,"title":{},"body":{"index.html":{}}}],["https://www.meetup.com/neosoft",{"_index":1323,"title":{},"body":{"index.html":{}}}],["https://www.neosofttech.com",{"_index":1319,"title":{},"body":{"index.html":{}}}],["https://www.pgadmin.org",{"_index":2748,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["httpstatus",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["husky",{"_index":1007,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["i.e",{"_index":2185,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["iapm",{"_index":2388,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["id",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["idea",{"_index":1883,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["identical",{"_index":2162,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["identification",{"_index":1628,"title":{},"body":{"license.html":{}}}],["identified",{"_index":1877,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["identifier",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":2558,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["identifying",{"_index":1619,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["ignoreexpiration",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ii",{"_index":1369,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1376,"title":{},"body":{"license.html":{}}}],["image",{"_index":1121,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["images",{"_index":1105,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["imailauth",{"_index":372,"title":{"interfaces/IMailAuth.html":{}},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailconfig",{"_index":297,"title":{"interfaces/IMailConfig.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailoptions",{"_index":307,"title":{"interfaces/IMailOptions.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailresponse",{"_index":314,"title":{"interfaces/IMailResponse.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["implemenetation",{"_index":2421,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["implement",{"_index":2323,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["implementation",{"_index":2139,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["implemented",{"_index":1305,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{}}}],["implementing",{"_index":1903,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["implements",{"_index":86,"title":{},"body":{"injectables/AppLogger.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["implications",{"_index":2593,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["implied",{"_index":1557,"title":{},"body":{"license.html":{}}}],["implies",{"_index":2348,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["important",{"_index":1952,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["imported",{"_index":2013,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["importing",{"_index":2023,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["impossible",{"_index":2174,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["improvements",{"_index":1893,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["improves",{"_index":2457,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["improving",{"_index":1435,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1585,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1582,"title":{},"body":{"license.html":{}}}],["include",{"_index":1412,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["included",{"_index":1398,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["includes",{"_index":1509,"title":{},"body":{"license.html":{}}}],["including",{"_index":936,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{}}}],["inclusion",{"_index":1420,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["incoming",{"_index":2196,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["incorporated",{"_index":1444,"title":{},"body":{"license.html":{}}}],["incorrectly",{"_index":2506,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["incurred",{"_index":1611,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1607,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1599,"title":{},"body":{"license.html":{}}}],["indentation",{"_index":1916,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["independent",{"_index":2020,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2757,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["indicated",{"_index":1397,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1362,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1168,"title":{},"body":{"index.html":{},"license.html":{}}}],["inestapplication",{"_index":909,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["inferential",{"_index":2151,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["influenced",{"_index":1996,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/enumerations.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["information",{"_index":1620,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["informational",{"_index":1518,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1474,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1486,"title":{},"body":{"license.html":{}}}],["init",{"_index":2482,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initdb.d",{"_index":2486,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initdb.d/init.sql",{"_index":2498,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initial",{"_index":2343,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["initialization",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["initialize",{"_index":2570,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inject",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["injectable",{"_index":47,"title":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":48,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":2213,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["injection",{"_index":1039,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["injections",{"_index":2118,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["injector",{"_index":2738,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["injectrepository",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{}}}],["injectrepository(userdbrepository",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userdbrepository,'mongodb_connection",{"_index":2112,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["input",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inputencoding",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["inputs",{"_index":409,"title":{},"body":{"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["inputs[key",{"_index":474,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["inserts",{"_index":2754,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inside",{"_index":2056,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["insomnia/postman",{"_index":2724,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inspect",{"_index":2592,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector",{"_index":2596,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector(https://github.com/node",{"_index":2594,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector/node",{"_index":2595,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["install",{"_index":1061,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["installation",{"_index":1300,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["installcreate",{"_index":1083,"title":{},"body":{"index.html":{}}}],["installed",{"_index":931,"title":{},"body":{"index.html":{}}}],["installing",{"_index":2239,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instance",{"_index":2523,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["instanceof",{"_index":458,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["instances",{"_index":2744,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instantiate",{"_index":2730,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instantiated",{"_index":2737,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instead",{"_index":2155,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["institute",{"_index":1478,"title":{},"body":{"license.html":{}}}],["instruction",{"_index":2003,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["integers",{"_index":2636,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["integrated",{"_index":1004,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":2067,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["integrating",{"_index":2058,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["integration",{"_index":940,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["integrity",{"_index":2376,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["intend",{"_index":2247,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["intentionally",{"_index":1418,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1946,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["interceptors",{"_index":2773,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["interface",{"_index":371,"title":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{}},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["interfaces",{"_index":316,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{},"license.html":{},"overview.html":{},"additional-documentation/modules/pattern.html":{}}}],["interfaces/interfaces.ts",{"_index":374,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["internal",{"_index":2493,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["internally",{"_index":2380,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["introducing",{"_index":2749,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["introduction",{"_index":2555,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inversion",{"_index":2273,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["inverts",{"_index":2278,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["invite",{"_index":2707,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invited",{"_index":2709,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invites",{"_index":2713,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invoked",{"_index":1184,"title":{},"body":{"index.html":{}}}],["involved",{"_index":773,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["io",{"_index":2309,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ioc",{"_index":2274,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["irrevocable",{"_index":1456,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":542,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["isemail",{"_index":559,"title":{},"body":{"entities/User.html":{},"classes/ValidateUserDto.html":{}}}],["isemail()@column",{"_index":549,"title":{},"body":{"entities/User.html":{}}}],["isglobal",{"_index":241,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["ismatched",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":745,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["isnotempty()@isemail()@apiproperty(apiresponse.apivalidateuseremail",{"_index":736,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["isnotempty()@matches(/^(?=.*[a",{"_index":738,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["issue",{"_index":786,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["issues",{"_index":998,"title":{"additional-documentation/miscellaneous/known-issues.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["it's",{"_index":1191,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{}}}],["it('should",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["it('testing",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":364,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{}}}],["iterated",{"_index":2344,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["iterations",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2262,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["it’s",{"_index":2391,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["iv",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["ivs",{"_index":2357,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["january",{"_index":1333,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":977,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["jest",{"_index":1018,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["joi",{"_index":2186,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["js",{"_index":916,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["json",{"_index":1979,"title":{},"body":{"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["json.parse(str",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juice",{"_index":309,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{}}}],["juice(html",{"_index":368,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["jwks",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":380,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":175,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":2336,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["kept",{"_index":2045,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["key",{"_index":473,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/crypto.html":{}}}],["keylen",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1251,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["keywords",{"_index":1657,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1556,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":2255,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["kit",{"_index":1659,"title":{},"body":{"properties.html":{}}}],["know",{"_index":2789,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["knowledge",{"_index":2716,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["known",{"_index":1297,"title":{"additional-documentation/miscellaneous/known-issues.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["knows",{"_index":2337,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["label",{"_index":90,"title":{},"body":{"injectables/AppLogger.html":{}}}],["lack",{"_index":2127,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["language",{"_index":1635,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["lastname",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["later",{"_index":2272,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["latest",{"_index":1858,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["launch",{"_index":2146,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["law",{"_index":1552,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1482,"title":{},"body":{"license.html":{}}}],["layer",{"_index":2252,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["layers",{"_index":2250,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["leak",{"_index":2315,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["learn",{"_index":947,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1351,"title":{},"body":{"license.html":{}}}],["length",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["let's",{"_index":2297,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["lets",{"_index":2121,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["letter",{"_index":753,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["level",{"_index":93,"title":{},"body":{"injectables/AppLogger.html":{},"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{}}}],["levels",{"_index":1966,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["leverage",{"_index":2053,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["leveraging",{"_index":2418,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["liability",{"_index":1571,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1580,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":973,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["library",{"_index":1999,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["libs/core",{"_index":1982,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["libuv",{"_index":2565,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["licensable",{"_index":1472,"title":{},"body":{"license.html":{}}}],["license",{"_index":1330,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["licensed",{"_index":1631,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1487,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1346,"title":{},"body":{"license.html":{}}}],["limit",{"_index":536,"title":{},"body":{"modules/ThrottleModule.html":{},"index.html":{}}}],["limitation",{"_index":1558,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1637,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1384,"title":{},"body":{"license.html":{}}}],["limiter/throttle.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["limiter/throttle.module.ts",{"_index":528,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["line",{"_index":1151,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["lines",{"_index":1876,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["link",{"_index":1415,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["links",{"_index":1304,"title":{},"body":{"index.html":{}}}],["lint",{"_index":1050,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["linting",{"_index":1052,"title":{},"body":{"index.html":{}}}],["list",{"_index":950,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["listener",{"_index":2694,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["listeners",{"_index":2647,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["lists",{"_index":1429,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1479,"title":{},"body":{"license.html":{}}}],["live",{"_index":1196,"title":{},"body":{"index.html":{}}}],["load",{"_index":244,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["loaded",{"_index":911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":278,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["locally",{"_index":1949,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["lodash",{"_index":438,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["log",{"_index":55,"title":{},"body":{"injectables/AppLogger.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["log(message",{"_index":69,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logged",{"_index":1288,"title":{},"body":{"index.html":{}}}],["logger",{"_index":52,"title":{"additional-documentation/modules/logger.html":{}},"body":{"injectables/AppLogger.html":{},"controllers/TestController.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{}}}],["loggerservice",{"_index":75,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logging",{"_index":1016,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["logic",{"_index":2311,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["logical",{"_index":1941,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["login",{"_index":2703,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["logincredentials",{"_index":846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginresponse",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loginresponse.body.data.access_token",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":2704,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["logs",{"_index":1967,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["logs/app.log",{"_index":1971,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["looking",{"_index":1133,"title":{},"body":{"index.html":{}}}],["looks",{"_index":2549,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["loop",{"_index":2559,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["loosely",{"_index":2320,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["loss",{"_index":1586,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1592,"title":{},"body":{"license.html":{}}}],["lot",{"_index":1908,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["love",{"_index":987,"title":{},"body":{"index.html":{}}}],["low",{"_index":2199,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["lowercase",{"_index":754,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["ls",{"_index":2534,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["lts",{"_index":1059,"title":{},"body":{"index.html":{}}}],["m",{"_index":2443,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["mac",{"_index":1063,"title":{},"body":{"index.html":{}}}],["mac/install",{"_index":1065,"title":{},"body":{"index.html":{}}}],["machine",{"_index":933,"title":{},"body":{"index.html":{}}}],["made",{"_index":1396,"title":{},"body":{"license.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mail",{"_index":311,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/mailer.html":{}}}],["mail.options",{"_index":330,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailconfig",{"_index":299,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailconfig.fromemail",{"_index":331,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailer",{"_index":315,"title":{"additional-documentation/modules/mailer.html":{}},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["mailer.module.ts",{"_index":2022,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["mailer.service",{"_index":290,"title":{},"body":{"modules/EmailHandlerModule.html":{}}}],["mailer.ts",{"_index":2014,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["mailing",{"_index":1428,"title":{},"body":{"license.html":{}}}],["mailoptions",{"_index":329,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.attachments",{"_index":343,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.html",{"_index":340,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.text",{"_index":357,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["main",{"_index":981,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["maintainer",{"_index":1134,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":2261,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["major",{"_index":1957,"title":{},"body":{"additional-documentation/modules.html":{}}}],["make",{"_index":767,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["makes",{"_index":1166,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["making",{"_index":1382,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["malfunction",{"_index":1590,"title":{},"body":{"license.html":{}}}],["malicious",{"_index":2122,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["manage",{"_index":1156,"title":{},"body":{"index.html":{}}}],["managed",{"_index":1432,"title":{},"body":{"license.html":{}}}],["management",{"_index":1022,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["manager",{"_index":2569,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["managing",{"_index":781,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["manually",{"_index":2204,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["many",{"_index":934,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["map",{"_index":2504,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mapper",{"_index":2065,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["maps",{"_index":2102,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["marked",{"_index":1438,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1542,"title":{},"body":{"license.html":{}}}],["master",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":746,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":747,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["mature",{"_index":2063,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mbind",{"_index":2470,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mean",{"_index":1342,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["meaning",{"_index":2461,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["means",{"_index":1359,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1387,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1020,"title":{},"body":{"index.html":{}}}],["media",{"_index":1392,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1325,"title":{},"body":{"index.html":{},"license.html":{}}}],["meet",{"_index":1494,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["meetup",{"_index":1322,"title":{},"body":{"index.html":{}}}],["memory",{"_index":2638,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["mentioned",{"_index":1987,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["merchantability",{"_index":1560,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1414,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1911,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["merged",{"_index":1944,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["merits",{"_index":1882,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["message",{"_index":65,"title":{},"body":{"injectables/AppLogger.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["message)eg",{"_index":1974,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["messages",{"_index":2435,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["meta",{"_index":445,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"additional-documentation/modules/request-response.html":{}}}],["metadata",{"_index":895,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["method",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["microservices",{"_index":2719,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["microsoft",{"_index":2072,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["middleware",{"_index":2238,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["migration",{"_index":1296,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":281,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["migrationsdir",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":283,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minimize",{"_index":2188,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["minimum",{"_index":748,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["miscellaneous",{"_index":901,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous.html":{}}}],["missing",{"_index":2465,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["mocha",{"_index":1130,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["mock_error",{"_index":1645,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_nocontent",{"_index":1646,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_success",{"_index":1644,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_withmeta",{"_index":1647,"title":{},"body":{"classes/mockResponse.html":{}}}],["mockrequest",{"_index":848,"title":{"classes/mockRequest.html":{}},"body":{"coverage.html":{},"classes/mockRequest.html":{}}}],["mockresponse",{"_index":850,"title":{"classes/mockResponse.html":{}},"body":{"coverage.html":{},"classes/mockResponse.html":{}}}],["mode",{"_index":1126,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["model",{"_index":2597,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["models",{"_index":2715,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["modern",{"_index":2133,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["modes",{"_index":2384,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["modifications",{"_index":1383,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1115,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":1519,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["modifying",{"_index":1524,"title":{},"body":{"license.html":{}}}],["module",{"_index":110,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["module(http",{"_index":1236,"title":{},"body":{"index.html":{}}}],["module/scope",{"_index":2440,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["modulefixture",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulefixture.createnestapplication",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":112,"title":{"modules.html":{},"additional-documentation/modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["moment",{"_index":763,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["mongo",{"_index":2195,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb",{"_index":2052,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mongodb.database",{"_index":2197,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb@3.7.0",{"_index":2083,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb_connection",{"_index":2089,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongoose",{"_index":2782,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mongosanitize",{"_index":2241,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["monitoring",{"_index":2098,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["more",{"_index":948,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mostly",{"_index":2176,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["mount",{"_index":2484,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["much",{"_index":1890,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["multi",{"_index":2671,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["multiple",{"_index":2249,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["mydata",{"_index":508,"title":{},"body":{"controllers/TestController.html":{}}}],["mykey",{"_index":509,"title":{},"body":{"controllers/TestController.html":{}}}],["myriad",{"_index":966,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":265,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql2",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["mysql2for",{"_index":2078,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mysql:/var/lib/mysql",{"_index":2499,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql:8",{"_index":2488,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql:8.0.15",{"_index":2477,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql_connection",{"_index":2085,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["myvalue",{"_index":510,"title":{},"body":{"controllers/TestController.html":{}}}],["name",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["names",{"_index":1541,"title":{},"body":{"license.html":{}}}],["namespaces",{"_index":2765,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["navigate",{"_index":1928,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["nearly",{"_index":2161,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["necessarily",{"_index":1473,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1226,"title":{},"body":{"index.html":{}}}],["need",{"_index":1100,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["needed",{"_index":2742,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["needs",{"_index":2203,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["negligence",{"_index":1575,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1578,"title":{},"body":{"license.html":{}}}],["neosoft_logo",{"_index":349,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["neosoft_logo.png",{"_index":344,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["neosofttech",{"_index":1321,"title":{},"body":{"index.html":{}}}],["nest",{"_index":430,"title":{"additional-documentation/trainings/nest-js-for-beginners.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nest_logo",{"_index":352,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nest_logo.png",{"_index":350,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nestjs",{"_index":1069,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nestjs#readme",{"_index":1661,"title":{},"body":{"properties.html":{}}}],["nestjs.git",{"_index":1665,"title":{},"body":{"properties.html":{}}}],["nestjs.gitinstall",{"_index":1079,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":2513,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/common@latest",{"_index":2515,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"dependencies.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/config@latest",{"_index":2516,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/core",{"_index":234,"title":{},"body":{"modules/CoreModule.html":{},"modules/ThrottleModule.html":{},"dependencies.html":{}}}],["nestjs/core@latest",{"_index":2517,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/issues",{"_index":1663,"title":{},"body":{"properties.html":{}}}],["nestjs/jwt",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":863,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/testing",{"_index":2520,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/throttler",{"_index":532,"title":{},"body":{"modules/ThrottleModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":263,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"additional-documentation/modules/database.html":{}}}],["nestjs/typeorm@latest",{"_index":2519,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestsjs",{"_index":926,"title":{},"body":{"index.html":{}}}],["networks",{"_index":2492,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["neutral",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["never",{"_index":2354,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["new",{"_index":98,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/UserDbRepository.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["newly",{"_index":1929,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["next",{"_index":1080,"title":{},"body":{"index.html":{}}}],["nice",{"_index":1150,"title":{},"body":{"index.html":{}}}],["nocontent",{"_index":461,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{}}}],["node",{"_index":975,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{}},"body":{"index.html":{},"properties.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["node.js",{"_index":925,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["node_env=dev",{"_index":1094,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1222,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1329,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["nodemailer",{"_index":310,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{},"additional-documentation/modules/mailer.html":{}}}],["nodemailer.createtransport",{"_index":369,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailer.sentmessageinfo",{"_index":362,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailer/lib/mailer",{"_index":312,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailerthe",{"_index":2001,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["non",{"_index":1451,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nonce",{"_index":2333,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["nonces",{"_index":2360,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["noncompliant",{"_index":2403,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["none",{"_index":978,"title":{},"body":{"index.html":{}}}],["normal",{"_index":2163,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["normally",{"_index":1516,"title":{},"body":{"license.html":{}}}],["nosql",{"_index":2060,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["note",{"_index":1209,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["notes",{"_index":2714,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["nothing",{"_index":1532,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1164,"title":{},"body":{"index.html":{},"license.html":{}}}],["notices",{"_index":1501,"title":{},"body":{"license.html":{}}}],["notorious",{"_index":2234,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["notwithstanding",{"_index":1531,"title":{},"body":{"license.html":{}}}],["now",{"_index":2027,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["npm",{"_index":1026,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["npx",{"_index":1269,"title":{},"body":{"index.html":{}}}],["null",{"_index":457,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":375,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["nvm",{"_index":2571,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["oaep",{"_index":2402,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["object",{"_index":410,"title":{},"body":{"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["objectidcolumn",{"_index":561,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{}}}],["objection",{"_index":1658,"title":{},"body":{"properties.html":{}}}],["objective",{"_index":1964,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["objects",{"_index":2221,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["obligations",{"_index":1600,"title":{},"body":{"license.html":{}}}],["observable",{"_index":436,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["observing",{"_index":2158,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["obtain",{"_index":1633,"title":{},"body":{"license.html":{}}}],["ocb",{"_index":2389,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["occurs",{"_index":1865,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["od",{"_index":2040,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["offending",{"_index":2237,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["offer",{"_index":1467,"title":{},"body":{"license.html":{}}}],["official",{"_index":1270,"title":{},"body":{"index.html":{}}}],["older",{"_index":2080,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["omit",{"_index":437,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["omit(data",{"_index":465,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["once",{"_index":2350,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["one",{"_index":751,"title":{},"body":{"classes/ValidateUserDto.html":{},"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["open",{"_index":783,"title":{"additional-documentation/modules/open-api/swagger.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["openapi",{"_index":2412,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["operating",{"_index":2685,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["operation",{"_index":2233,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["operations",{"_index":2706,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["operator",{"_index":2232,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["operators",{"_index":2231,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["opinions",{"_index":1881,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["option",{"_index":1118,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["optional",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionalare",{"_index":2551,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["options",{"_index":301,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["options.body",{"_index":356,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.htmlbody",{"_index":359,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.replace",{"_index":342,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.subject",{"_index":334,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.templatename",{"_index":339,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.to",{"_index":332,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["oracle",{"_index":2071,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["orchestrated",{"_index":1142,"title":{},"body":{"index.html":{}}}],["order",{"_index":766,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/crypto.html":{}}}],["oriented",{"_index":2718,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["origin",{"_index":1041,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["original",{"_index":1411,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["orm",{"_index":2066,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["orm's",{"_index":2214,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["otherwise",{"_index":1368,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["out",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{}}}],["output",{"_index":1199,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["outputencoding",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["outside",{"_index":2640,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["outstanding",{"_index":1374,"title":{},"body":{"license.html":{}}}],["over",{"_index":1955,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{}}}],["overview",{"_index":1652,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["owner",{"_index":1348,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["ownership",{"_index":1370,"title":{},"body":{"license.html":{}}}],["p",{"_index":1272,"title":{},"body":{"index.html":{}}}],["package",{"_index":858,"title":{"dependencies.html":{},"properties.html":{}},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["package.json",{"_index":1158,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["packages",{"_index":1081,"title":{},"body":{"index.html":{}}}],["padding",{"_index":2371,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["page",{"_index":1626,"title":{"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["pagination",{"_index":945,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["param",{"_index":448,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["param('id",{"_index":681,"title":{},"body":{"controllers/UsersController.html":{}}}],["paramenters",{"_index":2037,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["parameter",{"_index":2038,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["parameterized",{"_index":2201,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["parse",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(id",{"_index":595,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["parsing",{"_index":2615,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["part",{"_index":1508,"title":{},"body":{"license.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["partial",{"_index":1638,"title":{},"body":{"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["particular",{"_index":1562,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["party",{"_index":968,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["pass",{"_index":325,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["passed",{"_index":1981,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["passport",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["passwords",{"_index":1253,"title":{},"body":{"index.html":{}}}],["patch",{"_index":644,"title":{},"body":{"controllers/UsersController.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["patch('/users/2",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{}}}],["patches",{"_index":788,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["patent",{"_index":1464,"title":{},"body":{"license.html":{}}}],["path",{"_index":345,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["paths",{"_index":1265,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pattern",{"_index":1292,"title":{"additional-documentation/modules/pattern.html":{}},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["patterns",{"_index":2539,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["payload",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["payload.email",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.firstname",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloads",{"_index":2157,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["per",{"_index":2057,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["percent",{"_index":1372,"title":{},"body":{"license.html":{}}}],["perf",{"_index":2456,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["perform",{"_index":1461,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["performance",{"_index":1994,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["performs",{"_index":1174,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1539,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1379,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2471,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["perpetual",{"_index":1449,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1507,"title":{},"body":{"license.html":{}}}],["phases",{"_index":2560,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["pipe",{"_index":1015,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":2776,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pkcs5/7",{"_index":2404,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["place",{"_index":2307,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["placed",{"_index":1085,"title":{},"body":{"index.html":{}}}],["places",{"_index":1512,"title":{},"body":{"license.html":{}}}],["plaintext",{"_index":2398,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["plate",{"_index":1954,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["platform",{"_index":971,"title":{},"body":{"index.html":{}}}],["please",{"_index":761,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["pluggable",{"_index":2537,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["plugin",{"_index":2535,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pm2",{"_index":1024,"title":{},"body":{"index.html":{}}}],["point",{"_index":1182,"title":{},"body":{"index.html":{}}}],["pointcuts",{"_index":2774,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pool",{"_index":2567,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["popen",{"_index":2677,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["port",{"_index":268,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["porting",{"_index":1905,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["portions",{"_index":2281,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["ports",{"_index":2494,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["possibility",{"_index":1595,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1892,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["post",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apibody({type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicreatedresponse({description",{"_index":636,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":2746,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["postgres/mongo",{"_index":2700,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["postgresql",{"_index":2070,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["postman",{"_index":1310,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["potential",{"_index":1879,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["power",{"_index":1360,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2603,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["practice",{"_index":2084,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["pre",{"_index":2430,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["preference",{"_index":2330,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["preferred",{"_index":792,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/contribution.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prepare",{"_index":1458,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2182,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["prerequisite",{"_index":2723,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["prerequisites",{"_index":1057,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["present",{"_index":1962,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["pretteri",{"_index":1301,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["prettier",{"_index":1006,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["prevent",{"_index":2179,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["primarygeneratedcolumn",{"_index":562,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["primarygeneratedcolumn()@objectidcolumn",{"_index":553,"title":{},"body":{"entities/User.html":{}}}],["principle",{"_index":2277,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["principles",{"_index":1013,"title":{},"body":{"index.html":{}}}],["printed",{"_index":1625,"title":{},"body":{"license.html":{}}}],["printf",{"_index":91,"title":{},"body":{"injectables/AppLogger.html":{}}}],["private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["probably",{"_index":1131,"title":{},"body":{"index.html":{}}}],["problem",{"_index":982,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["procedural",{"_index":2285,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["proceed",{"_index":2075,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["process",{"_index":769,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process(http://nodejs.org/api/process.html",{"_index":2673,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.cwd()}/config/env/.env",{"_index":239,"title":{},"body":{"modules/CoreModule.html":{}}}],["process.cwd()}/config/env/.env.${process.env.node_env",{"_index":240,"title":{},"body":{"modules/CoreModule.html":{}}}],["process.cwd()}/config/env/test.env",{"_index":526,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["process.env.db_database",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.email_host",{"_index":2017,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.email_port",{"_index":2018,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.user_email",{"_index":2016,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.user_password",{"_index":2019,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.nexttick",{"_index":2561,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stderr",{"_index":2665,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stdin",{"_index":2662,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stdout",{"_index":2664,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["processing",{"_index":2672,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["product",{"_index":1543,"title":{},"body":{"license.html":{}}}],["production",{"_index":929,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["program",{"_index":2282,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["programming",{"_index":2276,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["prohibited",{"_index":2227,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["project",{"_index":760,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["project's",{"_index":1889,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["projects",{"_index":2568,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["prominent",{"_index":1500,"title":{},"body":{"license.html":{}}}],["promise",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/request-response.html":{}}}],["promises",{"_index":2608,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["properties",{"_index":50,"title":{"properties.html":{}},"body":{"injectables/AppLogger.html":{},"classes/CreateUserDto.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidateUserDto.html":{},"properties.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["protect",{"_index":2772,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["protocol",{"_index":1986,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["provide",{"_index":538,"title":{},"body":{"modules/ThrottleModule.html":{},"license.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["provided",{"_index":1277,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["provider",{"_index":2760,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["providers",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["provides",{"_index":954,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["providing",{"_index":2300,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["proxy",{"_index":1291,"title":{},"body":{"index.html":{}}}],["ps",{"_index":2527,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["public",{"_index":51,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["publicly",{"_index":1459,"title":{},"body":{"license.html":{}}}],["pug",{"_index":313,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{},"additional-documentation/modules/mailer.html":{}}}],["pug.renderfile(`${__dirname}/email",{"_index":366,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["pugfor",{"_index":2004,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["pull",{"_index":798,"title":{"additional-documentation/contribution/pull-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["purpose",{"_index":1433,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["purpose,if",{"_index":2218,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["purposes",{"_index":1357,"title":{},"body":{"license.html":{}}}],["push",{"_index":1950,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["puts",{"_index":2216,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["putting",{"_index":2698,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["q",{"_index":2528,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["q)4.remove",{"_index":2530,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["q)5",{"_index":2532,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["qualify",{"_index":2359,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["queries",{"_index":2135,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["query",{"_index":1038,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["questions",{"_index":2171,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["quick",{"_index":1002,"title":{},"body":{"index.html":{}}}],["quickly",{"_index":921,"title":{},"body":{"index.html":{}}}],["random",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["rate",{"_index":1294,"title":{},"body":{"index.html":{}}}],["raw",{"_index":2207,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["read",{"_index":2624,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["readable",{"_index":1510,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["ready",{"_index":930,"title":{},"body":{"index.html":{}}}],["reason",{"_index":319,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{}}}],["reasonable",{"_index":1544,"title":{},"body":{"license.html":{}}}],["rebase",{"_index":1947,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["rebuild",{"_index":1120,"title":{},"body":{"index.html":{}}}],["receive",{"_index":2283,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["received",{"_index":1442,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["recipients",{"_index":1496,"title":{},"body":{"license.html":{}}}],["reciprocate",{"_index":784,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["recommend",{"_index":1624,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":2382,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["reconstruct",{"_index":2156,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["record",{"_index":302,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockRequest.html":{}}}],["recreate",{"_index":1122,"title":{},"body":{"index.html":{}}}],["redistributing",{"_index":1566,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1491,"title":{},"body":{"license.html":{}}}],["reduced",{"_index":1871,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["ref",{"_index":2313,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["refactor",{"_index":2458,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["refactoring",{"_index":1904,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["refer",{"_index":2256,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["references",{"_index":2784,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["reflect",{"_index":894,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["refrences",{"_index":2419,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["regarding",{"_index":1537,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["register",{"_index":2702,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["registeras('mailer",{"_index":2015,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["registered",{"_index":2107,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["registration",{"_index":2766,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["rejects",{"_index":318,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["related",{"_index":2257,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["relation",{"_index":2750,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["relational",{"_index":2064,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["relations",{"_index":2751,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["relevant",{"_index":1874,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/crypto.html":{}}}],["remain",{"_index":1202,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["remote",{"_index":1932,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["remotes",{"_index":1925,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["remove",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["remove(id",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["removealllisteners",{"_index":2645,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["removelistener",{"_index":2644,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["replace",{"_index":378,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/database.html":{}}}],["replace:{'name",{"_index":2036,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["replaced",{"_index":1618,"title":{},"body":{"license.html":{}}}],["repo",{"_index":1926,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["reponses",{"_index":2325,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["report",{"_index":1862,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["reported",{"_index":1856,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["reporting",{"_index":2538,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["reports",{"_index":795,"title":{"additional-documentation/contribution/bug-reports.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["repos",{"_index":1256,"title":{},"body":{"index.html":{}}}],["repositories",{"_index":2106,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["repository",{"_index":566,"title":{},"body":{"injectables/UserDbRepository.html":{},"index.html":{},"properties.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["represent",{"_index":1409,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1427,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1457,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["reproducing",{"_index":1547,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1338,"title":{},"body":{"license.html":{}}}],["req",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["req.body",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"additional-documentation/modules/database.html":{}}}],["req.headers['x",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params",{"_index":2225,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["req.query",{"_index":2224,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["request",{"_index":11,"title":{"interfaces/Request.html":{},"additional-documentation/modules/request-response.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["request(app.gethttpserver",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).get('/api/docs",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).post('/auth/login').send(logincredentials",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).post('/users').send(userstub",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.all",{"_index":477,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.body",{"_index":471,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.params",{"_index":472,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.query",{"_index":470,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["requestguard",{"_index":414,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["requests",{"_index":796,"title":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["require",{"_index":2331,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["require('fs",{"_index":2621,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('http",{"_index":2610,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('os",{"_index":2687,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('path",{"_index":2627,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('querystring",{"_index":2619,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('url",{"_index":2616,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["required",{"_index":1082,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["required\"parameterized",{"_index":2202,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["required.this",{"_index":2219,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["requiredgenerates",{"_index":2200,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["requirements",{"_index":1919,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["requires",{"_index":2734,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["res",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["res.error(e",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["res.nocontent",{"_index":512,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success('deletion",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('response",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('success",{"_index":676,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('updation",{"_index":695,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success(logger",{"_index":522,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success(req.all",{"_index":514,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success(reswithacesstoken",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.success(this.appservice.gethello",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/request-response.html":{}}}],["res.success(userbyid",{"_index":684,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success(users",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.withmeta",{"_index":507,"title":{},"body":{"controllers/TestController.html":{}}}],["reserved",{"_index":2230,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["reset",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["resolution",{"_index":2614,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["resolve",{"_index":317,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["resource",{"_index":1042,"title":{},"body":{"index.html":{}}}],["resources",{"_index":2780,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["respect",{"_index":778,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["respective",{"_index":2116,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["respond",{"_index":1234,"title":{},"body":{"index.html":{}}}],["response",{"_index":13,"title":{"interfaces/Response.html":{},"additional-documentation/modules/request-response.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["response.error",{"_index":467,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.nocontent",{"_index":468,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.status(status).json(result",{"_index":453,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.status(statuscodes.no_content).end",{"_index":462,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.success",{"_index":466,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.withmeta",{"_index":469,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["responseresbody",{"_index":2510,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["responses",{"_index":2332,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["responsetype",{"_index":442,"title":{"interfaces/ResponseType.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["responsibility",{"_index":1605,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":428,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"license.html":{}}}],["rest",{"_index":918,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["restart",{"_index":2522,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["restful",{"_index":923,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["result",{"_index":451,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["resulting",{"_index":1386,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["reswithacesstoken",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["retain",{"_index":1504,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2752,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["retrieved",{"_index":2166,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"contributing.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/request-response.html":{}}}],["returned",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["reusable",{"_index":2287,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["reverse",{"_index":1290,"title":{},"body":{"index.html":{}}}],["review",{"_index":764,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["revisions",{"_index":1406,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1602,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["rimraf",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1906,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["risks",{"_index":1568,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2529,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["rmi",{"_index":2531,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["roles",{"_index":2193,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["root",{"_index":1086,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{}}}],["route",{"_index":2725,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["routes",{"_index":2729,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["royalty",{"_index":1454,"title":{},"body":{"license.html":{}}}],["rsa",{"_index":884,"title":{},"body":{"dependencies.html":{},"additional-documentation/modules/crypto.html":{}}}],["run",{"_index":1075,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["runner",{"_index":1185,"title":{},"body":{"index.html":{}}}],["running",{"_index":927,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["runs",{"_index":1171,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":439,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["s",{"_index":1273,"title":{},"body":{"index.html":{}}}],["safe",{"_index":2181,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["salt",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["same",{"_index":1183,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["sample",{"_index":2043,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["sample.pug",{"_index":2044,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["samples",{"_index":2469,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["sanitization",{"_index":2128,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["sanitize",{"_index":1035,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["sanitized",{"_index":2141,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["santizing",{"_index":1034,"title":{},"body":{"index.html":{}}}],["santosh",{"_index":1667,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["santoshshinde@gmail.com",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saucelabs",{"_index":2454,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["save",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["save(user",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveuser",{"_index":617,"title":{},"body":{"controllers/UsersController.html":{}}}],["saveuser(@req",{"_index":674,"title":{},"body":{"controllers/UsersController.html":{}}}],["saveuser(req",{"_index":635,"title":{},"body":{"controllers/UsersController.html":{}}}],["saving",{"_index":2318,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["saw",{"_index":2732,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scaffolding",{"_index":1010,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":2212,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["schema",{"_index":1240,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["schemas",{"_index":2783,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scheme",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["schemes",{"_index":2362,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["scope",{"_index":1885,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scoped",{"_index":2764,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scopes",{"_index":2448,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["script",{"_index":1161,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["scripts",{"_index":1144,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["search",{"_index":1855,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["searches",{"_index":2220,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["second",{"_index":1869,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["secret",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/modules/crypto.html":{}}}],["secretorkey",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1160,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["sections",{"_index":1343,"title":{},"body":{"license.html":{}}}],["secure",{"_index":370,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/crypto.html":{}}}],["security",{"_index":1031,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["see",{"_index":1159,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["seems",{"_index":1132,"title":{},"body":{"index.html":{}}}],["selected",{"_index":2077,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["self",{"_index":2007,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sell",{"_index":1468,"title":{},"body":{"license.html":{}}}],["semi",{"_index":2466,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["send",{"_index":2042,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["send(updateuserstub",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendemail",{"_index":294,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/mailer.html":{}}}],["sendemail(options",{"_index":306,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["sending",{"_index":1983,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["sendmail",{"_index":2032,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sense",{"_index":2342,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["sent",{"_index":1426,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["separable",{"_index":1413,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1193,"title":{},"body":{"index.html":{},"license.html":{}}}],["separation",{"_index":2244,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["series",{"_index":2170,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["serious",{"_index":2397,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["serve",{"_index":1178,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["server",{"_index":327,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["server.sendmail(mailoptions",{"_index":360,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["servers",{"_index":2683,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["serves",{"_index":1175,"title":{},"body":{"index.html":{}}}],["service",{"_index":1287,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["services",{"_index":1246,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["set",{"_index":1032,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["set('authorization",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription(`api",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setimmediate(callback",{"_index":2587,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setinterval(callback",{"_index":2585,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setmaxlisteners",{"_index":2646,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["settimeout(callback",{"_index":2581,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setting",{"_index":1135,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["settings",{"_index":1216,"title":{},"body":{"index.html":{}}}],["settitle(config.get('app.name",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(config.get(config.get('app.name",{"_index":2423,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["setup",{"_index":1072,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setupapiversioning",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setupapiversioning(app",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setupswagger(app",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setversion(config.get('app.version",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(config.get('app.vesrion",{"_index":2424,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["sha512",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1341,"title":{},"body":{"license.html":{}}}],["share",{"_index":1873,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["shares",{"_index":1375,"title":{},"body":{"license.html":{}}}],["sharing",{"_index":1043,"title":{},"body":{"index.html":{}}}],["sheet",{"_index":2788,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["shinde",{"_index":1668,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["ship",{"_index":1221,"title":{},"body":{"index.html":{}}}],["short",{"_index":1860,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["shouldcompress",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shown",{"_index":2103,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["side",{"_index":976,"title":{},"body":{"index.html":{}}}],["sign",{"_index":2223,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["signal",{"_index":2363,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["significant",{"_index":1902,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["silently",{"_index":2476,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["silly",{"_index":84,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["similar",{"_index":2129,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["simple",{"_index":1008,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["simply",{"_index":1162,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["single",{"_index":2562,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["skeleton",{"_index":917,"title":{},"body":{"index.html":{},"properties.html":{}}}],["skeleton/boilerplate/starter",{"_index":920,"title":{},"body":{"index.html":{}}}],["skills",{"_index":2717,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["smtp",{"_index":1960,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["snippet",{"_index":2050,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["socket",{"_index":2693,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["socket.io",{"_index":2690,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["sockets",{"_index":2658,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["software",{"_index":1385,"title":{},"body":{"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["sole",{"_index":1604,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1563,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1012,"title":{},"body":{"index.html":{}}}],["solution",{"_index":2408,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["solutions",{"_index":1880,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["solve",{"_index":980,"title":{},"body":{"index.html":{}}}],["something",{"_index":1910,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["sorting",{"_index":2711,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/contribution.html":{}}}],["space",{"_index":2463,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["spec",{"_index":2741,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["special",{"_index":755,"title":{},"body":{"classes/ValidateUserDto.html":{},"license.html":{}}}],["specific",{"_index":1215,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["specific/limited",{"_index":2194,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["specification",{"_index":2413,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["specified",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":1284,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["spending",{"_index":1907,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["sql",{"_index":2059,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["sqlite",{"_index":2073,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["src",{"_index":1197,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["src/.../api.response.dto.ts",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.versioning.ts",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../applogger.ts",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../bootstrap.ts",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../compression.ts",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crypto.ts",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hashing.ts",{"_index":907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../providers.ts",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.auth.guard.ts",{"_index":381,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/components",{"_index":1229,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/dto",{"_index":1237,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/entities",{"_index":1241,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/module_name.controllers.ts",{"_index":1247,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/module_name.module.ts",{"_index":1248,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/repository",{"_index":1244,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/services",{"_index":1245,"title":{},"body":{"index.html":{}}}],["src/components/users/constants/api.response.dto.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/users/dto/create.user.dto.ts",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/create.user.dto.ts:10",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:13",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:16",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:7",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts",{"_index":541,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/update.user.dto.ts:10",{"_index":546,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts:13",{"_index":545,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts:7",{"_index":543,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/validate.user.dto.ts",{"_index":735,"title":{},"body":{"classes/ValidateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/validate.user.dto.ts:10",{"_index":737,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["src/components/users/dto/validate.user.dto.ts:19",{"_index":744,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["src/components/users/entities/user.entity.ts",{"_index":548,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/components/users/entities/user.entity.ts:11",{"_index":552,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:14",{"_index":557,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:18",{"_index":550,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:21",{"_index":558,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:24",{"_index":556,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:8",{"_index":554,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/repository/db/user.repository.ts",{"_index":565,"title":{},"body":{"injectables/UserDbRepository.html":{},"coverage.html":{}}}],["src/components/users/repository/db/user.repository.ts:10",{"_index":572,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:15",{"_index":579,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:19",{"_index":577,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:23",{"_index":581,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:31",{"_index":574,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:38",{"_index":583,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:47",{"_index":576,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/user.repository.ts",{"_index":603,"title":{},"body":{"interfaces/UserRepository.html":{},"coverage.html":{}}}],["src/components/users/repository/user.repository.ts:10",{"_index":608,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:11",{"_index":604,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:12",{"_index":609,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:13",{"_index":605,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:8",{"_index":607,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:9",{"_index":606,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/services/users.service.ts",{"_index":703,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/components/users/services/users.service.ts:12",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:18",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:22",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:26",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:30",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:35",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:39",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.controller.ts",{"_index":611,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/components/users/users.controller.ts:111",{"_index":642,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:34",{"_index":631,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:45",{"_index":634,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:58",{"_index":628,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:70",{"_index":638,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:84",{"_index":625,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:97",{"_index":622,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.module.ts",{"_index":699,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/config",{"_index":1225,"title":{},"body":{"index.html":{}}}],["src/core",{"_index":1249,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["src/core/api.versioning.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/bootstrap.ts",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/compression/compression.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/cors.config.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/crypto/crypto.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/guards/request.ts",{"_index":416,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["src/core/guards/request.ts:102",{"_index":422,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:19",{"_index":420,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:21",{"_index":434,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:34",{"_index":426,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/hashing/hashing.ts",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/http/request.ts",{"_index":406,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["src/core/http/request.ts:7",{"_index":408,"title":{},"body":{"interfaces/Request.html":{}}}],["src/core/http/response.ts",{"_index":478,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{}}}],["src/core/http/response.ts:11",{"_index":487,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:5",{"_index":485,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:7",{"_index":481,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:9",{"_index":483,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/logger/applogger.ts",{"_index":49,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/applogger.ts:17",{"_index":61,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:31",{"_index":70,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:34",{"_index":68,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:37",{"_index":74,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:40",{"_index":64,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:43",{"_index":72,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/mailer/mailer",{"_index":373,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.module.ts",{"_index":289,"title":{},"body":{"modules/EmailHandlerModule.html":{}}}],["src/core/mailer/mailer.service.ts",{"_index":291,"title":{},"body":{"injectables/EmailHandlerService.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.service.ts:11",{"_index":295,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:13",{"_index":308,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:78",{"_index":303,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:83",{"_index":298,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/template/sample.pug",{"_index":2048,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["src/core/module.ts",{"_index":230,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/providers.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/rate",{"_index":527,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["src/db/database.module.ts",{"_index":261,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/db/migrations",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/db/typeorm.config.ts",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["src/swagger/index.ts",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["staged",{"_index":1051,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["staging",{"_index":2427,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["standard",{"_index":1009,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":2137,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["stands",{"_index":1985,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["start",{"_index":1003,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["start:debug",{"_index":1173,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1127,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1128,"title":{},"body":{"index.html":{}}}],["started",{"_index":758,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["starter",{"_index":953,"title":{},"body":{"index.html":{},"properties.html":{}}}],["starting",{"_index":2229,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["startup",{"_index":2483,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["state",{"_index":1530,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1466,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1525,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["statements",{"_index":802,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["static",{"_index":2508,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["stating",{"_index":1502,"title":{},"body":{"license.html":{}}}],["status",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["statuscodes",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{}}}],["statuscodes.created",{"_index":677,"title":{},"body":{"controllers/UsersController.html":{}}}],["statuscodes.ok",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{}}}],["statuscodes.unauthorized",{"_index":455,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["stay",{"_index":1000,"title":{},"body":{"index.html":{}}}],["stderr",{"_index":2661,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["stdin",{"_index":2663,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["stdout",{"_index":2660,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["steal",{"_index":2168,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["step",{"_index":1868,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["steps",{"_index":1141,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{}}}],["still",{"_index":2136,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["stop",{"_index":2524,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["stoppage",{"_index":1588,"title":{},"body":{"license.html":{}}}],["store",{"_index":2708,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["str",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["stream",{"_index":2649,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["streams",{"_index":2632,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["string",{"_index":94,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["string.also",{"_index":2208,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["strings",{"_index":2180,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["strong",{"_index":1887,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["structure",{"_index":994,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["structures",{"_index":1208,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["style",{"_index":1262,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["subject",{"_index":333,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"license.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["subject:'subject",{"_index":2034,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sublicense",{"_index":1462,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1527,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1421,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1419,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":797,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["subsequently",{"_index":1443,"title":{},"body":{"license.html":{}}}],["succesfully",{"_index":521,"title":{},"body":{"controllers/TestController.html":{}}}],["success",{"_index":363,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["success(data",{"_index":484,"title":{},"body":{"interfaces/Response.html":{}}}],["successful",{"_index":2190,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["successfull",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":1365,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["suitable",{"_index":1866,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["suites",{"_index":2781,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["summary",{"_index":1863,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["super",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{}}}],["superb",{"_index":972,"title":{},"body":{"index.html":{}}}],["supersede",{"_index":1534,"title":{},"body":{"license.html":{}}}],["support",{"_index":944,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["supports",{"_index":1988,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["sure",{"_index":1210,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["svg",{"_index":1649,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1021,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["swagger/open",{"_index":1295,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule",{"_index":2422,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule.createdocument(app",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule.setup('api/docs",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["switch",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2334,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["synchronize",{"_index":276,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["synchronous",{"_index":2622,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["syntax",{"_index":1623,"title":{},"body":{"license.html":{}}}],["sys_nice",{"_index":2479,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["system",{"_index":2447,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["systems",{"_index":1430,"title":{},"body":{"license.html":{}}}],["table",{"_index":857,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tag]).tostring(outputencoding",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tags",{"_index":2779,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["take",{"_index":762,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["task",{"_index":2289,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["tasks",{"_index":1172,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["tcp",{"_index":2657,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["techniques",{"_index":2259,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["technologies",{"_index":1324,"title":{},"body":{"index.html":{}}}],["technologies/rest",{"_index":1078,"title":{},"body":{"index.html":{},"properties.html":{}}}],["tell",{"_index":1311,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["template",{"_index":335,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"properties.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["templatename",{"_index":305,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["templatename:'sample",{"_index":2035,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["templates",{"_index":1992,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["templates/${templatename}.pug",{"_index":367,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["templates/neosoft_logo.png",{"_index":347,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["templates/nest_logo.png",{"_index":351,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["term",{"_index":2345,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["terminal",{"_index":1076,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1488,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1336,"title":{},"body":{"license.html":{}}}],["test",{"_index":984,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["test.createtestingmodule",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":525,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["test/.../generate",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.e2e.ts",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.stub.ts",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.update.stub.ts",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../users.response.ts",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/e2e/user.e2e.ts",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/generate",{"_index":844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/mock.request.ts",{"_index":847,"title":{},"body":{"coverage.html":{},"classes/mockRequest.html":{}}}],["test/mock/mock.request.ts:4",{"_index":1639,"title":{},"body":{"classes/mockRequest.html":{}}}],["test/mock/mock.response.ts",{"_index":849,"title":{},"body":{"coverage.html":{},"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:10",{"_index":1641,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:13",{"_index":1643,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:4",{"_index":1642,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:7",{"_index":1640,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/user.stub.ts",{"_index":851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/user.update.stub.ts",{"_index":853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/users.response.ts",{"_index":855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/unit/core/guards/controller/test.controller.ts",{"_index":489,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:11",{"_index":505,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:18",{"_index":502,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:22",{"_index":496,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:26",{"_index":499,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/module/core",{"_index":524,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["test:covrunning",{"_index":1139,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1138,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":1186,"title":{},"body":{"index.html":{}}}],["testall",{"_index":490,"title":{},"body":{"controllers/TestController.html":{}}}],["testall(@req",{"_index":513,"title":{},"body":{"controllers/TestController.html":{}}}],["testall(req",{"_index":494,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger",{"_index":491,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger(@req",{"_index":515,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger(req",{"_index":497,"title":{},"body":{"controllers/TestController.html":{}}}],["testcontroller",{"_index":488,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["testcoremodule",{"_index":523,"title":{"modules/TestCoreModule.html":{}},"body":{"modules/TestCoreModule.html":{},"modules.html":{}}}],["testing",{"_index":1017,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["testingmodule",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testnocontent",{"_index":492,"title":{},"body":{"controllers/TestController.html":{}}}],["testnocontent(@req",{"_index":511,"title":{},"body":{"controllers/TestController.html":{}}}],["testnocontent(req",{"_index":500,"title":{},"body":{"controllers/TestController.html":{}}}],["tests",{"_index":941,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["testwithmeta",{"_index":493,"title":{},"body":{"controllers/TestController.html":{}}}],["testwithmeta(@req",{"_index":506,"title":{},"body":{"controllers/TestController.html":{}}}],["testwithmeta(req",{"_index":503,"title":{},"body":{"controllers/TestController.html":{}}}],["text",{"_index":353,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{}}}],["textbody",{"_index":2049,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["thank",{"_index":1854,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["theory",{"_index":1573,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":2138,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["thereof",{"_index":1416,"title":{},"body":{"license.html":{}}}],["thing",{"_index":2351,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["think",{"_index":2728,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["third",{"_index":967,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["this.applogger.debug('debug",{"_index":519,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.error('error",{"_index":517,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.log('api",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{}}}],["this.applogger.log('log",{"_index":516,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.verbose('verbose",{"_index":520,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.warn('warn",{"_index":518,"title":{},"body":{"controllers/TestController.html":{}}}],["this.authservice.generatetoken(user",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":446,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":447,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.config.get('app.applyencription",{"_index":450,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.config.get('mailer.fromemail",{"_index":321,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.host",{"_index":322,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.password",{"_index":326,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.port",{"_index":323,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.username",{"_index":324,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.delete(id",{"_index":602,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.emailservice.sendemail",{"_index":2033,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["this.find",{"_index":592,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findone(id",{"_index":597,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findoneorfail",{"_index":593,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findoneorfail(id",{"_index":591,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.finduserbyemail(user",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getemailserver(mailconfig",{"_index":328,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.gettemplate(options.templatename",{"_index":341,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.jwtservice.sign(payload",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":95,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.debug",{"_index":107,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.error",{"_index":104,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.info",{"_index":103,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.verbose",{"_index":109,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.warn",{"_index":105,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.save",{"_index":596,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.save(payload",{"_index":594,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.update(id",{"_index":601,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.usersrepository.createuser(user",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.deleteuser(id",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findalluser",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.finduser(id",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.finduserbyemail(email",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.updateuser(id",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findall",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findemail(user.email",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":683,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":688,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.save(user",{"_index":675,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["those",{"_index":1470,"title":{},"body":{"license.html":{}}}],["thought",{"_index":991,"title":{},"body":{"index.html":{}}}],["thread",{"_index":2566,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["threaded",{"_index":2563,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["throttlemodule",{"_index":120,"title":{"modules/ThrottleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ThrottleModule.html":{},"modules.html":{},"overview.html":{}}}],["throttlerguard",{"_index":530,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["throttlermodule",{"_index":531,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["throttlermodule.forrootasync",{"_index":533,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["through",{"_index":1344,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["throughout",{"_index":1915,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["throw",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDbRepository.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":2393,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["tidy",{"_index":1948,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["time",{"_index":779,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timeend",{"_index":2576,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timeouts",{"_index":2775,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["timers",{"_index":2579,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timestamp",{"_index":89,"title":{},"body":{"injectables/AppLogger.html":{}}}],["title",{"_index":1559,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["together",{"_index":2699,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["token",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token.stub.ts",{"_index":845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1252,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["tool",{"_index":2187,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["tools",{"_index":974,"title":{},"body":{"index.html":{}}}],["tools/aes",{"_index":2410,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["top",{"_index":1203,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["topic",{"_index":1937,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["topics",{"_index":2554,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["tort",{"_index":1574,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1001,"title":{},"body":{"index.html":{}}}],["trace",{"_index":2577,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["tracker",{"_index":791,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["tracking",{"_index":1431,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1540,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1505,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1538,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":2130,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["training",{"_index":2553,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["trainings",{"_index":995,"title":{"additional-documentation/trainings.html":{}},"body":{"index.html":{},"additional-documentation/trainings.html":{}}}],["transactions",{"_index":2756,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transfer",{"_index":1239,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transfering",{"_index":2292,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["transferred",{"_index":2154,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["transform",{"_index":2667,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transformation",{"_index":1388,"title":{},"body":{"license.html":{}}}],["transformations",{"_index":2629,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["transformer",{"_index":873,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transforming",{"_index":2628,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["translation",{"_index":1389,"title":{},"body":{"license.html":{}}}],["transports",{"_index":79,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.console",{"_index":99,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.file",{"_index":100,"title":{},"body":{"injectables/AppLogger.html":{}}}],["travis",{"_index":1047,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["tri",{"_index":2675,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["trigger",{"_index":2031,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["true",{"_index":242,"title":{},"body":{"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["try",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["ts",{"_index":1195,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{}}}],["tsconfig.build.json",{"_index":1260,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":1257,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":534,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["tutorial",{"_index":1303,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":997,"title":{},"body":{"index.html":{}}}],["twice",{"_index":2355,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["twitter",{"_index":1320,"title":{},"body":{"index.html":{}}}],["two",{"_index":1978,"title":{},"body":{"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["type",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["type']).tocontain('text/html",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type(scope",{"_index":2550,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["typeof",{"_index":475,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["typeorm",{"_index":563,"title":{},"body":{"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"dependencies.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["typeormmodule",{"_index":262,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([userdbrepository",{"_index":702,"title":{},"body":{"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{}}}],["typeormmodule.forfeature([userdbrepository],'mongodb_connection",{"_index":2109,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["typeormmodule.forrootasync",{"_index":264,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["typeormnow",{"_index":2074,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["types",{"_index":1393,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["types/bcrypt",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["types/express",{"_index":2507,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["types/jwt",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailerto",{"_index":2002,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["types/pugconfiguration",{"_index":2005,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["typescript",{"_index":952,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["ui",{"_index":2420,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["unable",{"_index":2178,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["undefined",{"_index":598,"title":{},"body":{"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{}}}],["undefined})@apibearerauth('jwt",{"_index":621,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({type",{"_index":637,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apiproperty(apiresponse.apivalidateuserpass",{"_index":743,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["under",{"_index":1356,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["underlying",{"_index":970,"title":{},"body":{"index.html":{}}}],["understand",{"_index":2298,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["understanding",{"_index":2254,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["union",{"_index":1352,"title":{},"body":{"license.html":{}}}],["unique",{"_index":2356,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["unit",{"_index":939,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["unknown",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unless",{"_index":1528,"title":{},"body":{"license.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["unlikely",{"_index":1943,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["unref",{"_index":2589,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["unrelated",{"_index":1898,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["until",{"_index":2474,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["unwanted",{"_index":2316,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["up",{"_index":1112,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["update",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["update(id",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["update.user.dto",{"_index":2296,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["updated",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatenpm",{"_index":2514,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["updateresult",{"_index":585,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["updates",{"_index":2755,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["updateuser",{"_index":571,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{}}}],["updateuser(id",{"_index":582,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["updateuserbyid",{"_index":618,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserbyid(@req",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserbyid(req",{"_index":639,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":540,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto})@apibearerauth('jwt",{"_index":641,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserstub",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":2451,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["upload",{"_index":2668,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["uppercase",{"_index":752,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["upstream",{"_index":1933,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["uri",{"_index":1254,"title":{},"body":{"index.html":{}}}],["url",{"_index":2612,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["usability",{"_index":1968,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["use",{"_index":965,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["useclass",{"_index":539,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["used",{"_index":1285,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["usefactory",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["useful",{"_index":2260,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["useguards",{"_index":645,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':id')@apiokresponse({description",{"_index":620,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get(':id')@apiokresponse({description",{"_index":624,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@patch(':id')@apiokresponse({description",{"_index":640,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@version(version_neutral)@get()@apiokresponse({description",{"_index":627,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":162,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["user.controller.ts",{"_index":2028,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user.module.ts",{"_index":2026,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user.password",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["user_email",{"_index":2011,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user_password=once",{"_index":2012,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["userbyid",{"_index":682,"title":{},"body":{"controllers/UsersController.html":{}}}],["usercontroller",{"_index":2290,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["userdata",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.firstname",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.id",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.password",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdbrepository",{"_index":564,"title":{"injectables/UserDbRepository.html":{}},"body":{"injectables/UserDbRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["username",{"_index":270,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userrepository",{"_index":588,"title":{"interfaces/UserRepository.html":{}},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["users",{"_index":612,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["users.controller",{"_index":2304,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["users.entity.ts",{"_index":2104,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["users.module",{"_index":2302,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["users.module.ts",{"_index":2108,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["users.service.ts",{"_index":2111,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["userscontroller",{"_index":610,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userservice",{"_index":2291,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["usersmodule",{"_index":121,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["usersrepository",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{}}}],["usersservice",{"_index":193,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userstub",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":2062,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["useunifiedtopology",{"_index":2091,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["using",{"_index":790,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["utf8",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["util",{"_index":2625,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utilities",{"_index":1152,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utility",{"_index":2686,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utilize",{"_index":2265,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["v4",{"_index":2082,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["v8",{"_index":2564,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["validate",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validate(payload",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuserdto",{"_index":147,"title":{"classes/ValidateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{}}}],["validation",{"_index":938,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validationpipe",{"_index":2503,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validator",{"_index":560,"title":{},"body":{"entities/User.html":{},"classes/ValidateUserDto.html":{},"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["value",{"_index":304,"title":{},"body":{"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/enumerations.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["value.trim",{"_index":476,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["values",{"_index":2006,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["variable",{"_index":809,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/crypto.html":{}}}],["variables",{"_index":1028,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["various",{"_index":1235,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{}}}],["vector",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["verbal",{"_index":1424,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":56,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":71,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verbose?(message",{"_index":108,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verify",{"_index":2184,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["version",{"_index":646,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["version('1",{"_index":656,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('1')@get()@apiokresponse({description",{"_index":630,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('2",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('2')@get()@apiokresponse({description",{"_index":633,"title":{},"body":{"controllers/UsersController.html":{}}}],["version(version_neutral",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["version_neutral",{"_index":647,"title":{},"body":{"controllers/UsersController.html":{}}}],["versioning",{"_index":654,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["versioningtype.header",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.media_type",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":2175,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["via",{"_index":1143,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["video",{"_index":996,"title":{},"body":{"index.html":{}}}],["videos",{"_index":1307,"title":{},"body":{"index.html":{}}}],["view",{"_index":2598,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["views",{"_index":338,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{}}}],["visualize",{"_index":2745,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["void",{"_index":66,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{}}}],["volume",{"_index":2533,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["volumes",{"_index":2496,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["vs",{"_index":1214,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["vscode",{"_index":1212,"title":{},"body":{"index.html":{}}}],["vulnerability",{"_index":2119,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["vulnerabilty",{"_index":2198,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["vulnerable",{"_index":2142,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["want",{"_index":1872,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["warn",{"_index":57,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["warn(message",{"_index":73,"title":{},"body":{"injectables/AppLogger.html":{}}}],["warranties",{"_index":1555,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1550,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1125,"title":{},"body":{"index.html":{}}}],["way",{"_index":2165,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ways",{"_index":2205,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["we'd",{"_index":986,"title":{},"body":{"index.html":{}}}],["web",{"_index":2120,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["website",{"_index":1318,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1313,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["well",{"_index":2068,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["we’re",{"_index":2736,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["what’s",{"_index":2722,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["wherever",{"_index":1515,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1366,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["white",{"_index":2462,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["whole",{"_index":1410,"title":{},"body":{"license.html":{}}}],["whose",{"_index":2047,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["wicked",{"_index":1136,"title":{},"body":{"index.html":{}}}],["windows",{"_index":1066,"title":{},"body":{"index.html":{}}}],["windows/install",{"_index":1067,"title":{},"body":{"index.html":{}}}],["winston",{"_index":80,"title":{},"body":{"injectables/AppLogger.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/modules/logger.html":{}}}],["winstonloglevel",{"_index":82,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["within",{"_index":1445,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["withmeta",{"_index":463,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{}}}],["withmeta(data",{"_index":486,"title":{},"body":{"interfaces/Response.html":{}}}],["without",{"_index":1493,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["work",{"_index":1394,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["workflow",{"_index":1279,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["workflows",{"_index":1220,"title":{},"body":{"index.html":{}}}],["working",{"_index":1909,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["works",{"_index":1276,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["world",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["worldwide",{"_index":1450,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2669,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["writable",{"_index":2652,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["write",{"_index":2209,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["writing",{"_index":1440,"title":{},"body":{"license.html":{}}}],["written",{"_index":1259,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["xss",{"_index":1037,"title":{},"body":{"index.html":{}}}],["yes",{"_index":482,"title":{},"body":{"interfaces/Response.html":{}}}],["you'd",{"_index":1921,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["you'll",{"_index":1163,"title":{},"body":{"index.html":{}}}],["you've",{"_index":990,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{}}}],["yyyy",{"_index":1630,"title":{},"body":{"license.html":{}}}],["z\\d@$!%*?&]{8",{"_index":742,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["z])(?=.*[a",{"_index":739,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":740,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["za",{"_index":741,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["zero/no",{"_index":2381,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["zlib",{"_index":2654,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["zoom",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AppService } from '@app/app.service';\nimport { Request, Response } from '@app/core';\nimport AppLogger from '@app/core/logger/AppLogger';\n\n@ApiTags('nest_app')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private readonly appLogger: AppLogger) {}\n\n  @Get()\n  getHello(@Req() req: Request, @Res() res: Response): Promise {\n    this.appLogger.log('API called');\n    return res.success(this.appService.getHello());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLogger.html":{"url":"injectables/AppLogger.html","title":"injectable - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/AppLogger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Optional\n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/AppLogger.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/AppLogger.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Logger, createLogger, format, transports } from 'winston';\n\nenum WinstonLogLevel {\n  INFO = 'info',\n  ERROR = 'error',\n  WARN = 'WARN',\n  HTTP = 'HTTP',\n  VERBOSE = 'verbose',\n  DEBUG = 'debug',\n  SILLY = 'silly',\n}\n\n@Injectable()\nexport default class AppLogger implements LoggerService {\n  public logger: Logger;\n  constructor(config: ConfigService) {\n    const { combine, timestamp, label, printf } = format;\n    const customLoggerFormat = printf(\n      ({ level, message, Label, Timestamp }: { level: string; message: string; Label: string; Timestamp: string }) => {\n        return `${Timestamp} [${Label}] ${level}: ${message}`;\n      }\n    );\n    this.logger = createLogger({\n      format: combine(label({ label: config.get('app.name') }), timestamp(), customLoggerFormat),\n      transports: [new transports.Console(), new transports.File({ filename: config.get('app.logFileName') })],\n    });\n  }\n\n  log(message: any) {\n    this.logger.log(WinstonLogLevel.INFO, message);\n  }\n  error(message: any) {\n    this.logger.log(WinstonLogLevel.ERROR, message);\n  }\n  warn(message: any) {\n    this.logger.log(WinstonLogLevel.WARN, message);\n  }\n  debug?(message: any) {\n    this.logger.log(WinstonLogLevel.DEBUG, message);\n  }\n  verbose?(message: any) {\n    this.logger.log(WinstonLogLevel.VERBOSE, message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nThrottleModule\n\nThrottleModule\n\nAppModule -->\n\nThrottleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ThrottleModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AppController } from '@app/app.controller';\nimport { AppService } from '@app/app.service';\nimport { AuthModule } from '@app/auth/auth.module';\nimport { UsersModule } from '@app/components/users/users.module';\nimport { CoreModule } from '@app/core/module';\nimport { ThrottleModule } from '@app/core/rate-limiter/throttle.module';\nimport { DatabaseModule } from '@app/db/database.module';\n\n@Module({\n  imports: [CoreModule, DatabaseModule, UsersModule, ThrottleModule, AuthModule],\n  controllers: [AppController],\n\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  public getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiBody({type: ValidateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, Res } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { StatusCodes } from 'http-status-codes';\n\nimport { AuthService } from '@app/auth/auth.service';\nimport { ValidateUserDto } from '@app/components/users/dto/validate.user.dto';\nimport { Request, Response } from '@app/core';\n\n@ApiTags('authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  @ApiBody({ type: ValidateUserDto })\n  async generateToken(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const user: ValidateUserDto = req.body;\n      const resWithAcessToken = await this.authService.generateToken(user);\n      return res.success(resWithAcessToken, StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { AuthController } from '@app/auth/auth.controller';\nimport { AuthService } from '@app/auth/auth.service';\nimport { JwtStrategy } from '@app/auth/jwt.strategy';\nimport { UsersModule } from '@app/components/users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (config: ConfigService) => {\n        return {\n          secret: config.get('SECRET_JWT_KEY'),\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ConfigModule,\n    PassportModule,\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  // exports:[AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByEmail\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(user: ValidateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ValidateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: ValidateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ValidateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { ValidateUserDto } from '@app/components/users/dto/validate.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UsersService } from '@app/components/users/services/users.service';\nimport { comparePassword } from '@app/core/hashing/hashing';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly usersService: UsersService, private readonly jwtService: JwtService) {}\n\n  findUserByEmail(user: ValidateUserDto): Promise {\n    return this.usersService.findEmail(user.email);\n  }\n\n  async generateToken(user: ValidateUserDto): Promise {\n    try {\n      const userData = await this.findUserByEmail(user);\n      const isMatched = comparePassword(user.password, userData.password);\n      if (isMatched) {\n        const payload = {\n          id: userData.id,\n          firstName: userData.firstName,\n          email: userData.email,\n        };\n        const accessToken = this.jwtService.sign(payload);\n        return {\n          access_token: accessToken,\n        };\n      } else {\n        throw new HttpException('Invalid credentials', HttpStatus.UNAUTHORIZED);\n      }\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\n\n...exportProvider() \n\n...exportProvider() \n\n\n\nCoreModule\n\nCoreModule\n\n...exportProvider()  -->\n\nCoreModule->...exportProvider() \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ...exportProvider()\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { DiscoveryModule } from '@nestjs/core';\n\nimport config from '@app/config/index';\n\nimport { exportProvider, getProviders } from './providers';\n\n@Global()\n@Module({\n  imports: [\n    DiscoveryModule,\n    ConfigModule.forRoot({\n      envFilePath: [`${process.cwd()}/config/env/.env`, `${process.cwd()}/config/env/.env.${process.env.NODE_ENV}`],\n      isGlobal: true,\n      expandVariables: true,\n      load: config,\n    }),\n  ],\n  providers: [...getProviders()],\n  exports: [...exportProvider()],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/create.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserEmail)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserPass)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class CreateUserDto {\n  @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n  firstName: string;\n\n  @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n  lastName: string;\n\n  @ApiProperty(apiResponse.apiValidateUserEmail)\n  email: string;\n\n  @ApiProperty(apiResponse.apiValidateUserPass)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from '@app/components/users/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mysql',\n        host: config.get('db.host'),\n        port: config.get('db.port'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        entities: [User],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n        migrations: ['dist/db/migrations/*.js'],\n        migrationsRun: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailHandlerModule.html":{"url":"modules/EmailHandlerModule.html","title":"module - EmailHandlerModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailHandlerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailHandlerModule\n\n\n\ncluster_EmailHandlerModule_providers\n\n\n\ncluster_EmailHandlerModule_exports\n\n\n\n\nEmailHandlerService \n\nEmailHandlerService \n\n\n\nEmailHandlerModule\n\nEmailHandlerModule\n\nEmailHandlerService  -->\n\nEmailHandlerModule->EmailHandlerService \n\n\n\n\n\nEmailHandlerService\n\nEmailHandlerService\n\nEmailHandlerModule -->\n\nEmailHandlerService->EmailHandlerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailHandlerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailHandlerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { EmailHandlerService } from './mailer.service';\n\n@Module({\n  providers: [EmailHandlerService],\n  exports: [EmailHandlerService],\n})\nexport class EmailHandlerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailHandlerService.html":{"url":"injectables/EmailHandlerService.html","title":"injectable - EmailHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getEmailServer\n                            \n                            \n                                    Private\n                                    Async\n                                getTemplate\n                            \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/mailer/mailer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getEmailServer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmailServer(mailConfig: IMailConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailConfig\n                                    \n                                                IMailConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTemplate(templateName: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(options: IMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                IMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport juice from 'juice';\nimport nodemailer from 'nodemailer';\nimport Mail from 'nodemailer/lib/mailer';\nimport pug from 'pug';\n\nimport { IMailConfig, IMailOptions, IMailResponse } from './mailer-interfaces';\n\n@Injectable()\nexport class EmailHandlerService {\n  constructor(private readonly config: ConfigService) {}\n  async sendEmail(options: IMailOptions): Promise {\n    return new Promise(\n      async (resolve: (value?: IMailResponse) => void, rejects: (reason?: IMailResponse) => void): Promise => {\n        const mailConfig: IMailConfig = {\n          fromEmail: this.config.get('mailer.fromEmail'),\n          host: this.config.get('mailer.host'),\n          port: this.config.get('mailer.port'),\n          auth: {\n            user: this.config.get('mailer.username'),\n            pass: this.config.get('mailer.password'),\n          },\n        };\n\n        const server: Mail = await this.getEmailServer(mailConfig);\n\n        const mailOptions: Mail.Options = {\n          from: mailConfig.fromEmail,\n          to: options.to,\n          subject: options.subject,\n        };\n\n        // if template name is exist then choose pug template from views\n        if (options.templateName) {\n          mailOptions.html = await this.getTemplate(options.templateName, options.replace);\n          mailOptions.attachments = [\n            {\n              filename: 'neosoft_logo.png',\n              path: `${__dirname}/email-templates/neosoft_logo.png`,\n              cid: 'neosoft_logo',\n            },\n            {\n              filename: 'nest_logo.png',\n              path: `${__dirname}/email-templates/nest_logo.png`,\n              cid: 'nest_logo',\n            },\n          ];\n        }\n\n        // if text body then assign as text\n        if (options.body) {\n          mailOptions.text = options.body;\n        }\n\n        // if html body then assign as html\n        if (options.htmlBody) {\n          mailOptions.html = options.htmlBody;\n        }\n\n        server.sendMail(mailOptions, (err: Error, info: nodemailer.SentMessageInfo) => {\n          if (info) {\n            resolve({\n              success: true,\n              item: info,\n            });\n          } else {\n            rejects({\n              success: false,\n              errors: err,\n            });\n          }\n        });\n      }\n    );\n  }\n\n  private async getTemplate(templateName: string, options: Record = {}): Promise {\n    const html: string = pug.renderFile(`${__dirname}/email-templates/${templateName}.pug`, options);\n    return juice(html);\n  }\n\n  private async getEmailServer(mailConfig: IMailConfig): Promise {\n    return nodemailer.createTransport({\n      secure: true,\n      ...mailConfig,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailAuth.html":{"url":"interfaces/IMailAuth.html","title":"interface - IMailAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailConfig.html":{"url":"interfaces/IMailConfig.html","title":"interface - IMailConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                        \n                                            fromEmail\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         IMailAuth\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMailAuth\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailOptions.html":{"url":"interfaces/IMailOptions.html","title":"interface - IMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replace\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templateName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlBody:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replace:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailResponse.html":{"url":"interfaces/IMailResponse.html","title":"interface - IMailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            item\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly config: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: config.get('auth.secretKey'),\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.id,\n      firstName: payload.firstName,\n      email: payload.email,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/Request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        all\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Request.ts:7\n                \n            \n\n\n            \n                \n                    Get all inputs from the request object\n\n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Get the current user from the request object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Request as BaseRequest } from 'express';\n\nexport interface Request extends BaseRequest {\n  /**\n   * Get all inputs from the request object\n   */\n  all(): Record;\n\n  /**\n   * Get the current user from the request object\n   */\n  user: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/core/guards/request.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/guards/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bindRequestHelpers\n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:102\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Request\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bindResponseHelpers\n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:34\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\nThis helper is responsible for handling Response of nest app.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Response\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { StatusCodes } from 'http-status-codes';\nimport { get, omit } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { Request, Response } from '@app/core';\nimport { encrypt } from '@app/core/crypto/crypto';\n\ninterface ResponseType {\n  success: boolean;\n  code: StatusCodes;\n  data: any;\n  message?: string;\n  errors?: any;\n  meta?: any;\n}\n@Injectable()\nexport class RequestGuard implements CanActivate {\n  constructor(private readonly config: ConfigService) {}\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    this.bindRequestHelpers(context.switchToHttp().getRequest());\n    this.bindResponseHelpers(context.switchToHttp().getResponse());\n\n    return true;\n  }\n  /**\n   * Bind Response Helpers\n   * This helper is responsible for handling Response of nest app.\n   *\n   * @param response\n   */\n\n  bindResponseHelpers(response: Response): Response {\n    const APPLY_ENCRYPTION = this.config.get('app.applyEncription');\n    const success = (data: Record | Array | string, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: data,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const error = (errorObject: any, status = StatusCodes.UNAUTHORIZED) => {\n      let errorMsg: any;\n      let errors = null;\n      if (errorObject instanceof Object) {\n        errorMsg = errorObject?.message;\n        errors = errorObject?.errors;\n      } else {\n        errorMsg = errorObject;\n      }\n      let result: ResponseType | any = {\n        success: false,\n        code: status,\n        message: errorMsg,\n        errors: errors,\n        data: null,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const noContent = () => {\n      return response.status(StatusCodes.NO_CONTENT).end();\n    };\n\n    const withMeta = (data: Record, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: get(data, 'data'),\n        meta: omit(data, ['data']),\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n    response.success = success;\n    response.error = error;\n    response.noContent = noContent;\n    response.withMeta = withMeta;\n\n    return response;\n  }\n\n  /**\n   * Bind Request Helpers\n   *\n   * @param request\n   */\n  bindRequestHelpers(request: Request): Request {\n    const all = (): Record => {\n      const inputs = { ...request.query, ...request.body, ...request.params };\n\n      for (const key in inputs) {\n        const value = inputs[key];\n        if (typeof value === 'string' || value instanceof String) {\n          inputs[key] = value.trim();\n        }\n      }\n\n      return inputs;\n    };\n\n    request.all = all;\n    return request;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/Response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseResponse\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        noContent\n                                    \n                                \n                                \n                                    \n                                        success\n                                    \n                                \n                                \n                                    \n                                        withMeta\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(error: Record | string, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Record | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noContent\n                        \n                    \n                \n            \n            \n                \nnoContent()\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: Record | Array | string, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record | Array | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withMeta\n                        \n                    \n                \n            \n            \n                \nwithMeta(data: Record, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Response as BaseResponse } from 'express';\nimport { StatusCodes } from 'http-status-codes';\n\nexport interface Response extends BaseResponse {\n  success(data: Record | Array | string, status?: StatusCodes): any;\n\n  error(error: Record | string, status?: StatusCodes): any;\n\n  noContent(): any;\n\n  withMeta(data: Record, status?: StatusCodes): any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseType.html":{"url":"interfaces/ResponseType.html","title":"interface - ResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/guards/request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     StatusCodes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusCodes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { StatusCodes } from 'http-status-codes';\nimport { get, omit } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { Request, Response } from '@app/core';\nimport { encrypt } from '@app/core/crypto/crypto';\n\ninterface ResponseType {\n  success: boolean;\n  code: StatusCodes;\n  data: any;\n  message?: string;\n  errors?: any;\n  meta?: any;\n}\n@Injectable()\nexport class RequestGuard implements CanActivate {\n  constructor(private readonly config: ConfigService) {}\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    this.bindRequestHelpers(context.switchToHttp().getRequest());\n    this.bindResponseHelpers(context.switchToHttp().getResponse());\n\n    return true;\n  }\n  /**\n   * Bind Response Helpers\n   * This helper is responsible for handling Response of nest app.\n   *\n   * @param response\n   */\n\n  bindResponseHelpers(response: Response): Response {\n    const APPLY_ENCRYPTION = this.config.get('app.applyEncription');\n    const success = (data: Record | Array | string, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: data,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const error = (errorObject: any, status = StatusCodes.UNAUTHORIZED) => {\n      let errorMsg: any;\n      let errors = null;\n      if (errorObject instanceof Object) {\n        errorMsg = errorObject?.message;\n        errors = errorObject?.errors;\n      } else {\n        errorMsg = errorObject;\n      }\n      let result: ResponseType | any = {\n        success: false,\n        code: status,\n        message: errorMsg,\n        errors: errors,\n        data: null,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const noContent = () => {\n      return response.status(StatusCodes.NO_CONTENT).end();\n    };\n\n    const withMeta = (data: Record, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: get(data, 'data'),\n        meta: omit(data, ['data']),\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n    response.success = success;\n    response.error = error;\n    response.noContent = noContent;\n    response.withMeta = withMeta;\n\n    return response;\n  }\n\n  /**\n   * Bind Request Helpers\n   *\n   * @param request\n   */\n  bindRequestHelpers(request: Request): Request {\n    const all = (): Record => {\n      const inputs = { ...request.query, ...request.body, ...request.params };\n\n      for (const key in inputs) {\n        const value = inputs[key];\n        if (typeof value === 'string' || value instanceof String) {\n          inputs[key] = value.trim();\n        }\n      }\n\n      return inputs;\n    };\n\n    request.all = all;\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/unit/core/guards/controller/test.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testall\n                            \n                            \n                                testAppLogger\n                            \n                            \n                                testnoContent\n                            \n                            \n                                testwithMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testall\n                        \n                    \n                \n            \n            \n                \ntestall(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all/:param')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testAppLogger\n                        \n                    \n                \n            \n            \n                \ntestAppLogger(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('logger')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testnoContent\n                        \n                    \n                \n            \n            \n                \ntestnoContent(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('noContent')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testwithMeta\n                        \n                    \n                \n            \n            \n                \ntestwithMeta(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('withMeta')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\n\nimport { Request, Response } from '@app/core';\nimport AppLogger from '@app/core/logger/AppLogger';\n\n@Controller()\nexport class TestController {\n  constructor(private readonly appLogger: AppLogger) {}\n\n  @Get('withMeta')\n  testwithMeta(@Req() req: Request, @Res() res: Response): Promise {\n    return res.withMeta({\n      data: 'mydata',\n      myKey: 'myValue',\n    });\n  }\n  @Get('noContent')\n  testnoContent(@Req() req: Request, @Res() res: Response): Promise {\n    return res.noContent();\n  }\n  @Get('all/:param')\n  testall(@Req() req: Request, @Res() res: Response): Promise {\n    return res.success(req.all());\n  }\n  @Get('logger')\n  testAppLogger(@Req() req: Request, @Res() res: Response): Promise {\n    const logger = () => {\n      this.appLogger.log('Log called');\n      this.appLogger.error('Error called');\n      this.appLogger.warn('Warn called');\n      this.appLogger.debug('Debug called');\n      this.appLogger.verbose('Verbose called');\n\n      return 'AppLogger methods called succesfully';\n    };\n\n    return res.success(logger());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestCoreModule.html":{"url":"modules/TestCoreModule.html","title":"module - TestCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TestCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/unit/core/guards/module/core-test.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport config from '@app/config/index';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [`${process.cwd()}/config/env/test.env`],\n      isGlobal: true,\n      expandVariables: true,\n      load: config,\n    }),\n  ],\n})\nexport class TestCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThrottleModule.html":{"url":"modules/ThrottleModule.html","title":"module - ThrottleModule","body":"\n                   \n\n\n\n\n    Modules\n    ThrottleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/rate-limiter/throttle.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        ttl: config.get('throttler.ttl'),\n        limit: config.get('throttler.limit'),\n      }),\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class ThrottleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/update.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiUpdateUserBoolProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class UpdateUserDto {\n  @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n  firstName: string;\n\n  @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n  lastName: string;\n\n  @ApiProperty(apiResponse.apiUpdateUserBoolProperty)\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Column, Entity, ObjectIdColumn, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @IsEmail()\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDbRepository.html":{"url":"injectables/UserDbRepository.html","title":"injectable - UserDbRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserDbRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/repository/db/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                findAllUser\n                            \n                            \n                                findUser\n                            \n                            \n                                findUserByEmail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/users/repository/db/user.repository.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(payload: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUser\n                        \n                    \n                \n            \n            \n                \nfindAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityRepository, Repository, UpdateResult } from 'typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UserRepository } from '@app/components/users/repository/user.repository';\n@Injectable()\n@EntityRepository(User)\nexport class UserDbRepository extends Repository implements UserRepository {\n  constructor() {\n    super();\n  }\n\n  findUser(id: string): Promise {\n    return this.findOneOrFail(id);\n  }\n\n  findAllUser(): Promise {\n    return this.find();\n  }\n\n  findUserByEmail(email: string): Promise {\n    return this.findOneOrFail({\n      where: {\n        email: email,\n      },\n    });\n  }\n\n  createUser(payload: CreateUserDto): Promise {\n    return this.save(payload);\n  }\n  // updateUser(id: string, payload: UpdateUserDto): Promise {\n  //   // let id = parseInt(id);\n  //   return this.save({ ...payload, id });\n  // }\n  async updateUser(id: string, user: UpdateUserDto): Promise {\n    const result = await this.findOne(id);\n    if (result === undefined) {\n      throw new Error('User not found in database');\n    }\n    return this.update(id, {\n      ...user,\n    });\n  }\n  async deleteUser(id: string): Promise {\n    const result = await this.findOne(id);\n    if (result === undefined) {\n      throw new Error('User not found in database');\n    }\n    await this.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepository.html":{"url":"interfaces/UserRepository.html","title":"interface - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/repository/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        deleteUser\n                                    \n                                \n                                \n                                    \n                                        findAllUser\n                                    \n                                \n                                \n                                    \n                                        findUser\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                                \n                                    \n                                        updateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(payload: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUser\n                        \n                    \n                \n            \n            \n                \nfindAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateResult } from 'typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\n\nexport interface UserRepository {\n  findUser(id: string): Promise;\n  findAllUser(): Promise;\n  findUserByEmail(email: string): Promise;\n  createUser(payload: CreateUserDto): Promise;\n  updateUser(id: string, user: UpdateUserDto): Promise;\n  deleteUser(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                getUsersV1\n                            \n                            \n                                    Async\n                                getUsersV2\n                            \n                            \n                                    Async\n                                saveUser\n                            \n                            \n                                    Async\n                                updateUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Version(VERSION_NEUTRAL)@Get()@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersV1\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersV1(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Get()@ApiOkResponse({description: undefined})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersV2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersV2(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('2')@Get()@ApiOkResponse({description: undefined})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUser(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: undefined})@ApiBody({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserById(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')@ApiOkResponse({description: undefined})@ApiBody({type: UpdateUserDto})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n  Version,\n  VERSION_NEUTRAL,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiCreatedResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { StatusCodes } from 'http-status-codes';\n\nimport { JwtAuthGuard } from '@app/auth/jwt.auth.guard';\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UsersService } from '@app/components/users/services/users.service';\nimport { Request, Response } from '@app/core';\n\n@ApiTags('user_api')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  // Versioning API\n  @Version('1')\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseV1 })\n  async getUsersV1(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      return res.success('Response from API version 1');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @Version('2')\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseV2 })\n  async getUsersV2(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      return res.success('Response from API version 2');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Version(VERSION_NEUTRAL)\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseNeutral })\n  @ApiBearerAuth('JWT-auth')\n  async getUsers(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const users: User[] = await this.usersService.findAll();\n      return res.success(users);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @Post()\n  @ApiCreatedResponse({ description: apiResponse.apiUserCreatedResponse })\n  @ApiBody({ type: CreateUserDto })\n  async saveUser(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const user: CreateUserDto = req.body;\n      await this.usersService.save(user);\n      return res.success('success', StatusCodes.CREATED);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserGetById })\n  @ApiBearerAuth('JWT-auth')\n  async getUserById(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      const userById = await this.usersService.findOne(id);\n      return res.success(userById, StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserDeletedResponse })\n  @ApiBearerAuth('JWT-auth')\n  async deleteUser(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      await this.usersService.remove(id);\n      return res.success('Deletion Successfull', StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserUpdatedResponse })\n  @ApiBody({ type: UpdateUserDto })\n  @ApiBearerAuth('JWT-auth')\n  async updateUserById(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      const updateUser: UpdateUserDto = req.body;\n      await this.usersService.update(id, updateUser);\n      return res.success('Updation Successfull');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserDbRepository } from '@app/components/users/repository/db/user.repository';\nimport { UsersService } from '@app/components/users/services/users.service';\nimport { UsersController } from '@app/components/users/users.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserDbRepository])],\n  exports: [TypeOrmModule, UsersService],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/components/users/services/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmail\n                        \n                    \n                \n            \n            \n                \nfindEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UserDbRepository } from '@app/components/users/repository/db/user.repository';\nimport { UserRepository } from '@app/components/users/repository/user.repository';\nimport { hashPassword } from '@app/core/hashing/hashing';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserDbRepository)\n    private readonly usersRepository: UserRepository\n  ) {}\n\n  findAll(): Promise {\n    return this.usersRepository.findAllUser();\n  }\n\n  findOne(id: string): Promise {\n    return this.usersRepository.findUser(id);\n  }\n\n  findEmail(email: string): Promise {\n    return this.usersRepository.findUserByEmail(email);\n  }\n\n  async save(user: CreateUserDto): Promise {\n    user.password = await hashPassword(user.password);\n    await this.usersRepository.createUser(user);\n  }\n\n  async update(id: string, user: UpdateUserDto): Promise {\n    await this.usersRepository.updateUser(id, user);\n  }\n\n  async remove(id: string): Promise {\n    await this.usersRepository.deleteUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUserDto.html":{"url":"classes/ValidateUserDto.html","title":"class - ValidateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/validate.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()@ApiProperty(apiResponse.apiValidateUserEmail)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/validate.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: undefined})@ApiProperty(apiResponse.apiValidateUserPass)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/validate.user.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, Matches } from 'class-validator';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class ValidateUserDto {\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty(apiResponse.apiValidateUserEmail)\n  email: string;\n\n  @IsNotEmpty()\n  @Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {\n    message:\n      'password must be minimum eight characters, at least one uppercase letter, one lowercase letter, one number and ' +\n      'one special character',\n  })\n  @ApiProperty(apiResponse.apiValidateUserPass)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to this project\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\nUsing the issue tracker\nThe issue tracker is the preferred channel for bug reports,\nfeatures requests and submitting pull\nrequests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/constants/api.response.dto.ts\n            \n            variable\n            apiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/dto/create.user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users/dto/update.user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/dto/validate.user.dto.ts\n            \n            class\n            ValidateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/repository/db/user.repository.ts\n            \n            injectable\n            UserDbRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/users/repository/user.repository.ts\n            \n            interface\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/components/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/api.versioning.ts\n            \n            variable\n            setupAPIVersioning\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/bootstrap.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/compression/compression.ts\n            \n            variable\n            shouldCompress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/cors.config.ts\n            \n            variable\n            corsOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            algorithm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            decrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            digest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            encrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            iterations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            keylen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            salt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/guards/request.ts\n            \n            interface\n            ResponseType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/guards/request.ts\n            \n            guard\n            RequestGuard\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/hashing/hashing.ts\n            \n            function\n            comparePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/hashing/hashing.ts\n            \n            function\n            hashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http/Request.ts\n            \n            interface\n            Request\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/core/http/Response.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/logger/AppLogger.ts\n            \n            injectable\n            AppLogger\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailAuth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.service.ts\n            \n            injectable\n            EmailHandlerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/providers.ts\n            \n            variable\n            exportProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/providers.ts\n            \n            variable\n            getProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/typeorm.config.ts\n            \n            variable\n            configa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/e2e/user.e2e.ts\n            \n            variable\n            AppController_test\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/generate-token.stub.ts\n            \n            variable\n            loginCredentials\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/mock.request.ts\n            \n            class\n            mockRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/mock/mock.response.ts\n            \n            class\n            mockResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                test/mock/user.stub.ts\n            \n            variable\n            userStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/user.update.stub.ts\n            \n            variable\n            updateUserStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/users.response.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit/core/guards/controller/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.6\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.6\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.6\n        \n            @nestjs/throttler : ^2.0.0\n        \n            @nestjs/typeorm : ~8.0.2\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/jwt-decode : ^3.1.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.0\n        \n            class-validator : ^0.13.1\n        \n            compression : ^1.7.4\n        \n            dotenv : ^11.0.0\n        \n            express-jwt : ^6.1.0\n        \n            helmet : 5.0.1\n        \n            http-status-codes : ^2.1.4\n        \n            juice : ^8.0.0\n        \n            jwks-rsa : ^2.0.5\n        \n            jwt-decode : ^3.1.2\n        \n            mysql2 : ^2.2.5\n        \n            nodemailer : ^6.7.0\n        \n            passport : 0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pug : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.3.0\n        \n            typeorm : ^0.2.34\n        \n            winston : ^3.3.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonLogLevel   (src/.../AppLogger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/logger/AppLogger.ts\n    \n        \n            \n                \n                    \n                        \n                        WinstonLogLevel\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : HTTP\n                            \n                        \n                        \n                            \n                                 VERBOSE\n                            \n                        \n                        \n                            \n                                Value : verbose\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : debug\n                            \n                        \n                        \n                            \n                                 SILLY\n                            \n                        \n                        \n                            \n                                Value : silly\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../bootstrap.ts)\n                        \n                        \n                            comparePassword   (src/.../hashing.ts)\n                        \n                        \n                            hashPassword   (src/.../hashing.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/bootstrap.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    Core bootstrap module should be loaded here.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/core/hashing/hashing.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePassword\n                        \n                    \n                \n            \n            \n                \ncomparePassword(password: string, hashedPassword: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n            \n                \nhashPassword(password: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNest JS Skeleton for REST Application  \nA skeleton/boilerplate/starter project for quickly building RESTful APIs using Node.js, NestsJS, Express, and MySQL.\nBy running one command, you will get a production-ready Node.js app installed and configured on your machine. There are many built-in features in the skeleton, including authentication using JWT, request validation, unit and integration tests, continuous integration, docker support, API documentation, pagination, etc. To learn more about its features, check out the following list.\nDescription\n\nNest framework TypeScript starter repository.\n\nNest provides a level of abstraction above these common Node.js frameworks (Express/Fastify) but also exposes their APIs directly to the developer. This allows developers the freedom to use the myriad of third-party modules which are available for the underlying platform.\n\nThere are superb libraries, helpers, and tools that exist for Node (and server-side JavaScript), none of them effectively solve the main problem of — Architecture.\n\n\nTake it for a test drive. We'd love to hear any feedback you have or if you've thought of a new feature.\nTable of Contents\n\nFeatures\nGetting started\nProject Structure\nDocumentation\nMiscellaneous\nTrainings\nVideo Tutorials\nContributing To This Project\nIssues and Discussions\nStay in touch\n\nFeatures\n\nQuick start\nIntegrated ESLint, Prettier and Husky\nSimple and Standard scaffolding\nProduction-Ready Skeleton\nFollowed SOLID Principles\nAuthentication and authorization: using passport\nValidation: request data validation using Nest JS Pipe\nLogging: using winston \nTesting: unit and integration tests using Jest\nError handling: centralized error handling mechanism\nAPI documentation: with swagger \nProcess management: advanced production process management using PM2\nDependency management: with npm\nEnvironment variables: using dotenv and cross-env\nAPI Versioning\nSecurity: set security HTTP headers using helmet\nSantizing: sanitize request data against xss and query injection\nCORS: Cross-Origin Resource-Sharing enabled using cors\nCompression: gzip compression with compression\nCI: Continuous integration with Travis CI\nDocker support\nGit hooks: with husky and lint-staged\nLinting: with ESLint and Prettier\nEditor config: consistent editor configuration using EditorConfig\n\nGetting started\nPrerequisites\n\nNode https://nodejs.org/en/ use the LTS version\nNPM\nDocker https://www.docker.com/\nInstall Docker Desktop for MAC: https://docs.docker.com/docker-for-mac/install/\nInstall Docker Desktop for Windows: https://docs.docker.com/docker-for-windows/install/\n\n\nDocker Compose\nNestJS CLI https://nestjs.com/\n\nSetup\nTo get started, clone the repository to your local computer. Use the following command to run in your terminal.\nClone The Application\n// clone the application\n$ git clone https://github.com/NeoSOFT-Technologies/rest-node-nestjs.gitInstall The Dependencies\nNext, install the packages that are required for this project.\n// Install the required npm modules\n$ npm installCreate The Environment Variables\nThe config/env/.env file should be placed in root folder with the following variables.\n\nconfig/env/.env : Default Environment File\nconfig/env/.env.dev : Development Environment File\nconfig/env/.env.test : Test Environment File\nconfig/env/.env.prod : Production Environment File\n\n# config/env/.env.example\n\nAPP_NAME=rest_api\nNODE_ENV=dev\nDB_HOST=127.0.0.1\nDB_DATABASE=rest_api\nDB_USER=user\nDB_PASSWORD=root\nDB_PORT=3306Start MySQL Database\nIn order to use mysql, you need to have it installed in your local machine.\nDocker Compose is what we will be using in our case, In the project directory, execute the following command.\n# build images, create and run containers in background\ndocker-compose -f ./docker/docker-compose.yml --env-file ./config/env/.env up -dIn order to apply your modified code to a running container, you should add a build option.\n# if source code is changed, rebuild image, recreate and start container\ndocker-compose  -f ./docker/docker-compose.yml --env-file ./config/env/.env up -d --buildRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nFor this project, We chose Jest as our test framework.\nWhile Mocha is probably more common, Mocha seems to be looking for a new maintainer and setting up TypeScript testing in Jest is wicked simple.\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covRunning the build\nAll the different build steps are orchestrated via npm scripts.\nNpm scripts basically allow us to call (and chain) terminal commands via npm.\nThis is nice because most JavaScript tools have easy to use command line utilities allowing us to not need grunt or gulp to manage our builds.\nIf you open package.json, you will see a scripts section with all the different scripts you can call.\nTo call a script, simply run npm run  from the command line.\nYou'll notice that npm scripts can call each other which makes it easy to compose complex builds out of simple individual build scripts.\nBelow is a list of all the scripts this template has available:\n\n\n\nNpm Script\nDescription\n\n\n\n\nbuild\nFull build. Runs ALL build tasks\n\n\nstart:debug\nPerforms a full build and then serves the app in watch mode\n\n\nlint\nRuns ESLint on project files\n\n\nformat\nRuns the file formatter\n\n\nserve\nRuns node on dist/server.js which is the apps entry point\n\n\nstart\nDoes the same as 'npm run serve'. Can be invoked with npm start\n\n\ntest\nRuns tests using Jest test runner\n\n\ntest:watch\nRuns tests in watch mode\n\n\ndoc\nGenerate the project documenation using compdoc\n\n\n\nProject Structure\nIn a TypeScript project, it's best to have separate source  and distributable files.\nTypeScript (.ts) files live in your src folder and after compilation are output as JavaScript (.js) in the dist folder.\nThe test and views folders remain top level as expected.\nPlease find below a detailed description of the app's folder structures:\n\nNote! Make sure you have already built the app using  npm run build\n\n\n\n\nName\nDescription\n\n\n\n\n.vscode\nContains VS Code specific settings\n\n\n.github\nContains GitHub settings and configurations, including the GitHub Actions workflows\n\n\ndist\nContains the distributable (or output) from your TypeScript build. This is the code you ship\n\n\nnode_modules\nContains all your npm dependencies\n\n\nsrc\nContains your source code that will be compiled to the dist dir\n\n\nsrc/config\nHere you will find all the environment configuration necessary to access the application e.g. .env\n\n\nsrc/components\nComponents define group of files/source that respond to various module(http requests)\n\n\nsrc/components/${module_name}/dto/\nDTO (Data Transfer Object) Schema, Validation\n\n\nsrc/components/${module_name}/entities/\nEntities belongs to that Component\n\n\nsrc/components/${module_name}/repository/\nRepository belongs to that Component\n\n\nsrc/components/${module_name}/services/\nServices belongs to that Component\n\n\nsrc/components/${module_name}/module_name.controllers.ts\nController belongs to that Component\n\n\nsrc/components/${module_name}/module_name.module.ts\nModule belongs to that Component\n\n\nsrc/core\nAll core modules - Guards, Http Request & Response Handler, Logger\n\n\nsrc/main.ts\nEntry point to your express app\n\n\ntest\nContains your tests. Separate from source because there is a different build process.\n\n\nconfig/env/.env.example\nAPI keys, tokens, passwords, database URI. Clone this, but don't check it in to public repos.\n\n\npackage.json\nFile that contains npm dependencies\n\n\ntsconfig.json\nConfig settings for compiling server code written in TypeScript\n\n\ntsconfig.build.json\nConfig settings for compiling tests written in TypeScript\n\n\n.eslintrc\nConfig settings for ESLint code style checking\n\n\n.eslintignore\nConfig settings for paths to exclude from linting\n\n\n\nDocumentation\n1. Generation with compdoc\nGenerate project documentation using the following command (npm 6 is required for npx support). See the official documentation for more options.\nnpm run doc\nOR\nnpx @compodoc/compodoc -p tsconfig.json -s\n2. Request and Response Cycle\n\nAn explanation of how the request and response cycle works is provided here\n\n2.1 Request and Response Workflow\n\nBoilerplate has a custom guard enabled for handling response and request for every api. The integration of request response guard is enabled by default with response structure\n\n\n2.2 Request Workflow\n\nBy creating a workflow, you can specify the template that should be used to create a change request when a request for service is logged.\n\n\n3. Modules\n\nLogger\nRequest Response\nMailer\nDatabase\nReverse Proxy\nPattern\nCrypto\nRate Limit\nCompression\nCORS\nSwagger/Open API\nDatabase Migration\nAuthentication\n\n3. Modules\n\nCoverage\n\nMiscellaneous\n\nKnown Issues\nGit commits\nClean Docker Images\nInstallation Pretteri, Husky & Lint\n\nTrainings\n\nNest JS for Beginners\nNode JS for Beginners\n\nVideo Tutorials\nBelow are the video tutorial links for the modules that we have implemented in the boilerplate.\nThe Below list is the demonstration Videos of the various modules in the nestjs boilerplate.\n\nClone and Installation of Boilerplate\nDocker Container\nClean Code Architecture\nReverse Proxy Engine\nDatabase Handling & Mailer Service\nCompression\nDatabase Migration\nError Handling\nEncryption\nLogger and Config Handler\nEmail Handler\nPostman Demonstration\nSwagger Demonstration\n\nThe below list will tell us how to create components in the boilerplate.\n\nCreate Update Component\nCreate Update Component 1\n\nTesting Videos\n\nUnit Testing 1\nUnit Testing 2\nUnit Testing 3\n\nContributing To This Project\nContributions are welcome from anyone and everyone. We encourage you to review the guiding principles for contributing\n\nBug reports\nFeature requests\nPull requests\n\nIssues and Discussions\n\nCreate New Issue\nCheck Existing Issues\nDiscussions\n\nStay in touch\n\nWebsite - https://www.neosofttech.com/\nTwitter - @neosofttech\nMeetup -  https://www.meetup.com/neosoft-technologies/\nMedium -  https://medium.com/@neosofttech-technologies-blog\nGitHub - https://github.com/NeoSOFT-Technologies\nDiscord - NodeJS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/mockRequest.html":{"url":"classes/mockRequest.html","title":"class - mockRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  mockRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/mock/mock.request.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.request.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from '@app/core';\n\nexport class mockRequest implements Partial {\n  all(): Record {\n    return { key: 'value' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/mockResponse.html":{"url":"classes/mockResponse.html","title":"class - mockResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  mockResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/mock/mock.response.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                noContent\n                            \n                            \n                                success\n                            \n                            \n                                withMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noContent\n                        \n                    \n                \n            \n            \n                \nnoContent()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withMeta\n                        \n                    \n                \n            \n            \n                \nwithMeta()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Response } from '@app/core';\n\nexport class mockResponse implements Partial {\n  success(): any {\n    return 'mock_success';\n  }\n  error(): any {\n    return 'mock_error';\n  }\n  noContent(): any {\n    return 'mock_noContent';\n  }\n  withMeta(): any {\n    return 'mock_withMeta';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailHandlerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThrottleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_EmailHandlerModule\n\n\n\ncluster_EmailHandlerModule_exports\n\n\n\ncluster_EmailHandlerModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n...exportProvider() \n\n...exportProvider() \n\n...exportProvider()  -->\n\nCoreModule->...exportProvider() \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nThrottleModule\n\nThrottleModule\n\nAppModule -->\n\nThrottleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nEmailHandlerService \n\nEmailHandlerService \n\n\n\nEmailHandlerModule\n\nEmailHandlerModule\n\nEmailHandlerService  -->\n\nEmailHandlerModule->EmailHandlerService \n\n\n\n\n\nEmailHandlerService\n\nEmailHandlerService\n\nEmailHandlerModule -->\n\nEmailHandlerService->EmailHandlerModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            Keywords : nestjs-boilerplate, nestjs-objection, nestjs-starter-template, nestjs-template, nestjs-starter-kit, nestjs-skeleton, nestjs-rest-api\n        \n            Homepage : https://github.com/NeoSOFT-Technologies/rest-node-nestjs#readme\n        \n            Bugs : https://github.com/NeoSOFT-Technologies/rest-node-nestjs/issues\n        \n            License : \n        \n            Repository : git+https://github.com/NeoSOFT-Technologies/rest-node-nestjs.git\n        \n            Author : Santosh Shinde\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            algorithm   (src/.../crypto.ts)\n                        \n                        \n                            apiResponse   (src/.../api.response.dto.ts)\n                        \n                        \n                            AppController_test   (test/.../user.e2e.ts)\n                        \n                        \n                            configa   (src/.../typeorm.config.ts)\n                        \n                        \n                            corsOptions   (src/.../cors.config.ts)\n                        \n                        \n                            decrypt   (src/.../crypto.ts)\n                        \n                        \n                            digest   (src/.../crypto.ts)\n                        \n                        \n                            encrypt   (src/.../crypto.ts)\n                        \n                        \n                            exportProvider   (src/.../providers.ts)\n                        \n                        \n                            getProviders   (src/.../providers.ts)\n                        \n                        \n                            iterations   (src/.../crypto.ts)\n                        \n                        \n                            keylen   (src/.../crypto.ts)\n                        \n                        \n                            loginCredentials   (test/.../generate-token.stub.ts)\n                        \n                        \n                            salt   (src/.../crypto.ts)\n                        \n                        \n                            setupAPIVersioning   (src/.../api.versioning.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            shouldCompress   (src/.../compression.ts)\n                        \n                        \n                            updateUserStub   (test/.../user.update.stub.ts)\n                        \n                        \n                            users   (test/.../users.response.ts)\n                        \n                        \n                            userStub   (test/.../user.stub.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/crypto/crypto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        algorithm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-gcm'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService, data: any) => {\n  try {\n    // constant to decrypt the data\n    const inputEncoding = 'base64';\n    const outputEncoding = 'utf8';\n\n    // Creates a new Buffer containing the given JavaScript string {str}\n    const bufferData = Buffer.from(data, inputEncoding);\n\n    // password - master key\n    const password = config.get('crypto.secretKey');\n\n    // derive key using; 32 byte key length\n    const key = crypto.pbkdf2Sync(password, salt, iterations, keylen, digest);\n\n    // extract iv from encrypted data\n    const iv = bufferData.slice(bufferData.length - 28, bufferData.length - 16);\n\n    // extract tag from encrypted data\n    const tag = bufferData.slice(bufferData.length - 16);\n\n    // extract encrypted text from encrypted data\n    const text = bufferData.slice(0, bufferData.length - 28);\n\n    // AES 256 GCM Mode\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n\n    // set the auth tag\n    decipher.setAuthTag(tag);\n\n    // Used to update the cipher with data according to the given encoding format.\n    // @data: It is used to update the cipher by new content\n    // @inputEncoding: Input encoding format\n    // @outputEncoding: Output encoding format\n    let str = decipher.update(text, null, outputEncoding);\n\n    // Return the buffer containing the value of cipher object.\n    // @outputEncoding: Output encoding format\n    str += decipher.final(outputEncoding);\n\n    // parse the string decrypted data\n    return JSON.parse(str);\n  } catch (exception) {\n    throw new Error(exception);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sha512'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService, data: any) => {\n  try {\n    // constant to encrypt the data\n    const inputEncoding = 'utf8';\n    const outputEncoding = 'base64';\n\n    // password - master key\n    const password = config.get('crypto.secretKey');\n\n    // random initialization vector\n    const iv = crypto.randomBytes(12);\n\n    // The method gives an asynchronous Password-Based Key Derivation\n    const key: Buffer = crypto.pbkdf2Sync(password, salt, iterations, keylen, digest);\n\n    // create a Cipher object, with the stated algorithm, key and initialization vector (iv).\n    // @algorithm - AES 256 GCM Mode\n    // @key\n    // @iv\n    // @options\n    const cipher = crypto.createCipheriv(algorithm, key, iv);\n\n    // create a Cipher object, with the stated algorithm, key and initialization vector (iv).\n    // @algorithm - AES 256 GCM Mode\n    // @key\n    // @iv\n    // @options\n    const enc1 = cipher.update(JSON.stringify(data), inputEncoding);\n\n    // Return the buffer containing the value of cipher object.\n    // @outputEncoding: Output encoding format\n    // const enc2 = cipher.final();\n    const enc2 = cipher.final();\n\n    // extract the auth tag\n    const tag = cipher.getAuthTag();\n\n    // return the result\n    return Buffer.concat([enc1, enc2, iv, tag]).toString(outputEncoding);\n  } catch (exception) {\n    throw new Error(exception);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iterations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2145\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keylen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : crypto.randomBytes(64)\n                    \n                \n\n\n        \n    \n\n    src/components/users/constants/api.response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUserCreatedResponse: 'User has been created successfully',\n\n  apiUserGetResponseV1: 'Users list from version 1 returned successfully',\n\n  apiUserGetResponseV2: 'Users list from version 2 returned successfully',\n\n  apiUserGetResponseNeutral: 'Users list from version neutral returned successfully',\n\n  apiUserGetById: 'User with specified Id returned successfully',\n\n  apiUserUpdatedResponse: 'User with specified id updated successfully',\n\n  apiUserDeletedResponse: 'User with specified id deleted successfully',\n\n  apiCreateUserFirstNameProperty: {\n    type: 'String',\n    description: 'Firstname of the user',\n  },\n\n  apiCreateUserLastNameProperty: {\n    type: 'String',\n    description: 'Lastname of the user',\n  },\n\n  apiUpdateUserBoolProperty: {\n    type: 'Boolean',\n    description: 'Tells us whether user is active or not',\n  },\n\n  apiValidateUserEmail: {\n    type: 'String',\n    description: 'Email of the user',\n  },\n\n  apiValidateUserPass: {\n    type: 'String',\n    description: 'Password of the user',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    test/e2e/user.e2e.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppController_test\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  let app: INestApplication;\n  beforeAll(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    coreBootstrap(app);\n    setupAPIVersioning(app);\n    setupSwagger(app);\n    await app.init();\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  it('Should return 201 created status along with success message', async () => {\n    const response = await request(app.getHttpServer()).post('/users').send(userStub());\n    expect(response.status).toBe(StatusCodes.CREATED);\n    expect(response.body.data).toBe('success');\n  });\n\n  it('Should return response from version 1 along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const { status, body } = await request(app.getHttpServer())\n      .get('/v1/users')\n      .set('Authorization', 'Bearer ' + token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Response from API version 1');\n  });\n\n  it('Should return response from version 2 along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const { status, body } = await request(app.getHttpServer())\n      .get('/v2/users')\n      .set('Authorization', 'Bearer ' + token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Response from API version 2');\n  });\n\n  it('Should return users array along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const { status, body } = await request(app.getHttpServer())\n      .get('/users')\n      .set('Authorization', 'Bearer ' + token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(200);\n    const { data } = body;\n    expect(data.length).toBeGreaterThanOrEqual(1);\n  });\n\n  it('Should return user of specified id along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const response = await request(app.getHttpServer())\n      .get('/users/2')\n      .set('Authorization', 'Bearer ' + token)\n      .expect(StatusCodes.OK);\n\n    expect(response.status).toEqual(StatusCodes.OK);\n    expect(response.body.success).toEqual(true);\n  });\n\n  it('Should update user of specified id and return 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const { status, body } = await request(app.getHttpServer())\n      .patch('/users/2')\n      .set('Authorization', 'Bearer ' + token)\n      .send(updateUserStub());\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Updation Successfull');\n  });\n\n  it('Should delete user of specified id and return 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/login').send(loginCredentials);\n    const token = loginResponse.body.data.access_token;\n    const { status, body } = await request(app.getHttpServer())\n      .delete('/users/2')\n      .set('Authorization', 'Bearer ' + token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Deletion Successfull');\n  });\n\n  it('Testing Swagger module - should return HTML in response', async () => {\n    const response = await request(app.getHttpServer()).get('/api/docs');\n    expect(response.headers['content-type']).toContain('text/html');\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/db/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configa\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DB_HOST,\n  port: +process.env.DB_PORT,\n  username: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  entities: [User],\n  synchronize: false,\n  cli: {\n    migrationsDir: 'src/db/migrations',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/core/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        corsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  origin: ['https://example1.com', 'https://example2.com', 'https://127.0.0.1:5500'],\n}\n                    \n                \n\n\n        \n    \n\n    src/core/providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exportProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): [any] => {\n  return [AppLogger];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): [any] => {\n  return [AppLogger];\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/generate-token.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loginCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email: 'santoshshinde@gmail.com',\n  password: '123456seven',\n}\n                    \n                \n\n\n        \n    \n\n    src/core/api.versioning.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupAPIVersioning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  switch (config.get('app.apiVersioning')) {\n    case 'Header':\n      app.enableVersioning({\n        type: VersioningType.HEADER,\n        header: config.get('app.apiVersioningHeader'),\n      });\n      break;\n    case 'Media Type':\n      app.enableVersioning({\n        type: VersioningType.MEDIA_TYPE,\n        key: config.get('app.apiVersioningKey'),\n      });\n      break;\n    default:\n      app.enableVersioning({\n        type: VersioningType.URI,\n      });\n      break;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/swagger/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  const options = new DocumentBuilder()\n    .setTitle(config.get('app.name'))\n    .setDescription(`API Documentation for the app ${config.get('app.name')}`)\n    .setVersion(config.get('app.version'))\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWT',\n        description: 'Enter JWT token',\n        in: 'header',\n      },\n      'JWT-auth'\n    )\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api/docs', app, document);\n}\n                    \n                \n\n\n        \n    \n\n    src/core/compression/compression.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        shouldCompress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req: Request, res: Response) => {\n  if (req.headers['x-no-compression']) {\n    return false;\n  }\n  return compression.filter(req, res);\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/user.update.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        updateUserStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    isActive: true,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/users.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 127,\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    email: 'santoshshinde@gmail.com',\n    password: '123456seven',\n    isActive: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    test/mock/user.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    email: 'santoshshinde@gmail.com',\n    password: '123456seven',\n    isActive: true,\n  };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution.html":{"url":"additional-documentation/contribution.html","title":"additional-page - Contribution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing to this project\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\nUsing the issue tracker\nThe issue tracker is the preferred channel for bug reports,\nfeatures requests and submitting pull\nrequests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/bug-reports.html":{"url":"additional-documentation/contribution/bug-reports.html","title":"additional-page - Bug Reports","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBug reports\nA bug is a demonstrable problem that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\nGuidelines for bug reports:\n\nUse the GitHub issue search — check if the issue has already been\nreported.\n\nCheck if the issue has been fixed — try to reproduce it using the\nlatest main or development branch in the repository.\n\n\nExample:\n\nShort and descriptive example bug report title\nA summary of the issue and the browser/OS environment in which it occurs. If\nsuitable, include the steps required to reproduce the bug.\n\nThis is the first step\nThis is the second step\nFurther steps, etc.\n\n - a link to the reduced test case\nAny other information you want to share that is relevant to the issue being\nreported. This might include the lines of code that you have identified as\ncausing the bug, and potential solutions (and your opinions on their\nmerits).\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/features-requests.html":{"url":"additional-documentation/contribution/features-requests.html","title":"additional-page - Features Requests","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature requests\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to you to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/pull-requests.html":{"url":"additional-documentation/contribution/pull-requests.html","title":"additional-page - Pull Requests","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPull requests\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\nPlease ask first before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\nFollow this process if you'd like your work considered for inclusion in the\nproject:\n\nFork the project, clone your fork,\nand configure the remotes:\n# Clone your fork of the repo into the current directory\ngit clone https://github.com//\n# Navigate to the newly cloned directory\ncd \n# Assign the original repo to a remote called \"upstream\"\ngit remote add upstream https://github.com//\nIf you cloned a while ago, get the latest changes from upstream:\ngit checkout \ngit pull upstream \nCreate a new topic branch (off the main project development branch) to\ncontain your feature, change, or fix:\ngit checkout -b \nCommit your changes in logical chunks. Please adhere to these git commit\nmessage guidelines\nor your code is unlikely be merged into the main project. Use Git's\ninteractive rebase\nfeature to tidy up your commits before making them public.\n\nLocally merge (or rebase) the upstream development branch into your topic branch:\ngit pull [--rebase] upstream \nPush your topic branch up to your fork:\ngit push origin \nOpen a Pull Request\n with a clear title and description.\n\n\nIMPORTANT: By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules.html":{"url":"additional-documentation/modules.html","title":"additional-page - Modules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModules\nBoiler plate is build over the top of Nest with structure of /src/core module which consist all the major functionality required in the development like database connection, SMTP integration, Email template management, request response handler, Logger etc.\n\nHome\nLogger\nRequest Response\nMailer\nDatabase\nPattern\nCrypto\nSwagger/Open API\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/logger.html":{"url":"additional-documentation/modules/logger.html","title":"additional-page - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogger\nLogger module is already present in Boiler Plate. We have used  winston npm package to extend the logger functionality. The objective of the logger module is \n\nIt should support text-based logging \nDefining different levels of logs like warn, error, debug etc.\n\nUsability\nLogger is part of CoreModule imports which would be default enabled for every application. To call the logger module we need to import it as dependency and then call the desired function for logging info \n\nLogger module has different level of functions for logging\nconstructor( private appLogger: AppLogger) {} \n\nthis.appLogger.log('API called');Logs are created in logs/app.log file at project root level below\nOutput format\nLog format would be (datetime [app_name] level: message)eg. 2021-06-15T05:45:28.894Z [Boiler plate NestJS] info: API called \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/request-response.html":{"url":"additional-documentation/modules/request-response.html","title":"additional-page - Request Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest Response\n  Boilerplate has a custom guard enabled for handling response and request for every api. The integration of request response guard is enabled by default with response structure\nOverview\n\nAvailable function for response.\nsuccess\n\n The success function expected two parameters\n\ndata: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nerror\n\n The error function expected two parameters\n\nerror: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nnoContent\n\n The noContent function expected no parameters\nwithMeta\n\n The withMeta function expected two parameters. This function extract additional data passed to response object into new response key as meta.\n\ndata: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nUsability:\nWe need to import the Request and Response interface from the core modules\nimport { Request, Response } from '@libs/core';\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private appLogger: AppLogger) {}\n\n  @Get()\n  getHello(@Req() req: Request, @Res() res: Response): Promise {\n    this.appLogger.log('API called');\n    return res.success(this.appService.getHello());\n  }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/mailer.html":{"url":"additional-documentation/modules/mailer.html","title":"additional-page - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMailer\nThe objective of Mailer module\n\nThis module would support sending emails via SMTP which stands for Simple Mail Transfer Protocol. We need to provide SMTP credentials in .env in the desired format mentioned below.\nMailer module also supports the attachment functionality.\nWe need to define the email template folder from where we need fetch the email template.\nCurrently we support pug email templates\nThe third-party service that we are using is the nodemailer package.\n\nPug\nPug is a high performance template engine heavily influenced by Haml and implemented with JavaScript for Node.js and browsers. This library is used for designing the template of the email body.\nInstall Dependencies\nFirst we need to install the nodemailer package by the following command.\nnpm install --save nodemailerThe below command is executed to support .ts files.\nnpm install --save @types/nodemailerTo install Pug template execute the following instruction.\nFor .js\nnpm install --save pugFor .ts\nnpm install --save @types/pugConfiguration\nTo configure the SMTP service we need to add below values in the environment. The values are self explanatory.  \nEMAIL_HOST=\nEMAIL_PORT=\nUSER_EMAIL=\nUSER_PASSWORD=Once the .env is setup then the values of the .env file will be imported in the application with the help of mailer.ts file present in the config directory.\nexport default registerAs('mailer', () => ({\nfromEmail: process.env.USER_EMAIL,\nhost: process.env.EMAIL_HOST ,\nport: process.env.EMAIL_PORT ,\nusername: process.env.USER_EMAIL ,\npassword: process.env.USER_PASSWORD ,\n}));Usability\nSince Mailer is required in every module it is the part of the CoreModule imports.\nAlso it is an independent module hence a mailer.module.ts file is being created in which we have provided the EmailHandlerService.\n@Module({\n  providers: [EmailHandlerService],\n  exports: [EmailHandlerService],\n})\nexport class EmailHandlerModule {}The class EmailHandlerModule can be used via importing it in any of the core module such as Users module or App module etc. Consider we want to use the Mailer module in the Users module. It can  be done simply by the below steps. First import the EmailHandlerModule in the user.module.ts file.\n@Module({\n  imports: [TypeOrmModule.forFeature([UserDbRepository]), EmailHandlerModule],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}Now since we need it in the User module we need to add the EmailHandlerService as a dependency in the user.controller.ts file.\nconstructor(private readonly emailService: EmailHandlerService) {} \nFinally to trigger an email, we need pass below parameters to sendMail function in EmailHandlerService.\nIn this case we are sending template as a mail.\n await this.emailService.sendEmail({\n        to:'',\n        subject:'subject',\n        templateName:'sample',\n        replace:{'name': ''},\n });The paramenters of the sendEmail function are self explanatory. The templateName parameter defines the template od the email that we are going to send through the  sendEmail function.\nThe value sample is the sample.pug file which contains the template that is to be sent in the mail. The .pug should be kept in the template fol\n\ntemplate: The .pug file should be kept in the template folder whose directory might be in the following format /src/core/mailer/template/sample.pug\n\nAt the same time if we want to send a textbody via email then it has to be defined\nin as a value against the body parameter. Use the following snippet of the code.\n await this.emailService.sendEmail({\n        to:'',\n        subject:'subject',\n        body:'This is email body',\n });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/database.html":{"url":"additional-documentation/modules/database.html","title":"additional-page - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase\nBoiler plate has already included mysql and mongodb database configuration within the core modules. To leverage the functionality, we need to define the database connection in database.module.ts which is in db folder inside src. Update the database configuration as per your setting.\nInstallation\nFor integrating with SQL and NoSQL databases, Nest provides the @nestjs/typeorm package. Nest uses TypeORM because it's the most mature Object Relational Mapper (ORM) available for TypeScript. Since it's written in TypeScript, it integrates well with the Nest framework.TypeORM provides support for many relational databases, such as PostgreSQL, Oracle, Microsoft SQL Server, SQLite, and even NoSQL databases like MongoDB.\n$ npm install --save @nestjs/typeorm typeormNow proceed to install the associated client API libraries for selected database.\nFor MySQL install mysql\n$ npm install --save mysql2For MongoDB install MongoDB NodeJS Driver.We install older version as typeorm does not support mongodb driver for v4\n$ npm install --save mongodb@3.7.0\nNote: It is a best practice to import database information from application configuration.\n\nConfiguration\n# database.module.ts\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      name: 'mysql_connection',\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mysql',\n        host: config.get('db.host'),\n        port: config.get('db.port1'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        entities: [User],\n        // entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n      }\n      ),\n    }),\n    TypeOrmModule.forRootAsync({\n      name: 'mongoDB_connection',\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mongodb',\n        host: config.get('db.host'),\n        port: config.get('db.port2'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        useUnifiedTopology: true,\n        authSource: 'admin',\n        entities: [User],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n      }),\n    }),\n  ],\n})type:   Database type. Must specify which database engine to use.\nhost:   Database host.\nport:   Database host port. Default mysql port is 3306 & default mongodb port is 27017.\nusername:   Database username.\npassword:   Database password.\ndatabase:   Database name.\nuseUnifiedTopology:   Determines whether or not to use the new Server Discovery and Monitoring engine.\nauthSource:   If the Database authentication is dependent on another databaseName\nentities:   Entities that maps with database table. It is shown below\n# users.entity.ts\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n}synchronize:   Synchronize the entities with databases. Should not be enabled for production.\n\nUsing the forFeature() method repositories are registered in the current scope.\n\n# users.module.ts\n\n    @Module({\n    imports: [TypeOrmModule.forFeature([UserDbRepository],'mongoDB_connection')],\n    providers: [UsersService],\n    controllers: [UsersController],\n    })\nInject UserDbRepository using @InjectRepository decorator\n\n# users.service.ts\n\nconstructor(\n    @InjectRepository(UserDbRepository,'mongoDB_connection')\n    private readonly usersRepository: UserRepository\n  ) {}Using other database apart from MySQL and MongoDb.\nThe existing boiler plate comes with by default support for MySQL. This doesn't mean that you cannot use any other database like  PostgreSQL, Oracle, Microsoft SQL Server etc. Install the respective package of the database and update the config.ts as per required database configuration.\n\n\nNoSQL injections\nA NoSQL injection vulnerability is an error in a web application that uses a NoSQL database. This web application security issue lets a malicious party bypass authentication, extract data, modify data, or even gain complete control over the application. NoSQL injection attacks are the result of a lack of data sanitization.\nNoSQL injections are just one of many injection attacks, similar to traditional SQL Injections. They are engineered to exploit modern databases that do not use SQL. While NoSQL database engines have a different structure and do not support SQL statements and SQL queries, they still let users perform queries. They do not support one standardized language and therefore the query language is dependent on the implementation: database (e.g. MongoDB), language, and framework (e.g. Node.js, Angular). However, NoSQL queries are most often based on JSON and they can include user input. If this input is not sanitized, they are vulnerable to injections.\n\nTypes Of Injection Attacks\n\nIn-band Injections : In-band Injection is the most common and easy-to-exploit of Injection attacks. In-band Injection occurs when an attacker is able to use the same communication channel to both launch the attack and gather results. As an example, an attacker may use the HTTP communication deploy the attack to a backend and get the results on the same channel\n\nInferential Injection (Blind Injection): In an inferential attack, no data is actually transferred via the web application and the attacker would not be able to see the result of an attack in-band. Instead, an attacker is able to reconstruct the database structure by sending payloads, observing the web application’s response and the resulting behavior of the database server.\nBlind injection is nearly identical to normal injection, the only difference being the way the data is retrieved from the database. When the database does not output data to the web page, an attacker is forced to steal data by asking the database a series of true or false questions. This makes exploiting the Injection vulnerability more difficult, but not impossible.\n\nOut-of-band Injections: This not very common type of injection, mostly because it depends on features being enabled on the database server being used by the web application. Out-of-band Injection occurs when an attacker is unable to use the same channel to launch the attack and gather results.\n\n\nHow to prevent injection attacks\n\nTry to avoid building queries from strings, use safe APIs and prepared statements.\nValidate input to detect malicious values, also verify the types of input data i.e. string, number, Boolean, object etc. We can use joi or any other tool for this.\nTo minimize the potential damage of a successful injection attack, do not assign DBA or admin type access rights to your application accounts, we can create new roles with specific/limited access.\nSanitize the data, we can use express-mongo-sanitize to sanitize incoming data for express mongoDB.Database Vulnerabilty against injection\n\n\n\n\n\nConnection type\nWith ORM\nWithout ORM\n\n\n\n\nSecurity\nRisk is low Data sanitization not requiredGenerates \"parameterized statements\"\nRisk is high Data sanitization required\"parameterized statements\" needs to written manually\n\n\n\nTypeORM provide many ways to construct a database query, but they also give you the option to execute 'raw' queries as a string.Also they allow to write some part of a generated query as a raw string. This should to be avoided, as it defeats the purpose of using an ORM.\nIn that scenario, simply injecting user input variables into a string query (instead of using the ORM's core API / query builder functions) puts data security at a higher risk.\nData sanitization for MongoDB\nWe can use express-mongo-sanitize for this purpose,if required.This module searches for any keys in objects that begin with a $ sign or contain a ., from req.body, req.query or req.params. It can then either:\n\ncompletely remove these keys and associated data from the object, or\nreplace the prohibited characters with another allowed character.\n\nObject keys starting with a $ or containing a . are reserved for use by MongoDB as operators. Without this sanitization, malicious users could send an object containing a $ operator, or including a ., which could change the context of a database operation. Most notorious is the $where operator, which can execute arbitrary JavaScript on the database.The best way to prevent this is to sanitize the received data, and remove any offending keys, or replace the characters with a 'safe' one.\n\nSimple add the the middleware after installing the library as shown below\n\n# bootsrap.ts\n...\nimport  mongoSanitize  from 'express-mongo-sanitize';\n\n...\napp.use(mongoSanitize());\n...\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/pattern.html":{"url":"additional-documentation/modules/pattern.html","title":"additional-page - Pattern","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesign Pattern\nClean architecture\n\nSeparation of concerns at the architectural level\n\nThis document defines the design pattern for developing any web api application. We intend to follow clean architecture. Dividing the application into multiple layers like Domain layer, Service layer, Repository layer etc. The implementation of these layer would explained via example. For more understanding kindly refer Clean Architecture related articles.\nIn this boiler plate, we define the methods and techniques that would useful for building and maintaining web app build in NestJS. NestJS itself has covered alot techniques like TypeORM, Dependency Injection and so on. This document help us to utilize functionality and follow clean architecture.\n\nIn the above diagram, we code the see the how does the request flows from controller to database. There are lot of aspects that need to consider in this, like external api calls, caching etc which would be covered later.\nInversion of Control (IoC)\nIn software engineering, inversion of control (IoC) is a programming principle. IoC inverts the flow of control as compared to traditional control flow. In IoC, custom-written portions of a computer program receive the flow of control from a generic framework. A software architecture with this design inverts control as compared to traditional procedural programming: in traditional programming, the custom code that expresses the purpose of the program calls into reusable libraries to take care of generic tasks, but with inversion of control, it is the framework that calls into the custom, or task-specific, code.\nBelow is the inversion of flow for the boiler plate which has been used for user module.\n\nThe control flows from UserController to UserService, we have DTO defined for transfering data between classes eg. create.user.dto, update.user.dto\nUnderstanding the implementation of clean code in boilerplate\nTo start with let's understand the folder structure and files first.\n\nApp.module — the core of the project, here we import modules that are providing functionalities.\nusers.module — this module will be imported by AppModule to provide everything that is related to our users.\nusers.controller — Here we declare our endpoints with all parameters.\nentities — in this place we declare our User class.\ndto— data transfer object — a bunch of interfaces for communication with the application.\nrepository — in this place we define all the queries related to database or external IO.\nservices - in this place we have our business logic defined\nNow let us go through each folder\n1. entities\nIn this folder, we have defined the database table fields that is required for that entity. TypeORM has some build-in helpers like PrimaryGeneratedColumn, Column etc. Ref: TypeORM documentation\n2. dto\nIn this folder, we have defined the the data transfer object that would be used to communicated between classes. DTO are helpful for avoid leak of unwanted data or fields\n3. repository\nIn this folder, we have defined the database queries related to the entity. We have used typeORM for fetching or saving data. Before defining the implementation of the repository, it is a good practice to define an interface of the repository.\n4. services\nIn this folder, we have defined the business logic related to the entity. For executing the db queries, we use the repository. Repository and services are loosely coupled with the repository interface.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/crypto.html":{"url":"additional-documentation/modules/crypto.html","title":"additional-page - Crypto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEncryption-Decryption\nEncryption-Decryption module is present in the Boiler Plate. We have used the crypto library in order to implement the encryption decryption functionality.\nThe objective of Encryption-Decryption module\n\nThis module would support sending the requests to the server from the user in encrypted form and also encryptingthe reponses that the user will receive from the server.\nWe need to provide a flag variable which tells us whether we need to encrypt the data or not in the .env file.\nAlso we need to define the constants such as which algorithm to be used for encryption in the crypto.ts file.\nCurrently we are using aes-256-gcm algorithm for encryption and decryption.\n\nConfiguration\nTo start the encryption-decryption service we need to set the APPLY_ENCRYPTION variable to 1 in the .env file.\nAPPLY_ENCRYPTION=We can also set these constants according to our preference in the crypto.ts file.\nconst inputEncoding= \nconst outputEncoding= \nconst salt= \nconst algorithm= \nconst password= Usability\nSince we require to encrypt the request and responses of the application, Encryption-Decryption service is being included in the core module.\nWhat is the main difference between a key, an IV and a nonce?\nA key, in the context of symmetric cryptography, is something you keep secret. Anyone who knows your key (or can guess it) can decrypt any data you've encrypted with it (or forge any authentication codes you've calculated with it, etc.).\nAn IV or initialization vector is, in its broadest sense, just the initial value used to start some iterated process. The term is used in a couple of different contexts and implies different security requirements in each of them.\nA nonce, in the broad sense, is just \"a number used only once\". The only thing generally demanded of a nonce is that it should never be used twice (within the relevant scope, such as encryption with a particular key). The unique IVs used for block cipher encryption qualify as nonces, but various other cryptographic schemes make use of nonces as well.\nWhy does the Signal protocol use AES/CBC instead of AES/GCM?\nAES-GCM Disadvantage\nWhy would I ever use AES-256-CBC if AES-256-GCM is more secure?\nHow to choose an Authenticated Encryption mode\nNode.js - AES Encryption/Decryption with AES-256-GCM using random Initialization Vector + Salt\nEncryption algorithms should be used with secure mode and padding scheme\n\nEncryption operation mode and the padding scheme should be chosen appropriately to guarantee data confidentiality, integrity and authenticity:\n\nFor block cipher encryption algorithms (like AES):\nThe GCM (Galois Counter Mode) mode which works internally with zero/no padding scheme, is recommended, as it is designed to provide both data authenticity (integrity) and confidentiality. Other similar modes are CCM, CWC, EAX, IAPM and OCB.\nThe CBC (Cipher Block Chaining) mode by itself provides only data confidentiality, it’s recommended to use it along with Message Authentication Code or similar to achieve data authenticity (integrity) too and thus to prevent padding oracle attacks.\nThe ECB (Electronic Codebook) mode doesn’t provide serious message confidentiality: under a given key any given plaintext block always gets encrypted to the same ciphertext block. This mode should not be used.\nFor RSA encryption algorithm, the recommended padding scheme is OAEP.\n\n\n\n\nNoncompliant Code Example\n\nNoncompliant: CBC with PKCS5/7 (set by default) is vulnerable to oracle padding attacks\n\n  crypto.createCipheriv(\"AES-128-CBC\", key, iv);\n\nNoncompliant: ECB doesn't provide serious message confidentiality\n\n  crypto.createCipheriv(\"AES-128-ECB\", key, \"\");\n\nCompliant Solution\n\n\ncrypto.createCipheriv(\"AES-256-GCM\", key, iv);\nTest\nhttps://www.devglan.com/online-tools/aes-encryption-decryption\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/open-api/swagger.html":{"url":"additional-documentation/modules/open-api/swagger.html","title":"additional-page - Open API/Swagger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSwagger/Open API\n\nThe OpenAPI specification is a language-agnostic definition format used to describe RESTful APIs. Nest provides a dedicated module which allows generating such a specification by leveraging decorators.\n\nRefrences\n\nOpenAPI (Swagger) | NestJS\n\nInstallation\nTo begin using it, we first install the required dependencies.\nnpm install --save-dev @nestjs/swagger swagger-ui-express\nImplemenetation\nTo begin, we will create a new file called src/swagger/index.ts into which we will add the following code.\nimport { INestApplication } from '@nestjs/common';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nexport const setupSwagger = (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  const options = new DocumentBuilder()\n    .setTitle(config.get(config.get('app.name')))\n    .setDescription(`API Documentation for the app ${config.get('app.name')}`)\n    .setVersion(config.get('app.vesrion'))\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api/docs', app, document);\n};We need to add the following code to the src/main.ts file to call this code, If the environment is dev/local/staging, then only swagger will be enabled.\nconst envList = ['dev', 'staging', 'local', 'test'];\n\nif (envList.includes(config.get('app.env'))) {\n    setupSwagger(app);\n}Run the Swagger\nYou can check swagger running on http://localhost:5000/api/docs\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous.html":{"url":"additional-documentation/miscellaneous.html","title":"additional-page - Miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMiscellaneous\n\nKnown Issues\nGit commits\nClean Docker Images\nInstallation Pretteri, Husky & Lint\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/git-commits.html":{"url":"additional-documentation/miscellaneous/git-commits.html","title":"additional-page - Git commits","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit commits and pre hooks\nWe have added some git pre hooks while committing the code. These pre hooks are executed on every git commit.\nWhat is commitlint\nCommitlint checks if your commit messages meet the conventional commit format.\nCommit message can be bifurcated into 3 section \"(): \"\nType: can be anyone of them feat | bugfix | feature etc.\n\nModule/Scope: Module/Scope is the name of the module you are working on\n\nCommit_Message: Actual commit message\ngit commit -m \"feat(documentation): adding documentation\"\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nchore: Updating tasks etc; no production code change\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeat: A new feature\nfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\nsample: A change to the samples\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/known-issues.html":{"url":"additional-documentation/miscellaneous/known-issues.html","title":"additional-page - Known Issues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to fix “mbind: Operation not permitted” in mysql error log\nAdd the capability CAP_SYS_NICE to your container until MySQL server can handle the error itself \"silently\".\nservice:\n  mysql:\n    image: mysql:8.0.15\n    # ...\n    cap_add:\n      - SYS_NICE  # CAP_SYS_NICEhttps://stackoverflow.com/questions/55559386/how-to-fix-mbind-operation-not-permitted-in-mysql-error-log\nhttps://docs.docker.com/config/containers/resource_constraints/\nMySQL init script on Docker compose\nMySQL Docker container supports executing init scripts on startup, All we need to do is either copy or mount our script files to /docker-entrypoint-initdb.d/ folder inside MySQL docker image.\n# Docker Compose with MySQL Server\nversion: '3.3'\nservices:\n  database:\n    image: 'mysql:8'\n    cap_add:\n      - SYS_NICE\n    container_name: '${APP_NAME}_mysql'\n    hostname: '${APP_NAME}_mysql'\n    networks:\n        - internal\n    ports:\n        - '127.0.0.1:${DB_PORT}:3306'\n    volumes:\n        - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql\n        - mysql:/var/lib/mysql\n    env_file:\n        - .envThe \"class-validator\" package is missing. Please, make sure to install this library ($ npm install class-validator) to take advantage of ValidationPipe\nnpm install --save class-validator\nThe \"class-transformer\" package is missing. Please, make sure to install this library ($ npm install class-transformer) to take advantage of ValidationPipe.\nnpm install class-transformer --save \nMap src directory in package.json jest config\nhttps://github.com/nestjs/nest/issues/4953\nError: Interface 'Response' incorrectly extends interface 'Response'\nnpm i -D @types/express-serve-static-core\nhttps://stackoverflow.com/questions/63330265/getting-interface-responseresbody-incorrectly-extends-interface-response\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/issues/46639\nIs there a recommended way to update NestJS?\n$ npm install -g @nestjs/cli\n$ nest updatenpm install --save @nestjs/common@latest @nestjs/config@latest @nestjs/core@latest @nestjs/platform-express@latest @nestjs/typeorm@latest reflect-metadata rxjs\nnpm install --save-dev @nestjs/testing\nhttps://stackoverflow.com/questions/57469252/is-there-a-recommended-way-to-update-nestjs\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/clean-docker-images.html":{"url":"additional-documentation/miscellaneous/clean-docker-images.html","title":"additional-page - Clean Docker Images","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClean Docker Images\nHow to Do a Clean Restart of a Docker Instance\n1. Stop the container(s) using the following command\ndocker-compose down\n2. Stop and remove all containers\n\nList\n docker ps -a\n\nRemove\n\n\ndocker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)4.Remove all images\n\nList\n docker images -a\n\nRemove\n\n\ndocker rmi $(docker images -a -q)5. Delete all volumes using the following command\ndocker volume rm $(docker volume ls -q)\n6. Restart the containers using the following command\ndocker-compose up -d\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{"url":"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html","title":"additional-page - Installation Pretteri, Husky & Lint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nESLint\nnpm install --save-dev  eslint eslint-config-prettier eslint-plugin-import\nESLint is a fully pluggable tool for identifying and reporting on patterns in JavaScript.\nConfiguration file: .eslintrc.js.\nFor more configuration options and details, see the configuration docs.\n\nCommitlint\nnpm install --save-dev @commitlint/cli @commitlint/config-conventional commitizen cz-conventional-changelog\ncommitlint checks if your commit messages meet the conventional commit format.\nConfiguration file: [.commitlintrc]\nIn general the pattern mostly looks like this:\ntype(scope?): subject  #scope is optionalAre you a good commitizen ?\n\nHusky\nnpm install --save-dev husky lint-staged prettier\nHusky is a package that helps you create Git hooks easily.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings.html":{"url":"additional-documentation/trainings.html","title":"additional-page - Trainings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrainings\n\nGit for Beginners\nNode JS for Beginners\nNest JS for Beginners\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/node-js-for-beginners.html":{"url":"additional-documentation/trainings/node-js-for-beginners.html","title":"additional-page - Node JS for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNodeJS Training\nPrerequisites\n\nJavaScript  \nTypescript \nnpm\n\nTopics\n1. Introduction & Foundation\n\nIntroduction \nThe Node.js framework \nExplain what Node.js is \nDescribe how Node.js works \nIdentify when to use Node.js \nCreate and run a Node.js script from the command line\n\n\nEvent Loop \nWhat is the Event Loop? \nEvent Loop Explained \nPhases Overview \nWhy use process.nextTick()?\n\n\nSingle threaded Architecture \nV8 JavaScript Engine   \nC library - libuv \nProcess & Thread \nThread pool \nUnderstand Node JS Single Thread Event Loop Workflow\n\n\n\n2. Node Projects\n\nNode Project Manager \nInitialize Node.js projects \nnpm and nvm\n\n\npackage.json configuration file \nGlobal vs local package installation\n\n3. Starting with Node js\n\nGlobal Objects (http://nodejs.org/api/globals.html) \n__filename \n__dirname \nmodule \nexports \nprocess \nBuffer\n\n\nConsole (http://nodejs.org/api/console.html) \nlog \ninfo \nerror \nwarn \ndir \ntime \ntimeEnd \ntrace \nassert\n\n\nTimers (http://nodejs.org/api/timers.html) \nsetTimeout(callback, delay, [arg], [...]) \nclearTimeout(t) \nsetInterval(callback, delay, [arg], [...]) \nclearInterval(t) \nsetImmediate(callback, [arg], [...]) \nclearImmediate(immediateObject) \nunref() \nref()\n\n\nModules (http://nodejs.org/api/modules.html) \nDebugging(https://nodejs.org/en/docs/guides/debugging-getting-started) \n--inspect \nSecurity Implications \nnode-inspector(https://github.com/node-inspector/node-inspector)\n\n\n\n4. Express JS\n\nModel View Controller Pattern \nTemplate Engine \nUsing REST \nMiddleware\n\n5. Unit Testing\n\nBasic Introduction \nAssert (http://nodejs.org/api/assert.html) \nFunctional and Integration testing \nImplementation of unit testing using Mocha or Chai\n\n6. Express JS Practical\n\nSetup the new Project  \nAdd the unit test cases\n\n7. Working with Asynchronous Programming\n\nAsynchronous basics \nCallback Functions \nWorking with Promises \nAPI Calls\n\n8. Building a HTTP Server with Node JS using HTTP APIs\n\nHTTP protocol (http://nodejs.org/api/http.html) \nTo use the HTTP server and client one must require('http').\n\n\nHTTP server & HTTPS Server \nURL (http://nodejs.org/api/url.htm) \nThis module has utilities for URL resolution and parsing. Call require('url') to use it.\n\n\nQuery String (http://nodejs.org/api/querystring.html) \nThis module provides utilities for dealing with query strings. Call require('querystring') to use it\n\n\n\n9. File System\n\nBasic (http://nodejs.org/api/fs.html) \nTo use this module do require('fs'). \nAll the methods have asynchronous and synchronous forms.\n\n\nSynchronous vs Asynchronous IO \nFile Read and Write \nUtil (http://nodejs.org/api/util.html) \nPath \nUse require('path') to use this module. \nThis module contains utilities for handling and transforming file paths. \nAlmost all these methods perform only string transformations.\n\n\n\n10. Buffers, Streams, and Events\n\nBuffers for binary Data (http://nodejs.org/api/buffer.html) \nBuffer is used to dealing with binary data  \nBuffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap\n\n\nEvent Emitter(http://nodejs.org/api/events.html) \naddListener \non \nonce \nremoveListener \nremoveAllListeners \nsetMaxListeners \nlisteners \nemit\n\n\nStream (http://nodejs.org/api/stream.html) \nFlowing vs non-flowing streams \nStreams are readable, writable, or both. \nreadable streams  \nhttp responses on the client \nhttp requests on the server \nfs read streams \nzlib streams (https://nodejs.org/api/zlib.html) \ncrypto streams (https://nodejs.org/api/crypto.html) \ntcp sockets \nchild process stdout and stderr \nprocess.stdin\n\n\nwritable streams  \nhttp requests on the client \nhttp responses on the server \nfs write streams \nzlib streams \ncrypto streams \ntcp sockets \nchild process stdin \nprocess.stdout \nprocess.stderr\n\n\nDuplex streams \ntcp sockets \nzlib streams \ncrypto streams\n\n\nTransform streams \nzlib streams \ncrypto streams\n\n\n\n\nFile System and Security (Example - Build one system) \nAPI to upload file \nWrapper to upload file\n\n\nWeb-hooks\n\n11. Multi-Processing in NodeJS\n\nProcess(http://nodejs.org/api/process.html) \nChild Process (http://nodejs.org/api/child_process.html) \nNode provides a tri-directional popen facility through the child_process module. \nIt is possible to stream data through a child's stdin, stdout, and stderr in a fully non-blocking way.\n\n\nCluster API for multi-core servers \nMulti-Processing \nProvides a few basic operating-system related utility functions \nUse require('os') to access this module. (http://nodejs.org/api/os.html)\n\n12. Socket.io, The Front-End & A Chat App\n\nBasic of Socket IO \nExample & Implementation of events, listener, broadcast & emitters\n\n13. Putting It All Together\n\nProblem Statement - Event Management System (NodeJS + Postgres/Mongo DB/MySQL) \nUser \nRegister (User can register) \nLogin (User login) \nLogout (User logout) \nChange Password (User can change his password) \nUpdate Password (When request for reset password is done, to set new password) \nReset Password (In API response send info regarding to update-password)\n\n\nEvent (Authentication required for doing operations on event) \nCreate (User can create Event) \nInvite (Users) // Just store emails and when that user login in he can see his created event list and also events in which he is invited \nList (Invited users when login can see their events as well events events in which they are invited in, also display creator name in list) \nSorting \nDate Filter \nSearch Filter \nEvent Detail + list of users invited (API to get specific event and invites) \nEvent update (Event Update)\n\n\nNotes \nConsider models as per your knowledge \nCreate Postman for above APIs \nAdd the unit test cases for APIs\n\n\n\n\nSkills covered in Node.js tests \nKnowledge of JavaScript \nAsynchronous programming \nManaging databases from Node.js (e.g. MongoDB) \nProcessing data structures \nFunctional programming with JavaScript \nObject-Oriented programming with JavaScript \nUnit Test cases\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/nest-js-for-beginners.html":{"url":"additional-documentation/trainings/nest-js-for-beginners.html","title":"additional-page - Nest JS for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNest JS Training\nPrerequisites\n\nNode JS  \nExpress JS \nTypescript\n\nTopics\n1. Getting Started\n\nIntroduction to Nest JS \nRest API \nMicroservices \nWeb Sockets \nGraphql\n\n\nInstalling the NestJS CLI (command-line interface) \nInstalling Node.js\nInstall NestJS CLI -globally \nGenerating  Nest JS Application\n\n\nWhat’s inside a Nest JS Application\n\n2. Creating a REST API application\n\nPrerequisite: Install Insomnia/Postman \nCreating a Basic Controller \nnest generate controller\n\n\nUse Route Parameters \nHandling Request Body / Payload \nResponse Status Codes \nHandling Update and Delete Requests \nImplement Pagination with Query Parameters \nCreating a Basic Service \nnest generate service {name}\n\n\nSend User-Friendly Error Messages \nEncompass Business-Domain in Modules\ncontrollers - Which you can think of as our API Routes, that we want this module to instantiate. \nexports - Here we can list providers within this current module that should be made available anywhere this module is imported \nimports - Just as we saw in the AppModule, the imports Array gives us the ability to list OTHER modules that THIS module requires. Any exported providers of these imported modules are now fully available here as well. \nproviders - Here we’re going to list our services that need to be instantiated by the Nest injector.  Any providers here will be available only within “THIS” module itself, unless added to the exports array we saw above.\n\n\nIntroduction to Data Transfer Objects \nGenerate a DTO class with the Nest CLI   \nnest g class coffees/dto/create-coffee.dto --no-spec\n\n\nValidate Input Data with Data Transfer Objects \nValidationPipe  \nInstall needed dependencies - npm i class-validator class-transformer\n\n\nHandling Malicious Request Data \nAuto-transform Payloads to DTO instances\n\n\n\n\n\n3. Add PostgreSQL with Type ORM\n\nPrerequisite: Install Docker \nRunning PostgreSQL \nHow to visualize your Postgres Database (GUI) \nhttps://www.pgadmin.org/\n\n\n\n\nIntroducing the Type ORM Module \nCreating a Type ORM Entity \nUsing Repository to Access Database \nCreate a Relation between two Entities \nRelations \nOne-to-one \nOne-to-many or Many-to-one relations \nMany-to-many relations\n\n\n\n\nRetrieve Entities with their Relations \nUsing Cascading Inserts and Updates \nAdding Pagination \nUse Transactions \nAdding Indexes to Entities \nSetting up Migrations\n\n4. Dependency Injection\n\nUnderstand Dependency Injection \nInjector \nContainer \nController \nService\n\n\nControl Nest JS Module Encapsulation \nDiving Into Custom Providers \nStrategy Pattern\n\n\nValue based Providers \nNon-class-based Provider Tokens \nClass Providers \nFactory Providers \nLeverage Async Providers \nCreate a Dynamic Module \nControl Providers Scope \nDiving Deeper Into Request-Scoped Providers\n\n5. Application Configuration\n\nIntroducing the Config Module \nCustom Environment File Paths \nSchema Validation \nUsing the Config Service \nCustom Configuration Files \nConfiguration Namespaces and Partial Registration \nAsynchronously Configure Dynamic Modules\n\n6. Other Building Blocks by Example\n\nIntroducing More Building Blocks \nUnderstanding Binding Techniques \nCatch Exceptions with Filters \nProtect Routes with Guards \nUsing Metadata to Build Generic Guards or Interceptors \nAdd Pointcuts with Interceptors \nHandling Timeouts with Interceptors \nCreating Custom Pipes \nAdd Request Logging with Middleware \nCreate Custom Param Decorators\n\n7. Generating Open API Specification\n\nIntroducing the Swagger Module \nEnabling CLI Plugin \nDecorating Model Properties \nAdding Example Responses \nUsing Tags to Group Resources\n\n8. Testing\n\nIntroduction to Jest \nGetting Started with Test Suites \nAdding Unit Tests \nDiving Into e2e Tests \nCreating our First e2e Test \nImplementing e2e Test Logic\n\n9. Add MongoDB with Mongoose\n\nRunning MongoDB \nIntroducing the Mongoose Module \nCreating a Mongoose Model \nUsing a Mongoose Model to Access MongoDB \nAdding Pagination \nUse Transactions \nAdding Indexes to Schemas\n\nReferences\n\nWho is using Nest in production?\nhttps://learn.nestjs.com/p/fundamentals\nhttps://github.com/juliandavidmr/awesome-nestjs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/git-for-beginners.html":{"url":"additional-documentation/trainings/git-for-beginners.html","title":"additional-page - Git for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nGit Cheat Sheet – 50 Git Commands You Should Know\nGit Cheat Sheet\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
